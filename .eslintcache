[{"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\index.js":"1","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\reportWebVitals.js":"2","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\App.js":"3","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\reducers\\index.js":"4","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\TransactionPage.js":"5","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\ProductPage.js":"6","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\CartPage.js":"7","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\TransactionDetail.js":"8","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\ProductDetail.js":"9","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\reducers\\cartReducer.js":"10","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\reducers\\usersReducer.js":"11","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\reducers\\productsReducer.js":"12","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\reducers\\transactionsReducer.js":"13","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\index.js":"14","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\index.js":"15","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\actions\\index.js":"16","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\cardTransaction.js":"17","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\cardProduct.js":"18","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\modalPayment.js":"19","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\cardCart.js":"20","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\support\\urlApi.js":"21","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\modalCart.js":"22","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\actions\\cartAction.js":"23","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\actions\\productsAction.js":"24","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\actions\\usersAction.js":"25","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\actions\\transactionsAction.js":"26","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\assets\\index.js":"27","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\NotFound\\index.js":"28","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\Home\\index.js":"29","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\ChartAdmin\\index.js":"30","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\Banner\\index.js":"31","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\ResetPassword\\index.js":"32","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\Verify\\index.js":"33","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\CardCategory\\index.js":"34","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\ForgotPassword\\index.js":"35","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\Suggestions\\index.js":"36","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\DashboardAdmin\\index.js":"37","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\AdminTransaksi\\index.js":"38","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\Login\\index.js":"39","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\NavbarAdmin\\index.js":"40","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\Footer\\index.js":"41","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\AdminProductDetail\\index.js":"42","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\AdminTransaksiDetail\\index.js":"43","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\Navbar\\index.js":"44","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\AdminProduct\\index.js":"45","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\Register\\index.js":"46","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\AdminAddProduct\\index.js":"47","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\AdminEditProduct\\index.js":"48"},{"size":1081,"mtime":1611583716338,"results":"49","hashOfConfig":"50"},{"size":362,"mtime":499162500000,"results":"51","hashOfConfig":"50"},{"size":3116,"mtime":1612159737842,"results":"52","hashOfConfig":"50"},{"size":366,"mtime":1611583489014,"results":"53","hashOfConfig":"50"},{"size":2141,"mtime":1612150684134,"results":"54","hashOfConfig":"50"},{"size":5023,"mtime":1612171530189,"results":"55","hashOfConfig":"50"},{"size":20464,"mtime":1612159738001,"results":"56","hashOfConfig":"50"},{"size":10818,"mtime":1612150684132,"results":"57","hashOfConfig":"50"},{"size":22250,"mtime":1612165053586,"results":"58","hashOfConfig":"50"},{"size":923,"mtime":1612097556213,"results":"59","hashOfConfig":"50"},{"size":1740,"mtime":1612097556229,"results":"60","hashOfConfig":"50"},{"size":1899,"mtime":1612171339013,"results":"61","hashOfConfig":"50"},{"size":1915,"mtime":1612159737847,"results":"62","hashOfConfig":"50"},{"size":760,"mtime":1612097556210,"results":"63","hashOfConfig":"50"},{"size":484,"mtime":1612097556158,"results":"64","hashOfConfig":"50"},{"size":135,"mtime":1611583489011,"results":"65","hashOfConfig":"50"},{"size":3452,"mtime":1612150684067,"results":"66","hashOfConfig":"50"},{"size":2104,"mtime":1612150684066,"results":"67","hashOfConfig":"50"},{"size":1330,"mtime":1612150684067,"results":"68","hashOfConfig":"50"},{"size":5403,"mtime":1612099244080,"results":"69","hashOfConfig":"50"},{"size":46,"mtime":1611321053306,"results":"70","hashOfConfig":"50"},{"size":6228,"mtime":1612161568656,"results":"71","hashOfConfig":"50"},{"size":3545,"mtime":1612097556211,"results":"72","hashOfConfig":"50"},{"size":4012,"mtime":1612171155400,"results":"73","hashOfConfig":"50"},{"size":4929,"mtime":1612170436227,"results":"74","hashOfConfig":"50"},{"size":6316,"mtime":1612159737965,"results":"75","hashOfConfig":"50"},{"size":709,"mtime":1612099175695,"results":"76","hashOfConfig":"50"},{"size":479,"mtime":1611583716340,"results":"77","hashOfConfig":"50"},{"size":991,"mtime":1612171238968,"results":"78","hashOfConfig":"50"},{"size":0,"mtime":1612097556153,"results":"79","hashOfConfig":"50"},{"size":1403,"mtime":1611583716331,"results":"80","hashOfConfig":"50"},{"size":3993,"mtime":1611325201652,"results":"81","hashOfConfig":"50"},{"size":2998,"mtime":1611583716341,"results":"82","hashOfConfig":"50"},{"size":3096,"mtime":1612097556152,"results":"83","hashOfConfig":"50"},{"size":2655,"mtime":1611324646201,"results":"84","hashOfConfig":"50"},{"size":2597,"mtime":1612097556155,"results":"85","hashOfConfig":"50"},{"size":7735,"mtime":1612159737846,"results":"86","hashOfConfig":"50"},{"size":6181,"mtime":1612159737844,"results":"87","hashOfConfig":"50"},{"size":4112,"mtime":1612097556154,"results":"88","hashOfConfig":"50"},{"size":3253,"mtime":1612159737843,"results":"89","hashOfConfig":"50"},{"size":486,"mtime":1612159737843,"results":"90","hashOfConfig":"50"},{"size":10261,"mtime":1612159737844,"results":"91","hashOfConfig":"50"},{"size":11410,"mtime":1612159737845,"results":"92","hashOfConfig":"50"},{"size":15353,"mtime":1612164998553,"results":"93","hashOfConfig":"50"},{"size":9982,"mtime":1612097556163,"results":"94","hashOfConfig":"50"},{"size":12951,"mtime":1612097556199,"results":"95","hashOfConfig":"50"},{"size":18312,"mtime":1612097556159,"results":"96","hashOfConfig":"50"},{"size":19801,"mtime":1612097556162,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"2zv604",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"100"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"100"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"100"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"100"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"100"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"100"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"100"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"100"},"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\index.js",[],["217","218"],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\reportWebVitals.js",[],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\App.js",["219"],"import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport ProductPage from './pages/ProductPage';\r\nimport ProductDetail from './pages/ProductDetail';\r\nimport { Footer, Navbar } from './components';\r\nimport {\r\n  Home,\r\n  Register,\r\n  ResetPassword,\r\n  NotFound,\r\n  DashboardAdmin,\r\n  Verify,\r\n  AdminProduct,\r\n  AdminProductDetail,\r\n  AdminAddProduct,\r\n  AdminEditProduct,\r\n  AdminTransaksi,\r\n  AdminTransaksiDetail,\r\n} from './pages';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getAllProducts,\r\n  keepLogin,\r\n  getCategory,\r\n  getCart,\r\n  getAllTransaction,\r\n  getReportTrx,\r\n  getCustomProducts,\r\n  getReportChart,\r\n} from './redux/actions';\r\nimport CartPage from './pages/CartPage';\r\nimport TransactionPage from './pages/TransactionPage';\r\nimport TransactionDetail from './pages/TransactionDetail';\r\n\r\nconst App = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(keepLogin());\r\n    dispatch(getAllProducts());\r\n    dispatch(getCategory());\r\n    dispatch(getCart());\r\n    dispatch(getAllTransaction());\r\n    dispatch(getReportTrx());\r\n    dispatch(getCustomProducts());\r\n    dispatch(getReportChart());\r\n  }, []);\r\n\r\n  const { role } = useSelector(({ usersReducer }) => {\r\n    return {\r\n      role: usersReducer.role,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {role !== 'admin' && <Navbar />}\r\n      <Switch>\r\n        <Route\r\n          path='/'\r\n          exact\r\n          component={role === 'admin' ? DashboardAdmin : Home}\r\n        />\r\n        <Route path='/products' component={ProductPage} />\r\n        <Route path='/product-detail' component={ProductDetail} />\r\n        <Route path='/register' component={Register} />\r\n        <Route path='/reset-password/:iduser' component={ResetPassword} />\r\n        <Route path='/verify/:token' component={Verify} />\r\n\r\n        {/* user role */}\r\n        {role === 'admin' ? (\r\n          <>\r\n            {' '}\r\n            <Route path='/admin' component={DashboardAdmin} />\r\n            <Route path='/admin-product' component={AdminProduct} />\r\n            <Route\r\n              path='/admin-product-detail'\r\n              component={AdminProductDetail}\r\n            />\r\n            <Route path='/admin-add-product' component={AdminAddProduct} />\r\n            <Route\r\n              path='/admin-edit-product/:idproduct'\r\n              component={AdminEditProduct}\r\n            />\r\n            <Route path='/admin-transaksi' component={AdminTransaksi} />\r\n            <Route\r\n              path='/admin-transaksi-detail'\r\n              component={AdminTransaksiDetail}\r\n            />\r\n          </>\r\n        ) : (\r\n          role === 'user' && (\r\n            <>\r\n              <Route path='/order-list' component={TransactionPage} />\r\n              <Route path='/order-detail' component={TransactionDetail} />\r\n              <Route path='/cart' component={CartPage} />\r\n            </>\r\n          )\r\n        )}\r\n        <Route path='*' component={NotFound} />\r\n      </Switch>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\reducers\\index.js",[],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\TransactionPage.js",["220","221","222","223","224","225","226"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card, CardBody, CardImg, CardText, CardTitle, Container, DropdownItem } from 'reactstrap';\r\nimport CardTransaction from '../components/cardTransaction';\r\nimport { getCart, getTransaction } from '../redux/actions';\r\n\r\nconst TransactionPage = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getTransaction())\r\n        dispatch(getCart())\r\n    }, [])\r\n\r\n    const { iduser, cartUser, customProducts, defaultAddress, transactions } = useSelector(state => {\r\n        return {\r\n            iduser: state.usersReducer.iduser,\r\n            cartUser: state.CartReducer.cartUser,\r\n            customProducts: state.ProductsReducer.customProducts,\r\n            defaultAddress: state.usersReducer.defaultAddress[0],\r\n            transactions: state.transactionsReducer.transactions\r\n        }\r\n    })\r\n\r\n    const renderTransaction = () => {\r\n        console.log('cek transactions reducer: ', transactions)\r\n        if (transactions.length > 0) {\r\n            return transactions.map((item, index) => {\r\n                return (\r\n                    <CardTransaction key={index}>{item}</CardTransaction>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className='d-flex'>\r\n            {/* <div className='m-2' style={{flex: 1}}>\r\n                <Card>\r\n                    <CardBody>\r\n                        <CardTitle>Ini Menu User Profil</CardTitle>\r\n                        <DropdownItem divider />\r\n                    </CardBody>\r\n                </Card>\r\n            </div> */}\r\n            <div className='m-2' style={{flex: 4}}>\r\n                <Card>\r\n                    <CardBody style={{position: 'relative'}}>\r\n                        <CardTitle>Daftar Belanja</CardTitle>\r\n                        <DropdownItem divider style={{marginBottom: 20}} />\r\n                        {renderTransaction()}\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TransactionPage;","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\ProductPage.js",["227","228","229"],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\CartPage.js",["230","231","232","233","234","235","236","237"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  CardTitle,\r\n  Container,\r\n  DropdownItem,\r\n  FormGroup,\r\n  Input,\r\n  UncontrolledTooltip,\r\n} from 'reactstrap';\r\nimport {\r\n  addCustomCart,\r\n  addTransaction,\r\n  deleteCart,\r\n  getCart,\r\n  getCustomProducts,\r\n  getDefaultAddress,\r\n  payment,\r\n  getCustomCart,\r\n  updateNote,\r\n  updateQty,\r\n  deleteCustomCart,\r\n  keepLogin,\r\n} from '../redux/actions';\r\nimport Swal from 'sweetalert2';\r\nimport CardCart from '../components/cardCart';\r\nimport ModalPayment from '../components/modalPayment';\r\n\r\nconst CartPage = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // cart resep function\r\n  const [resepList, setResepList] = useState([]);\r\n  const [qtyCapsule, setQtyCapsule] = useState(12); //tbcartCustom : qty_kapsul\r\n  const [subtotal, setSubtotal] = useState(0); //tbcartCustom : total_harga\r\n\r\n  // cart resep button\r\n  const [confirmRecipe, setConfirmRecipe] = useState(false); // disable tombol konfirmasi\r\n  const [disableInput, setDisableInput] = useState(false);\r\n\r\n  // modal\r\n  const [modal, setModal] = useState(false);\r\n  const toggleModal = () => setModal(!modal);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(keepLogin());\r\n    dispatch(getCustomProducts());\r\n    dispatch(getDefaultAddress());\r\n    dispatch(getCustomCart());\r\n    dispatch(getCart());\r\n  }, []);\r\n\r\n  const {\r\n    iduser,\r\n    cartUser,\r\n    customProducts,\r\n    defaultAddress,\r\n    idpayment,\r\n    customCart,\r\n  } = useSelector((state) => {\r\n    return {\r\n      iduser: state.usersReducer.iduser,\r\n      cartUser: state.CartReducer.cartUser,\r\n      customProducts: state.ProductsReducer.customProducts,\r\n      defaultAddress: state.usersReducer.defaultAddress,\r\n      idpayment: state.transactionsReducer.idpayment,\r\n      customCart: state.CartReducer.customCart,\r\n    };\r\n  });\r\n\r\n  // ====================================================================================\r\n  // KERANJANG UMUM\r\n  // Empty Cart Condition\r\n  const isCartEmpty = () => {\r\n    if (cartUser.length > 0) {\r\n      return (\r\n        <>\r\n          <CardBody style={{ overflowY: 'auto', maxHeight: '50vh' }}>\r\n            {renderCart(iduser)}\r\n          </CardBody>\r\n          <DropdownItem divider />\r\n          <CardBody style={{ fontWeight: 'bold' }}>\r\n            <CardText>\r\n              <span>Subtotal</span>\r\n              <span style={{ float: 'right' }}>\r\n                Rp{totalPrice1().toLocaleString()}\r\n              </span>\r\n            </CardText>\r\n          </CardBody>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <CardBody style={{ textAlign: 'center' }}>\r\n            <h5>Keranjangmu Kosong nih</h5>\r\n            <Link\r\n              to='/products?idcategory=1'\r\n              style={{ textDecoration: 'none' }}\r\n            >\r\n              <Button color='success' outline block>\r\n                Mulai Belanja\r\n              </Button>\r\n            </Link>\r\n          </CardBody>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n  // Render card\r\n  const renderCart = (iduser) => {\r\n    if (cartUser.length > 0) {\r\n      // console.log('cek default address: ', defaultAddress)\r\n      return cartUser.map((item, index) => {\r\n        return <CardCart key={index}>{item}</CardCart>;\r\n      });\r\n    }\r\n  };\r\n  // Total Price1 Function\r\n  const totalPrice1 = () => {\r\n    let totalPrice = 0;\r\n    cartUser.forEach((e) => {\r\n      totalPrice += e.price_pcs * e.qty;\r\n    });\r\n    return totalPrice;\r\n  };\r\n  //tooltip\r\n  const toolTipBin = () => {\r\n    if (cartUser.length > 0) {\r\n      return (\r\n        <UncontrolledTooltip placement='top' target='trashbinImage'>\r\n          Delete item(s)\r\n        </UncontrolledTooltip>\r\n      );\r\n    }\r\n  };\r\n\r\n  // ====================================================================================\r\n  // KERANJANG CUSTOM ORDER\r\n\r\n  // Titlecase Function\r\n  const toTitleCase = (str) => {\r\n    return str.replace(/\\w\\S*/g, function (txt) {\r\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n    });\r\n  };\r\n\r\n  const renderListInput = () => {\r\n    if (customCart.length > 0) {\r\n      return customCart.map((item, index) => {\r\n        return (\r\n          <div className='d-flex my-2'>\r\n            <Input\r\n              disabled={true}\r\n              type='select'\r\n              name={`select`}\r\n              defaultValue={item.name}\r\n              style={{ flex: 8, marginRight: 20, letterSpacing: 1.5 }}\r\n            >\r\n              <option>{toTitleCase(item.name)}</option>\r\n            </Input>\r\n            <Input\r\n              disabled={true}\r\n              type='text'\r\n              defaultValue={item.qty_per_satuan}\r\n              style={{ flex: 1, textAlign: 'center', letterSpacing: 1.5 }}\r\n            />\r\n          </div>\r\n        );\r\n      });\r\n    } else {\r\n      return resepList.map((e, index) => {\r\n        return (\r\n          <div className='d-flex my-2'>\r\n            <Input\r\n              disabled={false}\r\n              type='select'\r\n              name={`select`}\r\n              onChange={(e) => handleBahan(e, index)}\r\n              style={{ flex: 8, marginRight: 20, letterSpacing: 1.5, fontSize: 14 }}\r\n            >\r\n              <option> Masukkan Bahan... </option>\r\n              {renderCustomProduct()}\r\n            </Input>\r\n            <Input\r\n              disabled={false}\r\n              type='number'\r\n              onChange={(e) => {\r\n                handleQty(e, index);\r\n                subTotalResep();\r\n              }}\r\n              style={{ flex: 1, textAlign: 'center', letterSpacing: 1.5 }}\r\n            />\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderCustomProduct = () => {\r\n    if (customProducts) {\r\n      return customProducts.map((item, index) => {\r\n        return (\r\n          <option key={index} value={item.idproduct}>\r\n            {toTitleCase(item.name)} ({item.satuan})\r\n          </option>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBahan = (e, index) => {\r\n    console.log('handlebahan: e => ', e.target.value, index);\r\n    let list = [...resepList];\r\n    list[index].idproduct = e.target.value;\r\n  };\r\n\r\n  const handleQty = (e, index) => {\r\n    console.log('handleqty: e => ', e.target.value, index);\r\n    let list = [...resepList];\r\n    list[index].qty = e.target.value;\r\n    console.log('cek reseplist handleqty: ', resepList);\r\n  };\r\n\r\n  const handleResep = (iduser) => {\r\n    let list = [...resepList];\r\n\r\n    list.push({ iduser, idproduct: null, qty: null });\r\n    setResepList(list);\r\n  };\r\n\r\n  const subTotalResep = (e) => {\r\n    let list = [...resepList];\r\n    let subtotal = 0;\r\n    if (customProducts) {\r\n      customProducts.forEach((item) => {\r\n        list.forEach((element) => {\r\n          if (parseInt(item.idproduct) === parseInt(element.idproduct)) {\r\n            subtotal += element.qty * item.price_per_satuan;\r\n          }\r\n        });\r\n      });\r\n    }\r\n    console.log('satuan', subtotal);\r\n    console.log('qtycapsule', qtyCapsule);\r\n    console.log('subtotal', subtotal * qtyCapsule);\r\n    setSubtotal(subtotal * qtyCapsule);\r\n  };\r\n\r\n  const btConfirmRecipe = () => {\r\n    // resepList : [iduser, idproduct, qty]\r\n    let cartCustom = [\r\n      {\r\n        iduser: iduser ? iduser : resepList[0].iduser,\r\n        qty_kapsul: qtyCapsule,\r\n        total_harga: subtotal,\r\n      },\r\n    ];\r\n    let cartCustom_detail = [];\r\n    let obj = {};\r\n\r\n    resepList.forEach((item, index) => {\r\n      obj['idproduct'] = item.idproduct;\r\n      obj['qty_per_satuan'] = item.qty;\r\n      customProducts.forEach((e) => {\r\n        if (parseInt(e.idproduct) === parseInt(item.idproduct)) {\r\n          obj['total_price_satuan'] = e.price_per_satuan * item.qty;\r\n        }\r\n      });\r\n      cartCustom_detail.push(obj);\r\n      obj = {};\r\n    });\r\n\r\n    console.log(\r\n      'cek bawaan button konfirmasi resep: ',\r\n      cartCustom,\r\n      cartCustom_detail\r\n    );\r\n    dispatch(addCustomCart(cartCustom, cartCustom_detail));\r\n  };\r\n\r\n  // ====================================================================================\r\n  // INFORMASI PEMBAYARAN & PENGIRIMAN\r\n  // render alamat pengiriman\r\n  const renderAlamat = () => {\r\n    if (defaultAddress) {\r\n      return (\r\n        <>\r\n          <CardTitle>\r\n            <h6>Alamat Pengiriman</h6>\r\n          </CardTitle>\r\n          <DropdownItem divider />\r\n          <CardTitle style={{ fontWeight: 'bold' }}>\r\n            {defaultAddress.name}\r\n          </CardTitle>\r\n          <CardText>{defaultAddress.handphone}</CardText>\r\n          <CardText style={{ fontSize: 16, color: 'darkgrey', marginTop: -10 }}>\r\n            {defaultAddress.alamat_detail}\r\n          </CardText>\r\n          <CardText style={{ fontSize: 16, color: 'darkgrey', marginTop: -15 }}>\r\n            {defaultAddress.kecamatan} - {defaultAddress.kota}\r\n          </CardText>\r\n          <CardText style={{ fontSize: 16, color: 'darkgrey', marginTop: -15 }}>\r\n            {defaultAddress.provinsi} - {defaultAddress.kode_pos}\r\n          </CardText>\r\n          {/* <DropdownItem style={{ marginBottom: 20 }} divider /> */}\r\n          {/* <>\r\n            <Button color='secondary' outline>\r\n              Pilih Alamat Lain\r\n            </Button>\r\n            <Button color='secondary' outline style={{ float: 'right' }}>\r\n              + Tambah Alamat\r\n            </Button>\r\n          </> */}\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  // ====================================================================================\r\n  // CHECKOUT\r\n  const totalHarga = () => {\r\n    let totalHarga = 0;\r\n    {\r\n      customCart.length > 0\r\n        ? (totalHarga = totalPrice1() + customCart[0].total_harga)\r\n        : (totalHarga = totalPrice1());\r\n    }\r\n    return totalHarga;\r\n  };\r\n  const totalOngkir = () => {\r\n    return 10000;\r\n  };\r\n  const checkOut = () => {\r\n    let checkoutcart = [];\r\n    let checkoutcustom = [];\r\n    let obj = {};\r\n    let idCart = [];\r\n    let idcartCustom = 0;\r\n    let ongkir = totalOngkir();\r\n    let total_payment = 0;\r\n    let transaction_type = '';\r\n\r\n    if (customCart.length > 0 && cartUser.length > 0) {\r\n      console.log('cek 2 tipe terbaca');\r\n      cartUser.forEach((item, index) => {\r\n        obj['idproduct'] = item.idproduct;\r\n        obj['iduser'] = item.iduser;\r\n        obj['note'] = item.note;\r\n        obj['qty_qo'] = item.qty;\r\n        obj['total_price'] = item.qty * item.price_pcs;\r\n        checkoutcart.push(obj);\r\n        idCart.push(item.idcart);\r\n        obj = {};\r\n      });\r\n\r\n      customCart.forEach((item) => {\r\n        obj['idproduct'] = item.idproduct;\r\n        obj['iduser'] = item.iduser;\r\n        obj['qty_co'] = item.qty_per_satuan * item.qty_kapsul;\r\n        obj['total_price'] = item.total_price_satuan * item.qty_kapsul;\r\n        checkoutcustom.push(obj);\r\n        obj = {};\r\n      });\r\n      idcartCustom = customCart[0].idcartCustom;\r\n      transaction_type = 'ALL';\r\n      total_payment = totalOngkir() + totalHarga() + subtotal;\r\n      console.log(\r\n        'cek bawaan button checkout ALL: ',\r\n        checkoutcart,\r\n        checkoutcustom,\r\n        idCart,\r\n        idcartCustom,\r\n        ongkir,\r\n        total_payment,\r\n        defaultAddress.iduser_address,\r\n        transaction_type\r\n      );\r\n      dispatch(\r\n        addTransaction(checkoutcart, idCart, ongkir, total_payment, defaultAddress.iduser_address, transaction_type, checkoutcustom, idcartCustom));\r\n    } else if (cartUser.length > 0) {\r\n      console.log('cartuser terbaca');\r\n      cartUser.forEach((item, index) => {\r\n        obj['idproduct'] = item.idproduct;\r\n        obj['iduser'] = item.iduser;\r\n        obj['note'] = item.note;\r\n        obj['qty_qo'] = item.qty;\r\n        obj['total_price'] = item.qty * item.price_pcs;\r\n        checkoutcart.push(obj);\r\n        idCart.push(item.idcart);\r\n        obj = {};\r\n      });\r\n      total_payment = totalOngkir() + totalHarga();\r\n      transaction_type = 'QO';\r\n      console.log(\r\n        'cek bawaan button checkout: ',\r\n        checkoutcart,\r\n        idCart,\r\n        ongkir,\r\n        total_payment,\r\n        defaultAddress.iduser_address,\r\n        transaction_type\r\n      );\r\n      dispatch(\r\n        addTransaction(\r\n          checkoutcart,\r\n          idCart,\r\n          ongkir,\r\n          total_payment,\r\n          defaultAddress.iduser_address,\r\n          transaction_type\r\n        )\r\n      );\r\n    } else if (customCart.length > 0) {\r\n      customCart.forEach((item) => {\r\n        obj['idproduct'] = item.idproduct;\r\n        obj['iduser'] = item.iduser;\r\n        obj['qty_co'] = item.qty_per_satuan * item.qty_kapsul;\r\n        obj['total_price'] = item.total_price_satuan * item.qty_kapsul;\r\n        checkoutcustom.push(obj);\r\n        obj = {};\r\n      });\r\n      idcartCustom = customCart[0].idcartCustom;\r\n      total_payment = totalOngkir() + subtotal;\r\n      transaction_type = 'CO';\r\n      console.log(\r\n        'cek bawaan button checkout custom: ',\r\n        checkoutcustom,\r\n        idcartCustom,\r\n        ongkir,\r\n        total_payment,\r\n        defaultAddress.iduser_address,\r\n        transaction_type\r\n      );\r\n\r\n      dispatch(\r\n        addTransaction(\r\n          checkoutcustom,\r\n          idcartCustom,\r\n          ongkir,\r\n          total_payment,\r\n          defaultAddress.iduser_address,\r\n          transaction_type\r\n        )\r\n      );\r\n    }\r\n  };\r\n  const paymentSuccess = () => {\r\n    let timerInterval;\r\n    Swal.fire({\r\n      title: 'Payment in Progress',\r\n      html: 'I will close after payment confirmed.',\r\n      timer: 3000,\r\n      timerProgressBar: true,\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n        timerInterval = setInterval(() => {\r\n          const content = Swal.getContent();\r\n          if (content) {\r\n            const b = content.querySelector('b');\r\n            if (b) {\r\n              b.textContent = Swal.getTimerLeft();\r\n            }\r\n          }\r\n        }, 100);\r\n      },\r\n      willClose: () => {\r\n        clearInterval(timerInterval);\r\n      },\r\n    });\r\n    setTimeout(\r\n      () =>\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Your Payment Has Been Confirmed',\r\n          showConfirmButton: false,\r\n          timer: 2000,\r\n        }),\r\n      3000\r\n    );\r\n\r\n    setTimeout(() => setRedirect(true), 5000);\r\n  };\r\n\r\n  if (redirect) {\r\n    return <Redirect to='order-list' />;\r\n  }\r\n\r\n  return (\r\n    <Container className='d-flex'>\r\n      {/* KERANJANG */}\r\n      <div style={{ flex: 2, marginTop: 20 }}>\r\n        <h3 style={{ color: '#27ae60' }}>Keranjang</h3>\r\n        <Card>{isCartEmpty()}</Card>\r\n\r\n        <h3 style={{ marginTop: 35, color: '#e74c3c' }}>\r\n          Resep Dokter\r\n        </h3>\r\n        <Card style={{ marginBottom: 100 }}>\r\n          <CardBody\r\n            style={{ overflowY: 'auto', maxHeight: '50vh', letterSpacing: 1.5 }}\r\n          >\r\n            <FormGroup>\r\n              <h6 style={{ display: 'flex', marginBottom: 20 }}>\r\n                <span style={{ flex: 3 }}>Bahan Resep :</span>\r\n                <span style={{ flex: 2, textAlign: 'right' }}>\r\n                  <span style={{ paddingRight: 5 }}>Jumlah Dosis :</span>\r\n                  <input\r\n                    type='text'\r\n                    style={{ paddingRight: 5 }}\r\n                    disabled={disableInput}\r\n                    onKeyUp={subTotalResep}\r\n                    defaultValue={qtyCapsule}\r\n                    onChange={(e) => setQtyCapsule(e.target.value)}\r\n                    style={{ width: 50, textAlign: 'center' }}\r\n                  />\r\n                  <span style={{ marginLeft: 10 }}>Kapsul</span>\r\n                </span>\r\n              </h6>\r\n              {renderListInput()}\r\n            </FormGroup>\r\n            {\r\n              customCart.length > 0 ? (\r\n                <Button\r\n                  block\r\n                  outline\r\n                  color='danger'\r\n                  onClick={() => {\r\n                    dispatch(deleteCustomCart(customCart[0].idcartCustom));\r\n                    setResepList([]);\r\n                    window.location.reload(false);\r\n                  }}\r\n                >\r\n                  Hapus Resep\r\n                </Button>\r\n              ) : (\r\n                  <Button\r\n                    block\r\n                    outline\r\n                    color='secondary'\r\n                    onClick={() => handleResep(iduser)}\r\n                  >\r\n                    + Bahan Resep\r\n                  </Button>\r\n                )\r\n              // <Button block outline color='secondary' onClick={() => handleResep(cartUser[0].iduser)}>+ Bahan Resep</Button>\r\n            }\r\n          </CardBody>\r\n          <DropdownItem divider />\r\n          <CardBody style={{ fontWeight: 'bold' }}>\r\n            <CardText>\r\n              <span>Subtotal</span>\r\n              <span style={{ float: 'right' }}>\r\n                Rp{' '}\r\n                {customCart.length > 0\r\n                  ? customCart[0].total_harga.toLocaleString()\r\n                  : subtotal.toLocaleString()}\r\n              </span>\r\n            </CardText>\r\n          </CardBody>\r\n          <CardBody>\r\n            {resepList && resepList.length >= 2 && (\r\n              <Button\r\n                disabled={confirmRecipe}\r\n                block\r\n                color='success'\r\n                onClick={() => {\r\n                  btConfirmRecipe();\r\n                  setConfirmRecipe(!confirmRecipe);\r\n                  setDisableInput(true);\r\n                  dispatch(getCustomCart());\r\n                }}\r\n              >\r\n                Konfirmasi Resep\r\n              </Button>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* INFORMASI CHECKOUT */}\r\n      <div style={{ flex: 1, marginTop: 60, marginLeft: 30 }}>\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle>\r\n              <h5>Ringkasan Pembayaran</h5>\r\n            </CardTitle>\r\n            <CardText>\r\n              <span>Total Harga</span>\r\n              <span style={{ float: 'right' }}>\r\n                Rp{totalHarga().toLocaleString()}\r\n              </span>\r\n            </CardText>\r\n            <CardText>\r\n              <span>Ongkos Kirim</span>\r\n              <span style={{ float: 'right' }}>\r\n                Rp{\r\n                  totalHarga() !== 0 &&\r\n                  totalOngkir().toLocaleString()\r\n                }\r\n              </span>\r\n            </CardText>\r\n            <DropdownItem divider />\r\n            <CardText style={{ fontSize: 20, fontWeight: '500' }}>\r\n              <span>Total Tagihan</span>\r\n              <span style={{ float: 'right' }}>\r\n                Rp{\r\n                  totalHarga() !== 0 &&\r\n                  (totalHarga() + totalOngkir()).toLocaleString()\r\n                }\r\n              </span>\r\n            </CardText>\r\n          </CardBody>\r\n        </Card>\r\n        <CardBody style={{ marginTop: 30 }}>{renderAlamat()}</CardBody>\r\n        <CardBody style={{ marginTop: 30 }}>\r\n          <CardTitle>\r\n            <h6>Metode Pembayaran</h6>\r\n          </CardTitle>\r\n          <DropdownItem divider />\r\n          <>\r\n            <img\r\n              src='https://media.hitekno.com/thumbs/2019/03/21/96220-logo-go-pay/350x230-img-96220-logo-go-pay.jpg'\r\n              width='25%'\r\n              style={{ marginTop: -5 }}\r\n            />\r\n            {/* <Button color='success' outline style={{ float: 'right' }}>\r\n              Pilih Metode\r\n            </Button> */}\r\n          </>\r\n        </CardBody>\r\n        <Button\r\n          color='danger'\r\n          block\r\n          style={{ marginTop: 20 }}\r\n          onClick={() => {\r\n            checkOut();\r\n            toggleModal();\r\n          }}\r\n        >\r\n          <i\r\n            className='material-icons'\r\n            style={{\r\n              fontSize: 25,\r\n              color: 'white',\r\n              position: 'relative',\r\n              top: 5,\r\n              right: 25,\r\n            }}\r\n          >\r\n            verified_user\r\n          </i>\r\n          Konfirmasi Pesanan\r\n        </Button>\r\n      </div>\r\n\r\n      {toolTipBin()}\r\n\r\n      {/* MODAL PAYMENT */}\r\n      <ModalPayment\r\n        modal={modal}\r\n        toggleModal={toggleModal}\r\n        idpayment={idpayment}\r\n        paymentSuccess={paymentSuccess}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\TransactionDetail.js",["238","239","240","241","242","243","244","245","246","247"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, DropdownItem } from 'reactstrap';\r\nimport { getDefaultAddress, getDetailTransaction, payment } from '../redux/actions';\r\nimport { not_pay_yet, paid } from '../assets'\r\nimport Moment from 'moment';\r\nimport { API_URL } from '../support/urlApi';\r\nimport ModalPayment from '../components/modalPayment';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nconst TransactionDetail = (props) => {\r\n    Moment.locale('id')\r\n    console.log(props.location.search) //?idtransaction=1\r\n\r\n    // modal\r\n    const [modal, setModal] = useState(false);\r\n    const toggleModal = () => setModal(!modal);\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getDetailTransaction(props.location.search))\r\n        dispatch(getDefaultAddress())\r\n\r\n    }, [])\r\n\r\n    const { iduser, detailTransaction, defaultAddress } = useSelector(state => {\r\n        return {\r\n            detailTransaction: state.transactionsReducer.detailTransaction,\r\n            iduser: state.usersReducer.iduser,\r\n            defaultAddress: state.usersReducer.defaultAddress[0]\r\n        }\r\n    })\r\n\r\n    const countProduct = () => {\r\n        let count = 0\r\n        detailTransaction[0].products.forEach(e => {\r\n            count += 1\r\n        })\r\n        return count\r\n    }\r\n\r\n\r\n\r\n    const renderProductDetail = () => {\r\n        return detailTransaction[0].products.map((item, index) => {\r\n            return (\r\n                <div className='d-flex' key={index} style={{ fontSize: 13, marginRight: 25 }}>\r\n                    <div style={{ flex: 1, marginLeft: 5 }}>\r\n                        {\r\n                            item.product_image === null ?\r\n                                <img width='40%' src={'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT8kDX11rAgv8YY1KYqyauOMcASpPp6w-_52Q&usqp=CAU'} />\r\n                                :\r\n                                <img width='40%' src={API_URL + item.product_image} />\r\n                        }\r\n                    </div>\r\n                    <div style={{ flex: 3 }}>\r\n                        <p>{item.name}</p>\r\n                        <p style={{ color: 'grey', marginTop: -20 }}>\r\n                            x {item.qty_co === null ? item.qty_qo : item.qty_co} {item.qty_co !== null ? item.name !== 'BIOSYAFA G10' ? item.name !== 'BIOZIME' ? 'mg' : 'ml' : 'ml' : 'kemasan'}\r\n                        </p>\r\n                    </div>\r\n                    <div style={{ flex: 1, fontWeight: 'bold', textAlign: 'right', fontSize: 13 }}>\r\n                        <p>Rp {parseInt(item.total_price).toLocaleString()}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const renderAlamat = () => {\r\n        if (defaultAddress) {\r\n            return <>\r\n                <CardTitle><h6>Alamat Pengiriman</h6></CardTitle>\r\n                <CardText style={{ fontSize: 13, color: 'darkgrey' }}>{defaultAddress.alamat_detail}</CardText>\r\n                <CardText style={{ fontSize: 13, color: 'darkgrey', marginTop: -15 }}>{defaultAddress.kecamatan} - {defaultAddress.kota}</CardText>\r\n                <CardText style={{ fontSize: 13, color: 'darkgrey', marginTop: -15 }}>{defaultAddress.provinsi} - {defaultAddress.kode_pos}</CardText>\r\n            </>\r\n        }\r\n    }\r\n\r\n    const renderTransactionDetail = () => {\r\n        return <Card>\r\n            <CardBody >\r\n                <div style={{ textAlign: 'center' }}>\r\n                    {\r\n                        detailTransaction[0].payment_status == 'unpaid' ?\r\n                            <>\r\n                                <img width=\"20%\" src={not_pay_yet} alt={detailTransaction[0].payment_status} style={{ marginBottom: 25 }} />\r\n                                <CardTitle style={{ color: 'red' }} >PESANAN BELUM DIBAYAR</CardTitle>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <img width=\"20%\" src={paid} alt={detailTransaction[0].payment_status} />\r\n                                <CardTitle style={{ color: 'darkgreen' }}>PESANAN SUDAH DIBAYAR</CardTitle>\r\n                                <p style={{ fontSize: 13 }}>INVOICE NUMBER : {detailTransaction[0].invoice_number}</p>\r\n\r\n                            </>\r\n                    }\r\n                </div>\r\n                <DropdownItem divider style={{ marginTop: 20, marginBottom: 20 }} />\r\n                <div className='d-flex'>\r\n                    <div style={{ flex: 1 }}>\r\n                        <h6>\r\n                            {\r\n                                detailTransaction[0].transaction_type === 'CO' ?\r\n                                    \"Pesanan Obat Resep\"\r\n                                    : detailTransaction[0].transaction_type === 'QO' ?\r\n                                        \"Pesanan Obat\"\r\n                                        :\r\n                                        \"Pesanan Obat Umum & Resep\"\r\n                            }\r\n                        </h6>\r\n\r\n                        {/* <p style={{ fontSize: 13 }}>{detailTransaction[0].invoice_number}</p> */}\r\n                        <p style={{ fontSize: 13, color: 'grey' }}>{Moment(detailTransaction[0].created_at).zone('+1400').format('ll')}, {Moment(detailTransaction[0].created_at).zone('+1400').format('LT')} WIB</p>\r\n                        {/* <p style={{ fontSize: 12, color: 'grey', marginTop: -18 }}>{countProduct()} produk, Rp {parseInt(detailTransaction[0].total_payment).toLocaleString()}</p> */}\r\n                        <p style={{ fontSize: 12, color: 'grey', marginTop: -18 }}>{countProduct()} produk</p>\r\n                        <p>Daftar Pesanan</p>\r\n                        {renderProductDetail()}\r\n                        {\r\n                            detailTransaction[0].transaction_type === 'CO' ?\r\n                                <>\r\n                                    <p>Catatan apotek</p>\r\n                                    <p>3x1</p>\r\n                                </>\r\n                                :\r\n                                detailTransaction[0].transaction_type === 'ALL' ?\r\n                                    <>\r\n                                        <p>Catatan apotek</p>\r\n                                        <p>3x1</p>\r\n                                    </>\r\n                                    :\r\n                                    null\r\n                        }\r\n                    </div>\r\n                    <div style={{ flex: 1 }}>\r\n                        <h6>Ringkasan Pembayaran</h6>\r\n                        <div className='d-flex' style={{ fontSize: 13 }}>\r\n                            <div style={{ flex: 1 }}>\r\n                                <p>Subtotal</p>\r\n                                <p>Ongkos Kirim</p>\r\n                                <h6>Total</h6>\r\n                            </div>\r\n                            <div style={{ flex: 1, textAlign: 'right' }}>\r\n                                <p>Rp {parseInt(detailTransaction[0].total_payment - detailTransaction[0].ongkir).toLocaleString()}</p>\r\n                                <p>Rp {parseInt(detailTransaction[0].ongkir).toLocaleString()}</p>\r\n                                <h6>Rp {parseInt(detailTransaction[0].total_payment).toLocaleString()}</h6>\r\n                            </div>\r\n                        </div>\r\n                        <DropdownItem divider />\r\n                        {\r\n                            detailTransaction[0].payment_status == 'paid' &&\r\n\r\n                            <div className='d-flex'>\r\n                                <p style={{ flex: 1 }}>metode pembayaran</p>\r\n                                <div style={{ flex: 1, textAlign: 'right' }}>\r\n                                    <img src='https://media.hitekno.com/thumbs/2019/03/21/96220-logo-go-pay/350x230-img-96220-logo-go-pay.jpg' width='25%' style={{ textAlign: 'right', marginTop: -5 }} />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div>\r\n                            {renderAlamat()}\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </CardBody>\r\n            {\r\n                detailTransaction[0].payment_status == 'unpaid' &&\r\n                <Button block color='success'\r\n                    style={{ marginTop: 20, marginBottom: 20, marginLeft: '5%', width: '90%', justifyContent: 'center' }}\r\n                    onClick={toggleModal}\r\n                >\r\n                    <i className='material-icons' style={{ fontSize: 25, color: 'white', position: 'relative', top: 5, right: 10 }}>verified_user</i>\r\n                    Lakukan Pembayaran Menggunakan Go-Pay\r\n                    </Button>\r\n            }\r\n        </Card>\r\n    }\r\n\r\n    const paymentSuccess = () => {\r\n        let timerInterval;\r\n        Swal.fire({\r\n            title: 'Payment in Progress',\r\n            html: 'I will close after payment confirmed.',\r\n            timer: 3000,\r\n            timerProgressBar: true,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n                timerInterval = setInterval(() => {\r\n                    const content = Swal.getContent();\r\n                    if (content) {\r\n                        const b = content.querySelector('b');\r\n                        if (b) {\r\n                            b.textContent = Swal.getTimerLeft();\r\n                        }\r\n                    }\r\n                }, 100);\r\n            },\r\n            willClose: () => {\r\n                clearInterval(timerInterval);\r\n            },\r\n        });\r\n        setTimeout(\r\n            () =>\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Your Payment Has Been Confirmed',\r\n                    showConfirmButton: false,\r\n                    timer: 2000,\r\n                }),\r\n            3000\r\n        );\r\n\r\n        setTimeout(() => window.location.reload(false), 5000);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <h6 style={{ marginBottom: 20, marginTop: 20 }}>DETAIL TRANSAKSI</h6>\r\n            {\r\n                detailTransaction.length > 0 && renderTransactionDetail()\r\n            }\r\n            {\r\n                detailTransaction.length > 0 &&\r\n                <ModalPayment\r\n                    modal={modal}\r\n                    toggleModal={toggleModal}\r\n                    idpayment={detailTransaction[0].idtransaction}\r\n                    paymentSuccess={paymentSuccess}\r\n                />\r\n            }\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TransactionDetail;","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\ProductDetail.js",["248","249","250"],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\reducers\\cartReducer.js",["251"],"const INITIAL_STATE = {\r\n  cartUser: [],\r\n  customCart: [],\r\n  // refresh: false,\r\n  // totalPayment: 0,\r\n  // success: false,\r\n  // error: '',\r\n  // message: ''\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'GET_CART':\r\n      console.log('CEK GET_CART REDUCER: ', action.payload);\r\n      return {\r\n        ...state,\r\n        cartUser: action.payload,\r\n      };\r\n    case 'GET_CUSTOM_CART':\r\n      console.log('CEK GET_CUSTOM_CART REDUCER: ', action.payload);\r\n      return {\r\n        ...state,\r\n        customCart: action.payload,\r\n      };\r\n    case 'ADD_CUSTOM_CART':\r\n      console.log('CEK ADD_CUSTOM_CART REDUCER: ', action.payload);\r\n      return {\r\n        ...state,\r\n        customCart: action.payload,\r\n      };\r\n    case 'RESET_CART':\r\n      console.log('RESET REDUCER: ', INITIAL_STATE);\r\n      return INITIAL_STATE;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\reducers\\usersReducer.js",["252"],"const INITIAL_STATE = {\r\n  iduser: '',\r\n  name: null,\r\n  email: '',\r\n  handphone: '',\r\n  role: '',\r\n  isActive: false,\r\n  errorMessage: '',\r\n  errorStatus: null,\r\n  defaultAddress: [],\r\n  cartUser: [],\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'REGISTER_SUCCESS':\r\n    case 'LOGIN_SUCCESS':\r\n    case 'KEEP_LOGIN':\r\n      return {\r\n        ...state,\r\n        iduser: action.payload.user.iduser,\r\n        name: action.payload.user.name,\r\n        email: action.payload.user.email,\r\n        handphone: action.payload.user.handphone,\r\n        role: action.payload.user.role,\r\n        isActive: action.payload.user.isActive,\r\n        errorStatus: action.payload.error,\r\n        errorMessage: action.payload.message,\r\n      };\r\n    case 'ACCOUNT_VERIFY_SUCCESS':\r\n    case 'FORGOT_PASSWORD_SUCCESS':\r\n    case 'RESET_PASSWORD_SUCCESS':\r\n      return {\r\n        ...state,\r\n        errorMessage: action.payload.message,\r\n        errorStatus: action.payload.error,\r\n      };\r\n    case 'REGISTER_FAILED':\r\n    case 'FORGOT_PASSWORD_FAILED':\r\n    case 'LOGIN_FAILED':\r\n      console.log('fail forgot password', action.payload);\r\n      return {\r\n        ...state,\r\n        errorMessage: action.payload.message,\r\n        errorStatus: action.payload.error,\r\n      };\r\n    case 'GET_DEFAULT_ADDRESS':\r\n      // console.log('defaultadress', action.payload);\r\n      return {\r\n        ...state,\r\n        defaultAddress: action.payload.defaultAddress,\r\n      };\r\n    case 'GET_CART':\r\n      console.log('GET_CART', action.payload);\r\n      return {\r\n        ...state,\r\n        cartUser: action.payload,\r\n      };\r\n    case 'LOGOUT':\r\n      return INITIAL_STATE;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\reducers\\productsReducer.js",["253"],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\reducers\\transactionsReducer.js",["254"],"const INITIAL_STATE = {\r\n  transactions: [],\r\n  allTransaction: [],\r\n  detailTransaction: [],\r\n  allDetailTransaction: [],\r\n  reportTransaction: [],\r\n  reportChart: [],\r\n  error: '',\r\n  message: '',\r\n  success: false,\r\n  idpayment: 0,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'CHECKOUT':\r\n      return {\r\n        ...state,\r\n        success: action.payload.success,\r\n        idpayment: action.payload.idpayment,\r\n        error: action.payload.error,\r\n        message: action.payload.message,\r\n      };\r\n    case 'GET_TRANSACTIONS':\r\n      console.log('transactionReducer.js GET_TRANSACTIONS: ', action.payload);\r\n      return {\r\n        ...state,\r\n        transactions: action.payload,\r\n      };\r\n    case 'GET_DETAIL_TRANSACTION':\r\n      console.log(\r\n        'transactionsReducer.js GET_DETAIL_TRANSACTION: ',\r\n        action.payload\r\n      );\r\n      return {\r\n        ...state,\r\n        detailTransaction: action.payload,\r\n      };\r\n\r\n    // case \"PAY_TRANSACTION\":\r\n    //     console.log(\"transactionReducer.js PAY_TRANSACTION: \", action.payload)\r\n    //     return {\r\n    //         ...state,\r\n\r\n    case 'GET_ALL_TRANSACTION':\r\n      console.log(\r\n        'transactionReducer.js GET_ALL_TRANSACTION: ',\r\n        action.payload\r\n      );\r\n      return {\r\n        ...state,\r\n        allTransaction: action.payload,\r\n      };\r\n    case 'GET_ALL_DETAIL_TRANSACTION':\r\n      console.log(\r\n        'transactionReducer.js GET_ALL_DETAIL_TRANSACTION: ',\r\n        action.payload\r\n      );\r\n      return {\r\n        ...state,\r\n        allDetailTransaction: action.payload,\r\n      };\r\n    case 'GET_REPORT_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        reportTransaction: action.payload,\r\n      };\r\n    case 'GET_REPORT_CHART':\r\n      return {\r\n        ...state,\r\n        reportChart: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\index.js",[],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\index.js",[],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\actions\\index.js",[],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\cardTransaction.js",["255","256"],"import React, { useEffect, useState } from 'react';\r\nimport Moment from 'moment';\r\nimport { Badge, Card, CardBody, CardTitle } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_URL } from '../support/urlApi';\r\n\r\nconst CardTransaction = ({ children }) => {\r\n    Moment.locale('id')\r\n\r\n    const [classCard, setClassCard] = useState('my-3')\r\n    const [posCard, setPosCard] = useState(0)\r\n\r\n    const countProduct = () => {\r\n        let count = 0\r\n        children.products.forEach(e => {\r\n            count += 1\r\n        })\r\n        return count -1\r\n    }\r\n\r\n    return (\r\n        <Card style={{ cursor: 'pointer', top: posCard }} className={classCard} body outline color='success' onMouseEnter={() => {setClassCard('my-3 shadow rounded'); setPosCard(-5)} } onMouseLeave={() => {setClassCard('my-3'); setPosCard(0)}}>\r\n            <Link to={`/order-detail?idtransaction=${children.idtransaction}`} style={{ textDecoration: 'none', color: 'black' }} >\r\n                <CardBody>\r\n                    <div>\r\n                        <div>\r\n                            {\r\n                                children.transaction_type === 'CO' ?\r\n                                    \"Pesanan Obat Resep\"\r\n                                    : children.transaction_type === 'QO' ?\r\n                                        \"Pesanan Obat\"\r\n                                        :\r\n                                        \"Pesanan Obat Umum & Resep\"\r\n                            }\r\n                            <div style={{ textAlign: 'right', display: 'inline', float: 'right', fontSize: 13, color: 'grey' }}>\r\n                                {\r\n                                    children.payment_status === 'paid' ?\r\n                                    <Badge color='success' style={{padding: 5}}>{children.payment_status}</Badge>\r\n                                    :\r\n                                    <Badge color='secondary' style={{padding: 5}}>{children.payment_status}</Badge>\r\n                                }\r\n                                <p>ORDER-ID : {children.invoice_number}</p>\r\n                            </div>\r\n                        </div>\r\n                        <p style={{ color: 'grey', fontSize: 13 }}>{Moment(children.created_at).zone('+1400').format('ll')}, {Moment(children.created_at).zone('+1400').format('LT')} WIB</p>\r\n                    </div>\r\n                    {/* <CardImg  /> */}\r\n                    <div className='d-flex'>\r\n                        {\r\n                            children.products.length > 0 &&\r\n                            <img width='5%' src={API_URL + children.products[0].product_image} />\r\n                        }\r\n                        {\r\n                            children.products.length > 0 ?\r\n                            countProduct() === 0 ?\r\n                                <CardTitle style={{marginTop: 10, marginLeft: 10}}>{children.products[0].name}</CardTitle>\r\n                                :\r\n                                <CardTitle style={{marginTop: 10, marginLeft: 10}}>{children.products[0].name} <span style={{ fontSize: 13, color: 'grey' }}>[+ {countProduct()} barang]</span></CardTitle>\r\n                                :\r\n                                null\r\n                            }\r\n                    </div>\r\n                </CardBody>\r\n            </Link>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CardTransaction;","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\cardProduct.js",[],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\modalPayment.js",[],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\cardCart.js",["257","258"],"import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, DropdownItem, Input } from 'reactstrap';\r\nimport { deleteCart, getCart, updateQty } from '../redux/actions';\r\nimport { API_URL } from '../support/urlApi';\r\n\r\nconst CardCart = ({ children }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addNote, setAddNote] = useState(false);\r\n\r\n  // Qty modification function\r\n  const btQty = (type, qty, idcart) => {\r\n    if (type === 'inc') {\r\n      console.log('saya increment', qty, idcart);\r\n      dispatch(updateQty(qty, 'inc', idcart));\r\n    } else if (type == 'dec') {\r\n      console.log('saya decrement');\r\n      dispatch(updateQty(qty, 'dec', idcart));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        to={`/product-detail?idproduct=${children.idproduct}`}\r\n        style={{ textDecoration: 'none', color: 'black' }}\r\n      >\r\n        <div className='card-tranparent d-flex'>\r\n          <div style={{ flex: 1 }}>\r\n            <img src={API_URL + children.product_image} width='90%' />\r\n          </div>\r\n          <div style={{ flex: 4, marginTop: 30 }}>\r\n            <p>{children.name}</p>\r\n            <p style={{ fontWeight: 'bold' }}>\r\n              Rp.{children.price_pcs.toLocaleString()}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n      <div className='d-flex'>\r\n        <div style={{ flex: 5 }}>\r\n          {addNote === false ? (\r\n            children.note ? (\r\n              <p>\r\n                <span\r\n                  style={{\r\n                    marginLeft: 10,\r\n                    fontWeight: '400',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                >\r\n                  {children.note}\r\n                </span>\r\n                <span\r\n                  style={{\r\n                    marginLeft: 10,\r\n                    color: '#2ecc71',\r\n                    fontWeight: '400',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                  onClick={() => setAddNote(!addNote)}\r\n                >\r\n                  Ubah\r\n                </span>\r\n              </p>\r\n            ) : (\r\n              <p\r\n                style={{\r\n                  marginLeft: 10,\r\n                  color: '#2ecc71',\r\n                  fontWeight: '400',\r\n                  cursor: 'pointer',\r\n                }}\r\n                onClick={() => setAddNote(!addNote)}\r\n              >\r\n                Add Notes for this children\r\n              </p>\r\n            )\r\n          ) : (\r\n            <Input\r\n              type='text'\r\n              onBlur={() => {\r\n                setAddNote(!addNote);\r\n              }}\r\n              style={{ width: '60%' }}\r\n              defaultValue={children.note ? children.note : ''}\r\n            />\r\n          )}\r\n        </div>\r\n        <div style={{ flex: 1 }}>\r\n          <i\r\n            className='large material-icons right-menu_icon'\r\n            id='trashbinImage'\r\n            style={{ fontSize: 30, marginTop: -8, cursor: 'pointer' }}\r\n            onClick={() => {\r\n              dispatch(deleteCart(children.idcart));\r\n              dispatch(getCart());\r\n            }}\r\n          >\r\n            delete\r\n          </i>\r\n        </div>\r\n        <div style={{ flex: 3, marginTop: -20 }}>\r\n          <Button\r\n            color='warning'\r\n            style={{\r\n              marginTop: 15,\r\n              borderRadius: 15,\r\n              width: 30,\r\n              height: 30,\r\n              letterSpacing: 2,\r\n              textAlign: 'center',\r\n            }}\r\n            onClick={() => btQty('dec', children.qty, children.idcart)}\r\n          >\r\n            <p\r\n              style={{\r\n                marginLeft: -3,\r\n                marginTop: -14,\r\n                fontWeight: 'bolder',\r\n                fontSize: 25,\r\n              }}\r\n            >\r\n              -\r\n            </p>\r\n          </Button>\r\n          <Button\r\n            color='success'\r\n            disabled\r\n            outline\r\n            style={{\r\n              marginTop: 15,\r\n              borderRadius: 15,\r\n              width: 60,\r\n              height: 30,\r\n              letterSpacing: 2,\r\n              textAlign: 'center',\r\n              marginLeft: 5,\r\n              marginRight: 5,\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                marginTop: -5,\r\n                fontWeight: 'bolder',\r\n                fontSize: 16,\r\n                color: 'black',\r\n              }}\r\n            >\r\n              {children.qty}\r\n            </p>\r\n          </Button>\r\n          <Button\r\n            color='warning'\r\n            style={{\r\n              marginTop: 15,\r\n              borderRadius: 15,\r\n              width: 30,\r\n              height: 30,\r\n              letterSpacing: 2,\r\n              textAlign: 'center',\r\n              marginRight: 10,\r\n            }}\r\n            onClick={() => btQty('inc', children.qty, children.idcart)}\r\n          >\r\n            <p\r\n              style={{\r\n                marginLeft: -7,\r\n                marginTop: -14,\r\n                fontWeight: 'bolder',\r\n                fontSize: 25,\r\n              }}\r\n            >\r\n              +\r\n            </p>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <DropdownItem divider style={{ marginLeft: 7, marginRight: 7 }} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardCart;\r\n","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\support\\urlApi.js",[],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\modalCart.js",["259","260"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Alert, Button, Modal, ModalBody, ModalHeader } from 'reactstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { API_URL } from '../support/urlApi';\r\nimport ModalPayment from './modalPayment';\r\nimport Swal from 'sweetalert2';\r\nimport { getDefaultAddress, quickBuy } from '../redux/actions';\r\n\r\n\r\nconst ModalCart = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [qtyCart, setQtyCart] = useState(props.qty);\r\n    const [visible, setVisible] = useState(false);\r\n    const onDismiss = () => setVisible(false);\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [modal, setModal] = useState(false);\r\n    const toggleModal = () => setModal(!modal);\r\n  \r\n    useEffect(() => {\r\n        dispatch(getDefaultAddress());\r\n      }, []);\r\n    \r\n    const priceBarang = () => {\r\n        let price = props.data.price_pcs * qtyCart\r\n        return price\r\n    }\r\n\r\n    const { iduser, defaultAddress, idpayment} = useSelector((state) => {\r\n        return {\r\n            iduser: state.usersReducer.iduser,\r\n            defaultAddress: state.usersReducer.defaultAddress,\r\n            idpayment: state.transactionsReducer.idpayment\r\n        };\r\n    });\r\n\r\n    const btQtyCart = (value) => {\r\n        if (value === '+') {\r\n            if (qtyCart < props.data.stock_pcs) {\r\n                setQtyCart(qtyCart + 1);\r\n            } else if (qtyCart === props.data.stock_pcs) {\r\n                setVisible(true);\r\n            }\r\n        } else if (value === '-') {\r\n            if (qtyCart > 1) {\r\n                setQtyCart(qtyCart - 1);\r\n                setVisible(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const totalOngkir = () => {\r\n        return 10000;\r\n      };\r\n    \r\n    const checkOut = () => {\r\n        let transaction_type = 'QO';\r\n        let ongkir = totalOngkir();\r\n\r\n        let checkOut = { 'idproduct': props.data.idproduct, \"iduser\": iduser, \"note\": '', \"qty_qo\": qtyCart, \"total_price\": (props.data.price_pcs * qtyCart) }\r\n\r\n        console.log(\"cek bawaan button checkout: \", checkOut, ongkir, defaultAddress.iduser_address, transaction_type)\r\n        dispatch(quickBuy(checkOut, ongkir, defaultAddress.iduser_address, transaction_type))\r\n    }\r\n\r\n    const paymentSuccess = () => {\r\n        let timerInterval;\r\n        Swal.fire({\r\n            title: 'Payment in Progress',\r\n            html: 'I will close after payment confirmed.',\r\n            timer: 3000,\r\n            timerProgressBar: true,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n                timerInterval = setInterval(() => {\r\n                    const content = Swal.getContent();\r\n                    if (content) {\r\n                        const b = content.querySelector('b');\r\n                        if (b) {\r\n                            b.textContent = Swal.getTimerLeft();\r\n                        }\r\n                    }\r\n                }, 100);\r\n            },\r\n            willClose: () => {\r\n                clearInterval(timerInterval);\r\n            },\r\n        });\r\n        setTimeout(\r\n            () =>\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Your Payment Has Been Confirmed',\r\n                    showConfirmButton: false,\r\n                    timer: 2000,\r\n                }),\r\n            3000\r\n        );\r\n\r\n        setTimeout(() => setRedirect(true), 5000);\r\n    };\r\n\r\n    if (redirect) {\r\n        return <Redirect to='order-list' />;\r\n    }\r\n    return (\r\n        <Modal isOpen={props.modal} toggle={props.toggleModal} style={{ marginTop: '15vw' }}>\r\n            <ModalHeader toggle={props.toggleModal}>Lakukan Pembelian Cepat</ModalHeader>\r\n            <ModalBody className='d-flex'>\r\n                <img src={API_URL + props.data.product_image} alt={props.data.name} width='30%' style={{ flex: 1 }} />\r\n                <div style={{ flex: 1, marginLeft: 20, marginRight: 20 }}>\r\n                    <h6>{props.data.name}</h6>\r\n                    <p>Rp. {priceBarang().toLocaleString()}</p>\r\n\r\n                    <Button disabled={qtyCart === 1} color='warning' style={{ marginTop: 15, borderRadius: 15, width: 30, height: 30, letterSpacing: 2, textAlign: 'center', }} onClick={() => btQtyCart('-')}                    >\r\n                        <p style={{ marginLeft: -3, marginTop: -14, fontWeight: 'bolder', fontSize: 25, }}> -  </p>\r\n                    </Button>\r\n                    <Button color='success' disabled outline style={{ marginTop: 15, borderRadius: 15, width: 60, height: 30, letterSpacing: 2, textAlign: 'center', marginLeft: 5, marginRight: 5, }}                    >\r\n                        <p style={{ marginTop: -5, fontWeight: 'bolder', fontSize: 16, color: 'black', }}   >\r\n                            {qtyCart}\r\n                        </p>\r\n                    </Button>\r\n                    <Button color='warning' style={{ marginTop: 15, borderRadius: 15, width: 30, height: 30, letterSpacing: 2, textAlign: 'center', marginRight: 10, }} onClick={() => btQtyCart('+')}                    >\r\n                        <p style={{ marginLeft: -7, marginTop: -14, fontWeight: 'bolder', fontSize: 25, }}> + </p>\r\n                    </Button>\r\n                    {/* <Button color=\"success\" onClick={() => { dispatch(payment(props.idpayment)); props.paymentSuccess() }} block style={{ marginTop: '4vw' }}>Konfirmasi Pembayaran</Button>{' '} */}\r\n                    <Alert fade={true} isOpen={visible} toggle={() => onDismiss()} color='danger' style={{ marginTop: 10, fontWeight: 'bold' }}            >\r\n                        Sudah Mencapai Maksimal Jumlah Stock\r\n                </Alert>\r\n                    <Button color=\"success\" block style={{ marginTop: '4vw' }} onClick={()=> {checkOut(); toggleModal()}}>Konfirmasi Pesanan</Button>\r\n                </div>\r\n            </ModalBody>\r\n            <ModalPayment\r\n                modal={modal}\r\n                toggleModal={toggleModal}\r\n                idpayment={idpayment}\r\n                paymentSuccess={paymentSuccess}\r\n            />\r\n\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default ModalCart;","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\actions\\cartAction.js",[],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\actions\\productsAction.js",["261","262"],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\actions\\usersAction.js",["263"],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\redux\\actions\\transactionsAction.js",[],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\assets\\index.js",[],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\NotFound\\index.js",["264"],"import React from 'react';\r\nimport './notfound.css';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div id='notfound'>\r\n      <div className='notfound'>\r\n        <div className='notfound-404'>\r\n          <h3>Oops! Page not found</h3>\r\n          <h1>\r\n            <span>4</span>\r\n            <span>0</span>\r\n            <span>4</span>\r\n          </h1>\r\n        </div>\r\n        <h2>we are sorry, but the page you requested was not found</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\Home\\index.js",["265"],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\ChartAdmin\\index.js",[],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\Banner\\index.js",["266"],"import React from 'react';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, {\r\n  Navigation,\r\n  Pagination,\r\n  EffectFade,\r\n  Autoplay,\r\n} from 'swiper';\r\nimport { Banner1, Banner2, Banner3 } from '../../assets';\r\nimport './banner.css';\r\nimport 'swiper/swiper-bundle.css';\r\n\r\nSwiperCore.use([Navigation, Pagination, EffectFade, Autoplay]);\r\n\r\nconst Banner = () => {\r\n  const banner = [\r\n    { name: 'banner-1', image: Banner1 },\r\n    { name: 'banner-2', image: Banner2 },\r\n    { name: 'banner-3', image: Banner3 },\r\n  ];\r\n  return (\r\n    <div style={{ marginTop: '5rem' }}>\r\n      <div className='text-center'>\r\n        <h4 className=' mb-4'>Penawaran Menarik</h4>\r\n        <p>\r\n          Sehat lebih mudah dengan berbagai penawaran dan promo terbaru untuk\r\n          kamu\r\n        </p>\r\n        <hr className='mt-4 mb-4' />\r\n      </div>\r\n      <Swiper\r\n        id='main'\r\n        tag='section'\r\n        wrapperTag='ul'\r\n        pagination={{ clickable: true }}\r\n        effect='fade'\r\n        autoplay={{ delay: 2000 }}\r\n      >\r\n        {banner.map((item, idx) => (\r\n          <SwiperSlide tag='li' key={idx}>\r\n            <img\r\n              src={item.image}\r\n              width='100%'\r\n              style={{ listStyle: 'none', borderRadius: '20px' }}\r\n            />\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\ResetPassword\\index.js",[],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\Verify\\index.js",[],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\CardCategory\\index.js",["267","268","269","270","271","272"],"import React, { useEffect } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { BloodIcon, DrugIcon, IvIcon } from '../../assets';\r\nimport './slide.css';\r\nimport { getCategory } from '../../redux/actions/productsAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst CardCategory = () => {\r\n  // GET CATEGORY\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategory());\r\n  }, []);\r\n\r\n  const { category, iduser } = useSelector(\r\n    ({ ProductsReducer, usersReducer }) => {\r\n      return {\r\n        category: ProductsReducer.category,\r\n        iduser: usersReducer.iduser,\r\n      };\r\n    }\r\n  );\r\n\r\n  const settings = {\r\n    infinite: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    pauseOnHover: false,\r\n    arrows: true,\r\n    className: 'slides',\r\n    variableWidth: true,\r\n    responsive: [\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  // custom order button function\r\n  const history = useHistory();\r\n  const onClickCustomOrder = () => {\r\n    if (iduser) {\r\n      history.push('/cart');\r\n    } else {\r\n      Swal.fire('', 'Silahkan login untuk Custom Order!', 'info');\r\n    }\r\n  };\r\n\r\n  const renderCategory = () => {\r\n    return (\r\n      category.length > 0 &&\r\n      category.map((item, idx) => {\r\n        if (item.idcategory != 9) {\r\n          return (\r\n            <Link to={`/products?idcategory=${item.idcategory}`} key={idx}>\r\n              <div style={{ width: 200 }}>\r\n                <img\r\n                  src={item.thumb}\r\n                  width='30%'\r\n                  alt={item.category}\r\n                  style={{ marginTop: 20 }}\r\n                />\r\n                <p\r\n                  style={{\r\n                    fontSize: 14,\r\n                    textAlign: 'center',\r\n                    paddingTop: 20,\r\n                    wordWrap: true,\r\n                    color: 'white',\r\n                  }}\r\n                >\r\n                  {/* Category - {idx + 1} */}\r\n                  {item.category === 'CUSTOM ORDER'\r\n                    ? 'OBAT RACIK'\r\n                    : item.category}{' '}\r\n                </p>\r\n              </div>\r\n            </Link>\r\n          );\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className='mt-5'>\r\n      <div>\r\n        <h4 className='text-center'>Menu Kategori Pilihan</h4>\r\n        <hr className='mt-4 mb-4' />\r\n      </div>\r\n      <Slider {...settings}>\r\n        <div style={{ width: 200 }} onClick={onClickCustomOrder}>\r\n          <img src={BloodIcon} width='30%' style={{ marginTop: 20 }} />\r\n          <p\r\n            style={{\r\n              fontSize: 15,\r\n              textAlign: 'center',\r\n              paddingTop: 20,\r\n              color: 'white',\r\n            }}\r\n          >\r\n            CUSTOM ORDER\r\n          </p>\r\n        </div>\r\n        {renderCategory()}\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardCategory;\r\n","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\ForgotPassword\\index.js",[],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\Suggestions\\index.js",["273"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from 'reactstrap';\r\nimport { API_URL } from '../../support/urlApi';\r\nimport './suggestion.css';\r\n\r\nconst Suggestions = ({ results, searchRef, handleInputChange, openSearch }) => {\r\n  return (\r\n    <UncontrolledDropdown style={{ padding: 0 }}>\r\n      <DropdownToggle\r\n        style={{\r\n          backgroundColor: 'white',\r\n          border: 'white',\r\n          width: '100%',\r\n          padding: 0,\r\n        }}\r\n      >\r\n        <form>\r\n          <input\r\n            type='select'\r\n            className='form-control searchInputText'\r\n            placeholder='Search for ...'\r\n            ref={searchRef}\r\n            onChange={handleInputChange}\r\n          />\r\n        </form>\r\n      </DropdownToggle>\r\n      {/* {console.log('test', openSearch)} */}\r\n      {openSearch && (\r\n        <DropdownMenu\r\n          className='mt-2 w-100 shadow-lg'\r\n          style={{ border: 'none', borderRadius: 20 }}\r\n        >\r\n          {results.map((item) => (\r\n            <div>\r\n              <Link\r\n                to={`/product-detail?idproduct=${item.idproduct}`}\r\n                style={{ textDecoration: 'none' }}\r\n              >\r\n                <DropdownItem className='p-2'>\r\n                  <div className='d-flex align-items-center'>\r\n                    <img\r\n                      src={API_URL + item.product_image}\r\n                      width='15%'\r\n                      style={{\r\n                        border: '1px solid #ced4da',\r\n                        borderRadius: '10px',\r\n                        marginRight: '2rem',\r\n                      }}\r\n                    />\r\n                    <div className='pt-3'>\r\n                      <p style={{ fontWeight: 'bold', fontSize: '14px' }}>\r\n                        {item.name.toUpperCase()}\r\n                      </p>\r\n                      <p\r\n                        style={{\r\n                          fontWeight: 'bold',\r\n                          fontSize: '14px',\r\n                          color: 'red',\r\n                        }}\r\n                      >\r\n                        Rp\r\n                        {item.price_pcs.toLocaleString()},-\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </DropdownItem>\r\n              </Link>\r\n\r\n              <DropdownItem divider />\r\n            </div>\r\n          ))}\r\n        </DropdownMenu>\r\n      )}\r\n    </UncontrolledDropdown>\r\n  );\r\n};\r\n\r\nexport default Suggestions;\r\n","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\DashboardAdmin\\index.js",["274","275"],"import React, { useEffect, useState } from 'react';\r\nimport { NavbarAdmin } from '../../components';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllTransaction, getCustomProducts } from '../../redux/actions';\r\nimport { Card, Table } from 'reactstrap';\r\n\r\nconst DashboardAdmin = () => {\r\n  const [chartData, setChartData] = useState({});\r\n  const dispatch = useDispatch();\r\n\r\n  const { reportTransaction, customProducts, reportChart } = useSelector(\r\n    ({ transactionsReducer, ProductsReducer }) => {\r\n      return {\r\n        allTransaction: transactionsReducer.allTransaction,\r\n        reportTransaction: transactionsReducer.reportTransaction,\r\n        reportChart: transactionsReducer.reportChart,\r\n        customProducts: ProductsReducer.customProducts,\r\n      };\r\n    }\r\n  );\r\n\r\n  let chartMonthLabel = reportChart.map((item) => item.bulan);\r\n  let chartMonthlySummary = reportChart.map((item) =>\r\n    parseInt(item.total_penjualan_per_bulan)\r\n  );\r\n\r\n  // chart function\r\n  const chart = () => {\r\n    setChartData({\r\n      labels: chartMonthLabel,\r\n      datasets: [\r\n        {\r\n          label: 'Penjualan',\r\n          data: chartMonthlySummary,\r\n          backgroundColor: ['rgba(75,192,192,0.9'],\r\n          borderWidth: 4,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    chart();\r\n    dispatch(getAllTransaction());\r\n    dispatch(getCustomProducts());\r\n  }, []);\r\n\r\n  const renderReport = () => {\r\n    return customProducts.map((product, idx) => {\r\n      let itemTerjual = reportTransaction.filter(\r\n        (item) => product.idproduct == item.idproduct\r\n      );\r\n      return (\r\n        <tr>\r\n          <td>{product.name}</td>\r\n          <td className='text-center'>\r\n            {Math.floor(\r\n              (parseInt(itemTerjual[0].qty_terjual) +\r\n                parseInt(product.total_stock_satuan)) /\r\n                parseInt(product.qty_per_pcs)\r\n            )}\r\n          </td>\r\n          <td className='text-center'>\r\n            {(\r\n              parseInt(itemTerjual[0].qty_terjual) +\r\n              parseInt(product.total_stock_satuan)\r\n            ).toLocaleString()}\r\n          </td>\r\n          <td className='text-center'>\r\n            {Math.floor(\r\n              parseInt(product.total_stock_satuan) /\r\n                parseInt(product.qty_per_pcs)\r\n            )}\r\n          </td>\r\n          <td className='text-center'>\r\n            {parseInt(product.total_stock_satuan).toLocaleString()}\r\n          </td>\r\n          <td className='text-center'>\r\n            {Math.ceil(\r\n              parseInt(itemTerjual[0].qty_terjual) /\r\n                parseInt(product.qty_per_pcs)\r\n            )}\r\n          </td>\r\n          <td className='text-center'>\r\n            {parseInt(itemTerjual[0].qty_terjual).toLocaleString()}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavbarAdmin />\r\n      <div className='row d-flex justify-content-center align-items-center mt-5'>\r\n        <div className='col-8'>\r\n          <h3 className='text-center mb-5'>\r\n            Selamat Datang di Dashboard Admin\r\n          </h3>\r\n          <hr className='mb-3' />\r\n          <div className='row'>\r\n            <div className='col-9'>\r\n              <Card className='p-5'>\r\n                <h4 className='border-bottom pb-2 mb-3'>Grafik Penjualan</h4>\r\n                <Line\r\n                  className='border'\r\n                  data={chartData}\r\n                  options={{\r\n                    responsive: true,\r\n                    title: {\r\n                      text: 'Grafik Penjualan',\r\n                      display: false,\r\n                      fontSize: 16,\r\n                      fontColor: 'black',\r\n                    },\r\n                    scales: {\r\n                      yAxes: [\r\n                        {\r\n                          scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Penjualan / Rupiah',\r\n                            fontSize: 14,\r\n                            fontColor: 'black',\r\n                          },\r\n                          ticks: {\r\n                            autoSkip: true,\r\n                            maxTicksLimit: 20,\r\n                            min: 0,\r\n                            beginAtZero: false,\r\n                            stepSize: 1,\r\n                          },\r\n                          gridLines: {\r\n                            display: true,\r\n                          },\r\n                        },\r\n                      ],\r\n                      xAxes: [\r\n                        {\r\n                          scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Periode / Bulan',\r\n                            fontSize: 14,\r\n                            fontColor: 'black',\r\n                          },\r\n                          gridLines: {\r\n                            display: false,\r\n                          },\r\n                        },\r\n                      ],\r\n                    },\r\n                  }}\r\n                />\r\n              </Card>\r\n            </div>\r\n            <div className='col-3'>\r\n              <Card className='d-flex w-100 h-100 p-3'>\r\n                <h5 className='text-center border-bottom p-3 mb-3'>\r\n                  Report Penjualan\r\n                </h5>\r\n                <Table bordered>\r\n                  <thead className='table-secondary'>\r\n                    <tr className='text-center'>\r\n                      <th>Bulan</th>\r\n                      <th>Penjualan</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {reportChart.map((item, idx) => {\r\n                      return (\r\n                        <tr className='text-center'>\r\n                          {' '}\r\n                          <td>{item.bulan}</td>\r\n                          <td>\r\n                            Rp\r\n                            {parseInt(\r\n                              item.total_penjualan_per_bulan\r\n                            ).toLocaleString()}\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='row mt-5'>\r\n            <div className='col-12'>\r\n              <Card className='p-5'>\r\n                <h4 className='border-bottom pb-2 mb-3'>\r\n                  Table Pergerakan Stock - Bahan Racik{' '}\r\n                </h4>\r\n                <Table bordered className='table-striped'>\r\n                  <thead>\r\n                    <tr className='text-center table-secondary'>\r\n                      <th rowSpan={2} className='text-center'>\r\n                        Nama Produk\r\n                      </th>\r\n                      <th colSpan={2}>Stock Awal</th>\r\n                      <th colSpan={2}>Stock Saat Ini</th>\r\n                      <th colSpan={2}>Stock Terjual</th>\r\n                    </tr>\r\n                    <tr className='text-center table-secondary'>\r\n                      <th>Stock (Pcs)</th>\r\n                      <th>Stock (Total)</th>\r\n                      <th>Stock (Pcs)</th>\r\n                      <th>Stock (Total)</th>\r\n                      <th>Stock (Pcs)</th>\r\n                      <th>Stock (Total)</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>{renderReport()}</tbody>\r\n                </Table>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardAdmin;\r\n","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\AdminTransaksi\\index.js",["276","277"],"import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { NavbarAdmin } from '../../components';\r\nimport {\r\n  Button,\r\n  Table,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  Input,\r\n} from 'reactstrap';\r\n\r\nconst AdminTransaksi = (props) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  const history = useHistory();\r\n  const { allProducts, allTransaction } = useSelector(\r\n    ({ usersReducer, ProductsReducer, transactionsReducer }) => {\r\n      return {\r\n        name: usersReducer.name,\r\n        allProducts: ProductsReducer.allProducts,\r\n        allTransaction: transactionsReducer.allTransaction,\r\n      };\r\n    }\r\n  );\r\n\r\n  const [search, setSearch] = useState([]);\r\n  const onChangeSearch = (e) => {\r\n    console.log(e.target.value);\r\n    let ItemSelected = allTransaction.filter((elem, idx) => {\r\n      let searchValue = elem.invoice_number.toUpperCase();\r\n      // console.log(searchValue);\r\n      return searchValue.indexOf(e.target.value) !== -1;\r\n    });\r\n    setSearch(ItemSelected);\r\n  };\r\n\r\n  // search function\r\n  const renderSelected = search.length <= 0 ? allTransaction : search;\r\n  // console.log(Boolean(search.length <= 0));\r\n\r\n  const handleButtonDetail = (idx, idtransaction) => {\r\n    return history.push('/admin-transaksi-detail', {\r\n      index: idx,\r\n      idTrx: idtransaction,\r\n    });\r\n  };\r\n\r\n  // render product lists\r\n  const renderTransactions = () => {\r\n    if (renderSelected)\r\n      return renderSelected.map((item, idx) => {\r\n        return (\r\n          <tr className='text-center' key={idx}>\r\n            <th>{idx + 1}</th>\r\n            <td className='text-left'>{item.invoice_number}</td>\r\n            <td>{item.customer}</td>\r\n            <td className='text-center'>\r\n              {moment(item.created_at).format('LLL')}\r\n            </td>\r\n            <td className='text-center'>\r\n              <span\r\n                className={\r\n                  item.payment_status === 'paid'\r\n                    ? 'badge bg-success text-white p-2'\r\n                    : 'badge bg-danger text-white p-2'\r\n                }\r\n              >\r\n                {item.payment_status}\r\n              </span>\r\n            </td>\r\n            <td className='text-center'>{item.transaction_type}</td>\r\n            <th>\r\n              <Button\r\n                color='primary'\r\n                size='sm mr-4'\r\n                onClick={() => handleButtonDetail(idx, item.idtransaction)}\r\n              >\r\n                Detail Transaksi\r\n              </Button>\r\n            </th>\r\n          </tr>\r\n        );\r\n      });\r\n  };\r\n\r\n  // Sort Function\r\n  const sortTrx = (tipe, urutan) => {\r\n    setSearch([]);\r\n    if (tipe === 'Pesanan' && urutan === 'ASC') {\r\n      allTransaction.sort((a, b) => {\r\n        let paymentA = a.payment_status.toUpperCase();\r\n        let paymentB = b.payment_status.toUpperCase();\r\n        if (paymentA < paymentB) {\r\n          return -1;\r\n        }\r\n        if (paymentA > paymentB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    } else if (tipe === 'Type' && urutan === 'ASC') {\r\n      allTransaction.sort((a, b) => {\r\n        let typeA = a.transaction_type;\r\n        let typeB = b.transaction_type;\r\n        if (typeA < typeB) {\r\n          return -1;\r\n        }\r\n        if (typeA > typeB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n    {\r\n      renderTransactions();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavbarAdmin />\r\n      <div className='row d-flex justify-content-center align-items-center mt-5'>\r\n        <div className='col-10'>\r\n          <h3 className='text-center mb-4'>Transaksi</h3>\r\n          <hr />\r\n          <div className='row mb-3'>\r\n            <div className='col-8 d-flex justify-content-start'>\r\n              <Input\r\n                placeholder='Cari No Pesanan'\r\n                className='text-left w-50'\r\n                onChange={onChangeSearch}\r\n              />\r\n            </div>\r\n            <div className='col-4 d-flex justify-content-end'>\r\n              <Dropdown\r\n                isOpen={dropdownOpen}\r\n                toggle={toggle}\r\n                style={{\r\n                  borderRadius: 10,\r\n                  marginBottom: 10,\r\n                }}\r\n              >\r\n                <DropdownToggle\r\n                  caret\r\n                  style={{\r\n                    backgroundColor: 'grey',\r\n                    border: '1px solid #714a4a',\r\n                    width: '100%',\r\n                    paddingTop: 7,\r\n                    paddingBottom: 5,\r\n                    paddingRight: 30,\r\n                    paddingLeft: 30,\r\n                    color: 'white',\r\n                    letterSpacing: 2,\r\n                  }}\r\n                >\r\n                  Sorting\r\n                </DropdownToggle>\r\n                <DropdownMenu className='shadow'>\r\n                  <DropdownItem\r\n                    onClick={() => sortTrx('Pesanan', 'ASC')}\r\n                    className='border-bottom'\r\n                  >\r\n                    Status Pesanan\r\n                  </DropdownItem>\r\n                  <DropdownItem\r\n                    onClick={() => sortTrx('Type', 'ASC')}\r\n                    className='border-bottom'\r\n                  >\r\n                    Type Pesanan\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </Dropdown>\r\n            </div>\r\n          </div>\r\n          <Table hover bordered>\r\n            <thead>\r\n              <tr className='text-center'>\r\n                <th>No</th>\r\n                <th className='w-25'>No Pesanan</th>\r\n                <th>Pelanggan</th>\r\n                <th>Tgl. Pesan</th>\r\n                <th>Status Pesanan</th>\r\n                <th>Type Pesanan</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{renderTransactions()}</tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminTransaksi;\r\n","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\Login\\index.js",[],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\NavbarAdmin\\index.js",["278"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { logoutUser } from '../../redux/actions';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  NavbarBrand,\r\n} from 'reactstrap';\r\n\r\nconst NavbarAdmin = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n  const { name } = useSelector(({ usersReducer }) => {\r\n    return {\r\n      name: usersReducer.name,\r\n    };\r\n  });\r\n\r\n  const onLogout = () => {\r\n    dispatch(logoutUser());\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      color='light'\r\n      light\r\n      expand='md'\r\n      className='pt-3 pb-3 pl-3 pr-5 shadow navbar sticky-top navbar-light bg-light'\r\n    >\r\n      <NavbarBrand\r\n        className='mr-auto'\r\n        style={{\r\n          fontSize: '20px',\r\n          paddingLeft: '30px',\r\n        }}\r\n      >\r\n        {name ? `Halo, ${name}` : 'PharmaGO'}!!\r\n      </NavbarBrand>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse\r\n        isOpen={isOpen}\r\n        navbar\r\n        style={{ flexBasis: '12%', flexGrow: 0 }}\r\n      >\r\n        <Nav classname='mr-auto' navbar>\r\n          <UncontrolledDropdown nav inNavbar>\r\n            <DropdownToggle nav style={{ fontSize: '20px', color: 'black' }}>\r\n              <NavbarText\r\n                style={{\r\n                  fontSize: '18px',\r\n                  fontWeight: 'bold',\r\n                  paddingLeft: '30px',\r\n                  position: 'relative',\r\n                }}\r\n              >\r\n                Menu Utama\r\n              </NavbarText>\r\n              <i\r\n                className='material-icons'\r\n                style={{\r\n                  position: 'absolute',\r\n                  fontSize: '2.6rem',\r\n                  color: 'grey',\r\n                }}\r\n              >\r\n                arrow_drop_down\r\n              </i>\r\n            </DropdownToggle>\r\n            <DropdownMenu left style={{ padding: 20 }}>\r\n              <DropdownItem>\r\n                <Link to='/' className='text-black-50'>\r\n                  Dashboard\r\n                </Link>\r\n              </DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem>\r\n                <Link to='/admin-product' className='text-black-50'>\r\n                  {' '}\r\n                  Master Produk\r\n                </Link>\r\n              </DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem>\r\n                <Link to='/admin-transaksi' className='text-black-50'>\r\n                  {' '}\r\n                  Transaksi\r\n                </Link>\r\n              </DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem onClick={onLogout} className='text-black-50'>\r\n                Logout\r\n              </DropdownItem>\r\n              <DropdownItem divider />\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavbarAdmin;\r\n","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\Footer\\index.js",[],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\AdminProductDetail\\index.js",["279","280","281","282","283","284","285","286","287","288"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport { NavbarAdmin } from '../../components';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardImg,\r\n  Table,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane,\r\n  Row,\r\n} from 'reactstrap';\r\nimport { API_URL } from '../../support/urlApi';\r\nimport { ImageNotFound } from '../../assets';\r\n\r\nconst AdminProductDetail = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const history = useHistory();\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  const { index } = props.location.state;\r\n  const { allProducts } = useSelector(({ ProductsReducer }) => {\r\n    return {\r\n      allProducts: ProductsReducer.allProducts,\r\n    };\r\n  });\r\n\r\n  // render product lists\r\n  const renderProductDetail = () => {\r\n    return allProducts.map((item, idx) => {\r\n      if (index === idx) {\r\n        return (\r\n          <div className='row' key={idx}>\r\n            <div className='col-4'>\r\n              <Card className='shadow'>\r\n                <CardImg\r\n                  top\r\n                  width='70%'\r\n                  src={\r\n                    item.product_image === null\r\n                      ? ImageNotFound\r\n                      : API_URL + item.product_image\r\n                  }\r\n                  alt={item.name}\r\n                />\r\n              </Card>\r\n            </div>\r\n            <div className='col-8'>\r\n              <div className='row'>\r\n                {/* section header */}\r\n                <div className='col-4'>\r\n                  <p\r\n                    className='border-bottom pb-1'\r\n                    style={{ fontWeight: 'bold' }}\r\n                  >\r\n                    Nama Produk\r\n                  </p>\r\n                  <p\r\n                    className='border-bottom pb-1'\r\n                    style={{ fontWeight: 'bold' }}\r\n                  >\r\n                    Kategori\r\n                  </p>\r\n                  <p\r\n                    className='border-bottom pb-1'\r\n                    style={{ fontWeight: 'bold' }}\r\n                  >\r\n                    Harga\r\n                  </p>\r\n                  <p\r\n                    className='border-bottom pb-1'\r\n                    style={{ fontWeight: 'bold' }}\r\n                  >\r\n                    Stock\r\n                  </p>\r\n                  <p\r\n                    className='border-bottom pb-1'\r\n                    style={{ fontWeight: 'bold' }}\r\n                  >\r\n                    Total Netto\r\n                  </p>\r\n                </div>\r\n                <div className='col-8'>\r\n                  <p className='border-bottom pb-1'>{item.name}</p>\r\n                  <p className='border-bottom pb-1'>\r\n                    {item.category === 'CUSTOM ORDER'\r\n                      ? 'OBAT RACIK'\r\n                      : item.category}\r\n                  </p>\r\n                  <p className='border-bottom pb-1'>\r\n                    Rp. {item.price_pcs.toLocaleString()}\r\n                  </p>\r\n                  <p className='border-bottom pb-1'>\r\n                    {Math.floor(item.stock_pcs)}{' '}\r\n                    {item.type_obat === 'racik' ? 'item' : item.satuan} (@\r\n                    {item.qty_per_pcs})\r\n                  </p>\r\n                  <p className='border-bottom pb-1'>\r\n                    {Math.floor(item.total_stock_satuan)}{' '}\r\n                    {item.type_obat === 'racik' ? item.satuan : null}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='col-12 mt-5'>\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === '1' })}\r\n                    onClick={() => {\r\n                      toggle('1');\r\n                    }}\r\n                  >\r\n                    Deskripsi\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === '2' })}\r\n                    onClick={() => {\r\n                      toggle('2');\r\n                    }}\r\n                  >\r\n                    Komposisi\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === '3' })}\r\n                    onClick={() => {\r\n                      toggle('3');\r\n                    }}\r\n                  >\r\n                    Dosis\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === '4' })}\r\n                    onClick={() => {\r\n                      toggle('4');\r\n                    }}\r\n                  >\r\n                    Aturan Pakai\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === '5' })}\r\n                    onClick={() => {\r\n                      toggle('5');\r\n                    }}\r\n                  >\r\n                    Perhatian\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === '6' })}\r\n                    onClick={() => {\r\n                      toggle('6');\r\n                    }}\r\n                  >\r\n                    Indikasi\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === '7' })}\r\n                    onClick={() => {\r\n                      toggle('7');\r\n                    }}\r\n                  >\r\n                    Kontraindikasi\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === '8' })}\r\n                    onClick={() => {\r\n                      toggle('8');\r\n                    }}\r\n                  >\r\n                    Efek Samping\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <TabContent activeTab={activeTab}>\r\n                <TabPane tabId='1'>\r\n                  <Row>\r\n                    <Col sm='12 pt-3 pl-4'>\r\n                      <p>{item.desc_umum}</p>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tabId='2'>\r\n                  <Row>\r\n                    <Col sm='12 pt-3 pl-4'>\r\n                      <p>{item.desc_komposisi}</p>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tabId='3'>\r\n                  <Row>\r\n                    <Col sm='12 pt-3 pl-4'>\r\n                      <p>{item.desc_dosis}</p>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tabId='4'>\r\n                  <Row>\r\n                    <Col sm='12 pt-3 pl-4'>\r\n                      <p>{item.desc_aturanpakai}</p>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tabId='5'>\r\n                  <Row>\r\n                    <Col sm='12 pt-3 pl-4'>\r\n                      <p>{item.desc_perhatian}</p>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tabId='6'>\r\n                  <Row>\r\n                    <Col sm='12 pt-3 pl-4'>\r\n                      <p>{item.desc_indikasi}</p>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tabId='7'>\r\n                  <Row>\r\n                    <Col sm='12 pt-3 pl-4'>\r\n                      <p>{item.desc_kontraindikasi}</p>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tabId='8'>\r\n                  <Row>\r\n                    <Col sm='12 pt-3 pl-4'>\r\n                      <p>{item.desc_efeksamping}</p>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n              </TabContent>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavbarAdmin />\r\n\r\n      <div className='row d-flex justify-content-center align-items-center mt-5'>\r\n        <div className='col-8'>\r\n          <h3 className='text-left mb-4'>Produk Detail</h3>\r\n          <hr />\r\n          <div className='row'>\r\n            <div className='col-12 d-flex justify-content-end'>\r\n              <Button\r\n                color='danger'\r\n                size='sm mb-3'\r\n                onClick={() => history.push('/admin-product')}\r\n              >\r\n                Kembali\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <div className='border rounded p-5'>{renderProductDetail()}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminProductDetail;\r\n\r\n// desc_aturanpakai: \"Berikan bersama atau tanpa makanan\"\r\n// desc_dosis: \"Dewasa dan remaja > 10 tahun : 5 - 7.5 ml. Diberikan 3 kali sehari. Anak (6 - 17 tahun) : 5 ml. Diberikan 3 kali sehari. Anak (1 - 5 tahun) : 2.5 ml. Diberikan 3 kali sehari. Lama terapi : Sekurang-kurangnya 1 minggu, berikan hingga 2 - 3 hari sesudah gejala mereda.\"\r\n// desc_efeksamping: \"-\"\r\n// desc_indikasi: \"PROSPAN SIRUP merupakan obat batuk herbal dengan zat aktif Hedera Helix (Special Ivy Extract EA 575). Prospan berkhasiat membantu meredakan batuk berdahak dengan mengencerkan dahak dan melegakan saluran pernapasan.\"\r\n// desc_komposisi: \"Per 100 mL : Ekstrak daun Ivy kering 0.7 g, larutan Sorbitol 70%, K Sorbate 0.134 g, Citric acid\"\r\n// desc_kontraindikasi: \"Hipersensitivitas.\"\r\n// desc_perhatian: \"Intoleransi fruktosa. Hamil dan laktasi\"\r\n// desc_umum\r\n","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\AdminTransaksiDetail\\index.js",["289","290"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport { NavbarAdmin } from '../../components';\r\nimport { Button, Card, CardBody, CardHeader, Table } from 'reactstrap';\r\nimport { getAllDetailTransaction } from '../../redux/actions';\r\n\r\nconst AdminTransaksiDetail = (props) => {\r\n  const history = useHistory();\r\n  const { allDetailTransaction, allTransaction } = useSelector(\r\n    ({ usersReducer, transactionsReducer }) => {\r\n      return {\r\n        name: usersReducer.name,\r\n        allDetailTransaction: transactionsReducer.allDetailTransaction,\r\n        allTransaction: transactionsReducer.allTransaction,\r\n      };\r\n    }\r\n  );\r\n\r\n  const { index, idTrx } = props.location.state;\r\n  // console.log('check id', idTrx);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getAllDetailTransaction(idTrx));\r\n  }, []);\r\n\r\n  // console.log('check detail', allDetailTransaction);\r\n  // render product lists\r\n  const renderTrxDetail = () => {\r\n    return allTransaction.map((item, idx) => {\r\n      if (index === idx) {\r\n        console.log('item', item);\r\n        return (\r\n          <>\r\n            <div className='row'>\r\n              <div className='col-4'>\r\n                <Card>\r\n                  <CardHeader>Detail Pesanan</CardHeader>\r\n                  <CardBody>\r\n                    <Table>\r\n                      <tr>\r\n                        <td style={{ width: '5%' }}>\r\n                          <i className='large material-icons d-flex self-align-center'>\r\n                            note\r\n                          </i>\r\n                        </td>\r\n                        <td className='d-flex self-align-item '>\r\n                          {item.invoice_number}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td style={{ width: '5%' }}>\r\n                          <i className='large material-icons d-flex self-align-center'>\r\n                            date_range\r\n                          </i>\r\n                        </td>\r\n                        <td className='d-flex self-align-item'>\r\n                          {moment(item.created_at).format('LLL')}\r\n                        </td>\r\n                      </tr>\r\n                      <tr className='border-bottom'>\r\n                        <td style={{ width: '5%' }}>\r\n                          <i className='large material-icons d-flex self-align-center'>\r\n                            note_add\r\n                          </i>\r\n                        </td>\r\n                        <td className='d-flex self-align-item'>\r\n                          {item.transaction_type === 'CO' ||\r\n                          item.transaction_type === 'ALL'\r\n                            ? 'CUSTOM ORDER'\r\n                            : 'Regular Order'}\r\n                        </td>\r\n                      </tr>\r\n                    </Table>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n              <div className='col-4'>\r\n                <Card>\r\n                  <CardHeader>Detail Pelanggan</CardHeader>\r\n                  <CardBody>\r\n                    <Table>\r\n                      <tr>\r\n                        <td style={{ width: '5%' }}>\r\n                          <i className='large material-icons d-flex self-align-center'>\r\n                            account_circle\r\n                          </i>\r\n                        </td>\r\n                        <td className='d-flex self-align-item '>\r\n                          {item.customer}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td style={{ width: '5%' }}>\r\n                          <i className='large material-icons d-flex self-align-center'>\r\n                            email\r\n                          </i>\r\n                        </td>\r\n                        <td className='d-flex self-align-item'>{item.email}</td>\r\n                      </tr>\r\n                      <tr className='border-bottom'>\r\n                        <td style={{ width: '5%' }}>\r\n                          <i className='large material-icons d-flex self-align-center'>\r\n                            phone_iphone\r\n                          </i>\r\n                        </td>\r\n                        <td className='d-flex self-align-item'>\r\n                          {item.handphone}\r\n                        </td>\r\n                      </tr>\r\n                    </Table>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n              <div className='col-4'>\r\n                <Card>\r\n                  <CardHeader>Detail Pembayaran</CardHeader>\r\n                  <CardBody>\r\n                    <Table>\r\n                      <tr>\r\n                        <td style={{ width: '5%' }}>\r\n                          <i className='large material-icons d-flex self-align-center '>\r\n                            credit_card\r\n                          </i>\r\n                        </td>\r\n                        <td className='d-flex self-align-item '>\r\n                          Bank Transfer\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td style={{ width: '5%' }}>\r\n                          <i className='large material-icons d-flex self-align-center'>\r\n                            sync\r\n                          </i>\r\n                        </td>\r\n                        <td className='d-flex self-align-item'>\r\n                          {item.payment_status}\r\n                        </td>\r\n                      </tr>\r\n                      <tr className='border-bottom'>\r\n                        <td style={{ width: '5%' }}>\r\n                          <i className='large material-icons d-flex self-align-center'>\r\n                            note_add\r\n                          </i>\r\n                        </td>\r\n                        <td className='d-flex self-align-item'>\r\n                          {item.notes === null ? '-' : 'Obat Racik'}\r\n                        </td>\r\n                      </tr>\r\n                    </Table>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n            </div>\r\n            <div className='row'>\r\n              <div className='col-12'>\r\n                <hr />\r\n                <Card>\r\n                  <CardHeader>Pesanan</CardHeader>\r\n                  <CardBody>\r\n                    <Table className='table table-bordered mb-5'>\r\n                      <thead>\r\n                        <tr>\r\n                          <th style={{ width: '80%' }}>Alamat Pengiriman</th>\r\n                          <td>Keterangan</td>\r\n                        </tr>\r\n                        <tr className='border-bottom'>\r\n                          <td style={{ width: '80%' }}>\r\n                            <p>{item.alamat_detail}</p>\r\n                            <p>\r\n                              {item.kecamatan}, {item.kota} - {item.provinsi}\r\n                            </p>\r\n                          </td>\r\n                          <td>{item.notes === null ? '-' : item.notes}</td>\r\n                        </tr>\r\n                      </thead>\r\n                    </Table>\r\n\r\n                    <Table className='table table-bordered'>\r\n                      <thead>\r\n                        <tr>\r\n                          <th className='w-50'>Produk</th>\r\n                          <th className='text-center'>Type Produk</th>\r\n                          <th className='text-center'>Qty (Obat Racik)</th>\r\n                          <th className='text-center'>Qty (Obat Umum)</th>\r\n                          <th className='text-center'>Harga Per Item</th>\r\n                          <th className='text-center'>Total</th>\r\n                        </tr>\r\n                      </thead>\r\n                      {allDetailTransaction.map((trx, i) => (\r\n                        <thead>\r\n                          <tr className='border-bottom'>\r\n                            <td>{trx.name}</td>\r\n                            <td className='text-capitalize text-center'>\r\n                              {trx.type_obat}\r\n                            </td>\r\n                            <td className='text-center'>\r\n                              {trx.qty_co === null ? 0 : trx.qty_co}\r\n                            </td>\r\n                            <td className='text-center'>\r\n                              {trx.qty_qo === null ? 0 : trx.qty_qo}\r\n                            </td>\r\n                            <td className='text-right'>\r\n                              Rp\r\n                              {trx.price_pcs === null\r\n                                ? 0\r\n                                : trx.price_pcs.toLocaleString()}\r\n                            </td>\r\n                            <td className='text-right'>\r\n                              Rp\r\n                              {trx.total_price === null\r\n                                ? 0\r\n                                : parseInt(trx.total_price).toLocaleString()}\r\n                            </td>\r\n                          </tr>\r\n                        </thead>\r\n                      ))}\r\n                      <tfoot>\r\n                        <tr className='border-bottom'>\r\n                          <td colSpan='4'></td>\r\n                          <th className='text-danger'>Ongkos Kirim</th>\r\n                          <th className='text-danger text-right'>\r\n                            - Rp\r\n                            {item.ongkir === null\r\n                              ? '-'\r\n                              : parseInt(item.ongkir).toLocaleString()}\r\n                          </th>\r\n                        </tr>\r\n                        <tr className='border-bottom'>\r\n                          <td colSpan='4'></td>\r\n                          <th>Total Pembayaran</th>\r\n                          <td className='text-right'>\r\n                            Rp\r\n                            {item.total_payment === null\r\n                              ? 'Belum Bayar'\r\n                              : parseInt(item.total_payment).toLocaleString()}\r\n                          </td>\r\n                        </tr>\r\n                      </tfoot>\r\n                    </Table>\r\n                  </CardBody>\r\n                </Card>\r\n                <hr />\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavbarAdmin />\r\n      <div className='row d-flex justify-content-center align-items-center mt-5'>\r\n        <div className='col-10'>\r\n          <div className='row'>\r\n            <div className='col-6'>\r\n              <h3 className='text-left '>Pesanan</h3>\r\n            </div>\r\n            <div className='col-6 d-flex justify-content-end'>\r\n              <Button\r\n                color='danger'\r\n                size='sm mb-3'\r\n                onClick={() => history.push('/admin-transaksi')}\r\n              >\r\n                Kembali\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n\r\n          {renderTrxDetail()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminTransaksiDetail;\r\n","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\components\\Navbar\\index.js",["291","292","293","294","295","296","297"],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\AdminProduct\\index.js",["298","299"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { NavbarAdmin } from '../../components';\r\nimport Swal from 'sweetalert2';\r\nimport {\r\n  Button,\r\n  Table,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Input,\r\n} from 'reactstrap';\r\nimport { deleteProduct, getAllProducts } from '../../redux/actions';\r\n\r\nconst AdminProduct = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllProducts());\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n  const { allProducts } = useSelector(({ usersReducer, ProductsReducer }) => {\r\n    return {\r\n      name: usersReducer.name,\r\n      allProducts: ProductsReducer.allProducts,\r\n    };\r\n  });\r\n\r\n  const handleButtonDetail = (idx) => {\r\n    return history.push('/admin-product-detail', { index: idx });\r\n  };\r\n\r\n  const handleButtonEdit = (idproduct) => {\r\n    return history.push(`/admin-edit-product/${idproduct}`);\r\n  };\r\n\r\n  const handleButtonDelete = (idproduct) => {\r\n    Swal.fire({\r\n      title: 'Hapus produk ini?',\r\n      showCancelButton: true,\r\n      confirmButtonText: `Hapus Produk`,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        dispatch(deleteProduct(idproduct));\r\n        dispatch(getAllProducts());\r\n        Swal.fire('', 'Produk berhasil dihapus!', 'success');\r\n      }\r\n    });\r\n  };\r\n\r\n  const [search, setSearch] = useState([]);\r\n  const onChangeSearch = (e) => {\r\n    // console.log(e.target.value);\r\n    let ItemSelected = allProducts.filter((elem, idx) => {\r\n      let searchValue = elem.name.toLowerCase();\r\n      // console.log(searchValue);\r\n      return searchValue.indexOf(e.target.value) !== -1;\r\n    });\r\n    setSearch(ItemSelected);\r\n  };\r\n\r\n  // search function\r\n  const renderSelected = search.length <= 0 ? allProducts : search;\r\n  // console.log(Boolean(search.length <= 0));\r\n\r\n  // render product lists\r\n  const renderProducts = () => {\r\n    return renderSelected.map((item, idx) => {\r\n      return (\r\n        <tr className='text-center' key={idx}>\r\n          <th>{idx + 1}</th>\r\n          <td className='text-left'>{item.name}</td>\r\n          <td>Rp. {item.price_pcs.toLocaleString()}</td>\r\n          <td className='text-center'>{Math.floor(item.stock_pcs)}</td>\r\n          <td className='text-right'>{item.type_obat}</td>\r\n          <th>\r\n            <Button\r\n              color='success'\r\n              size='sm mr-3 mb-1'\r\n              onClick={() => handleButtonDetail(idx)}\r\n            >\r\n              Detail Produk\r\n            </Button>\r\n            <Button\r\n              outline\r\n              size='sm mr-3 mb-1'\r\n              onClick={() => handleButtonEdit(item.idproduct)}\r\n            >\r\n              Edit Produk\r\n            </Button>\r\n            <Button\r\n              color='danger'\r\n              size='sm mb-1'\r\n              onClick={() => handleButtonDelete(item.idproduct)}\r\n            >\r\n              Delete Produk\r\n            </Button>\r\n          </th>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  // Sort Function\r\n  const sortProduct = (tipe, urutan) => {\r\n    setSearch([]);\r\n    if (tipe === 'Nama' && urutan === 'ASC') {\r\n      allProducts.sort((a, b) => {\r\n        let nameA = a.name.toUpperCase();\r\n        let nameB = b.name.toUpperCase();\r\n        if (nameA < nameB) {\r\n          return -1;\r\n        }\r\n        if (nameA > nameB) {\r\n          return 1;\r\n        }\r\n        // names must be equal\r\n        return 0;\r\n      });\r\n    } else if (tipe === 'Nama' && urutan === 'DESC') {\r\n      allProducts.sort((a, b) => {\r\n        let nameA = a.name.toUpperCase();\r\n        let nameB = b.name.toUpperCase();\r\n        if (nameA > nameB) {\r\n          return -1;\r\n        }\r\n        if (nameA < nameB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    } else if (tipe === 'Harga' && urutan === 'ASC') {\r\n      allProducts.sort((a, b) => {\r\n        let priceA = parseInt(a.price_pcs);\r\n        let priceB = parseInt(b.price_pcs);\r\n        if (priceA < priceB) {\r\n          return -1;\r\n        }\r\n        if (priceA > priceB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    } else if (tipe === 'Harga' && urutan === 'DESC') {\r\n      allProducts.sort((a, b) => {\r\n        let priceA = parseInt(a.price_pcs);\r\n        let priceB = parseInt(b.price_pcs);\r\n        if (priceA > priceB) {\r\n          return -1;\r\n        }\r\n        if (priceA < priceB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    } else if (tipe === 'Stock' && urutan === 'ASC') {\r\n      allProducts.sort((a, b) => {\r\n        let stockA = parseInt(a.stock_pcs);\r\n        let stockB = parseInt(b.stock_pcs);\r\n        if (stockA < stockB) {\r\n          return -1;\r\n        }\r\n        if (stockA > stockB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    } else if (tipe === 'Stock' && urutan === 'DESC') {\r\n      allProducts.sort((a, b) => {\r\n        let stockA = parseInt(a.stock_pcs);\r\n        let stockB = parseInt(b.stock_pcs);\r\n        if (stockA > stockB) {\r\n          return -1;\r\n        }\r\n        if (stockA < stockB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    } else if (tipe === 'Type' && urutan === 'ASC') {\r\n      allProducts.sort((a, b) => {\r\n        let typeA = a.type_obat.toUpperCase();\r\n        let typeB = b.type_obat.toUpperCase();\r\n        if (typeA < typeB) {\r\n          return -1;\r\n        }\r\n        if (typeA > typeB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n    {\r\n      renderProducts();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavbarAdmin />\r\n      <div className='row d-flex justify-content-center align-items-center mt-5'>\r\n        <div className='col-10'>\r\n          <h3 className='text-center mb-5'>Master Produk</h3>\r\n          <hr />\r\n          <div className='row mb-3'>\r\n            <div className='col-4 d-flex justify-content-start'>\r\n              <div>\r\n                <Dropdown\r\n                  isOpen={dropdownOpen}\r\n                  toggle={toggle}\r\n                  style={{\r\n                    borderRadius: 10,\r\n                    marginBottom: 10,\r\n                  }}\r\n                >\r\n                  <DropdownToggle\r\n                    caret\r\n                    style={{\r\n                      backgroundColor: 'grey',\r\n                      border: '1px solid #714a4a',\r\n                      width: '100%',\r\n                      paddingTop: 7,\r\n                      paddingBottom: 5,\r\n                      paddingRight: 30,\r\n                      paddingLeft: 30,\r\n                      color: 'white',\r\n                      letterSpacing: 2,\r\n                    }}\r\n                  >\r\n                    Sorting\r\n                  </DropdownToggle>\r\n                  <DropdownMenu className='shadow'>\r\n                    <DropdownItem\r\n                      onClick={() => sortProduct('Nama', 'ASC')}\r\n                      className='border-bottom'\r\n                    >\r\n                      Nama Produk (A-Z)\r\n                    </DropdownItem>\r\n                    <DropdownItem\r\n                      onClick={() => sortProduct('Nama', 'DESC')}\r\n                      className='border-bottom'\r\n                    >\r\n                      Nama Produk (Z-A)\r\n                    </DropdownItem>\r\n                    <DropdownItem\r\n                      onClick={() => sortProduct('Harga', 'ASC')}\r\n                      className='border-bottom'\r\n                    >\r\n                      Harga Terendah\r\n                    </DropdownItem>\r\n                    <DropdownItem\r\n                      onClick={() => sortProduct('Harga', 'DESC')}\r\n                      className='border-bottom'\r\n                    >\r\n                      Harga Tertinggi\r\n                    </DropdownItem>\r\n                    <DropdownItem\r\n                      onClick={() => sortProduct('Stock', 'ASC')}\r\n                      className='border-bottom'\r\n                    >\r\n                      Stock Terendah\r\n                    </DropdownItem>\r\n                    <DropdownItem\r\n                      onClick={() => sortProduct('Stock', 'DESC')}\r\n                      className='border-bottom'\r\n                    >\r\n                      Stock Tertinggi\r\n                    </DropdownItem>\r\n                    <DropdownItem\r\n                      onClick={() => sortProduct('Type', 'ASC')}\r\n                      className='border-bottom'\r\n                    >\r\n                      Type Obat\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </Dropdown>\r\n              </div>\r\n            </div>\r\n            <div className='col-4 d-flex justify-content-center'>\r\n              <Input\r\n                placeholder='Cari produk'\r\n                className='text-center'\r\n                onChange={onChangeSearch}\r\n              />\r\n            </div>\r\n            <div className='col-4 d-flex justify-content-end'>\r\n              <Button\r\n                color='success'\r\n                size='sm mb-3'\r\n                onClick={() => history.push('/admin-add-product')}\r\n              >\r\n                Tambah Produk\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <Table hover bordered>\r\n            <thead>\r\n              <tr className='text-center'>\r\n                <th>No</th>\r\n                <th className='w-50'>Nama Produk</th>\r\n                <th>Harga</th>\r\n                <th>Stock</th>\r\n                <th>Type Obat</th>\r\n                <th className='w-25'>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{renderProducts()}</tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminProduct;\r\n","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\Register\\index.js",[],"E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\AdminAddProduct\\index.js",["300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\n\r\nimport { NavbarAdmin } from '../../components';\r\nimport {\r\n  Col,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  Row,\r\n  CustomInput,\r\n  Alert,\r\n  FormFeedback,\r\n  Card,\r\n} from 'reactstrap';\r\nimport { addProduct } from '../../redux/actions';\r\n\r\nconst AdminAddProduct = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { errorStatus, category } = useSelector(({ ProductsReducer }) => {\r\n    return {\r\n      category: ProductsReducer.category,\r\n      errorStatus: ProductsReducer.errorStatus,\r\n    };\r\n  });\r\n\r\n  const [errMessage, setErrMessage] = useState('');\r\n  const [visibleAlert, setVisibleAlert] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    kategori: '',\r\n    desc_umum: '',\r\n    desc_indikasi: '',\r\n    desc_komposisi: '',\r\n    desc_dosis: '',\r\n    desc_aturanpakai: '',\r\n    desc_kontraindikasi: '',\r\n    desc_efeksamping: '',\r\n    desc_perhatian: '',\r\n    stock_pcs: 0,\r\n    qty_per_pcs: 0,\r\n    satuan: '',\r\n    price_pcs: 0,\r\n    type_obat: '', // racik, umum\r\n    isPublish: false,\r\n  });\r\n\r\n  const [imageProduct, setImageProduct] = useState({\r\n    product_image_file_name: 'Select file',\r\n    product_image_file: undefined,\r\n  });\r\n\r\n  const {\r\n    name,\r\n    kategori,\r\n    desc_umum,\r\n    desc_indikasi,\r\n    desc_komposisi,\r\n    desc_dosis,\r\n    desc_aturanpakai,\r\n    desc_kontraindikasi,\r\n    desc_efeksamping,\r\n    desc_perhatian,\r\n    stock_pcs,\r\n    qty_per_pcs,\r\n    satuan,\r\n    price_pcs,\r\n    type_obat,\r\n    isPublish,\r\n  } = formData;\r\n\r\n  const {\r\n    product_image_file_name,\r\n    product_image_file,\r\n    banner_image_file_name,\r\n    banner_image_file,\r\n  } = imageProduct;\r\n\r\n  const handleChange = (prop, value) => {\r\n    setFormData({ ...formData, [prop]: value });\r\n  };\r\n\r\n  const handleProductImage = (e) => {\r\n    console.log('file', e.target.files);\r\n    if (e.target.files[0]) {\r\n      setImageProduct({\r\n        ...imageProduct,\r\n        product_image_file_name: e.target.files[0].name,\r\n        product_image_file: e.target.files[0],\r\n      });\r\n      let preview = document.getElementById('imgPreview');\r\n      preview.src = URL.createObjectURL(e.target.files[0]);\r\n      console.log('check img', preview);\r\n    }\r\n  };\r\n\r\n  let checkRequiredField =\r\n    name === '' ||\r\n    kategori === '' ||\r\n    stock_pcs === '' ||\r\n    qty_per_pcs === '' ||\r\n    satuan === '' ||\r\n    price_pcs === '' ||\r\n    type_obat === '';\r\n\r\n  let checkPositifNumber = stock_pcs < 0 || qty_per_pcs < 0 || price_pcs < 0;\r\n\r\n  const onSubmit = () => {\r\n    if (checkRequiredField) {\r\n      setVisibleAlert(true);\r\n      setErrMessage('Form masih ada yang kosong, silahkan lengkapi!');\r\n      setTimeout(() => {\r\n        setVisibleAlert(false);\r\n      }, 3000);\r\n    } else {\r\n      dispatch(\r\n        addProduct(formData, imageProduct.product_image_file, () => {\r\n          setVisibleAlert(true);\r\n          setErrMessage('Produk berhasil ditambahkan!');\r\n          setTimeout(() => {\r\n            history.push('/admin-product');\r\n            setVisibleAlert(false);\r\n          }, 2000);\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavbarAdmin />\r\n\r\n      <div className='row d-flex justify-content-center align-items-center mt-5'>\r\n        <div className='col-9'>\r\n          <Form>\r\n            <h3 className='text-left mb-4'>Tambah Produk</h3>\r\n            <hr />\r\n\r\n            {/* error message */}\r\n            <Alert\r\n              color={errMessage.includes('berhasil') ? 'success' : 'danger'}\r\n              isOpen={visibleAlert}\r\n              toggle={() => setVisibleAlert(false)}\r\n              fade={false}\r\n              className='text-center'\r\n            >\r\n              <h6>{errMessage}</h6>\r\n            </Alert>\r\n\r\n            <div className='row'>\r\n              <div className='col-12 d-flex justify-content-end'>\r\n                <Button\r\n                  color='danger'\r\n                  size='sm mb-3'\r\n                  onClick={() => history.push('/admin-product')}\r\n                >\r\n                  Kembali\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='row border rounded p-4'>\r\n              <div className='col-6 border-right pr-5'>\r\n                <FormGroup row className='position-relative'>\r\n                  <i\r\n                    class='material-icons position-absolute'\r\n                    style={{\r\n                      color: 'red',\r\n                      left: '7rem',\r\n                      top: '.3rem',\r\n                      fontSize: 10,\r\n                    }}\r\n                  >\r\n                    star\r\n                  </i>\r\n                  <Label for='name' sm={3}>\r\n                    Nama Produk\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='text'\r\n                      name='name'\r\n                      id='name'\r\n                      onChange={(e) => handleChange('name', e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row className='position-relative'>\r\n                  <i\r\n                    class='material-icons position-absolute'\r\n                    style={{\r\n                      color: 'red',\r\n                      left: '3.7rem',\r\n                      top: '.5rem',\r\n                      fontSize: 10,\r\n                    }}\r\n                  >\r\n                    star\r\n                  </i>\r\n                  <Label for='price_pcs' sm={3}>\r\n                    Harga\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='number'\r\n                      name='price_pcs'\r\n                      id='price_pcs'\r\n                      onChange={(e) =>\r\n                        handleChange('price_pcs', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row className='position-relative'>\r\n                  <i\r\n                    class='material-icons position-absolute'\r\n                    style={{\r\n                      color: 'red',\r\n                      left: '4.9rem',\r\n                      top: '.5rem',\r\n                      fontSize: 10,\r\n                    }}\r\n                  >\r\n                    star\r\n                  </i>\r\n                  <Label for='kategori' sm={3}>\r\n                    Kategori\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='select'\r\n                      name='kategori'\r\n                      id='kategori'\r\n                      onChange={(e) => handleChange('kategori', e.target.value)}\r\n                    >\r\n                      <option value='default'>-</option>\r\n                      {category.map((item, idx) => (\r\n                        <option value={item.idcategory}>{item.category}</option>\r\n                      ))}\r\n                    </Input>\r\n                  </Col>\r\n                </FormGroup>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup row className='position-relative'>\r\n                      <i\r\n                        class='material-icons position-absolute'\r\n                        style={{\r\n                          color: 'red',\r\n                          left: '3.5rem',\r\n                          top: '.5rem',\r\n                          fontSize: 10,\r\n                        }}\r\n                      >\r\n                        star\r\n                      </i>\r\n                      <Label for='stock_pcs' sm={6}>\r\n                        Stock\r\n                      </Label>\r\n                      <Col sm={6}>\r\n                        <Input\r\n                          type='number'\r\n                          name='stock_pcs'\r\n                          id='stock_pcs'\r\n                          onChange={(e) =>\r\n                            handleChange('stock_pcs', e.target.value)\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup row className='position-relative'>\r\n                      <i\r\n                        class='material-icons position-absolute'\r\n                        style={{\r\n                          color: 'red',\r\n                          left: '4rem',\r\n                          top: '.5rem',\r\n                          fontSize: 10,\r\n                        }}\r\n                      >\r\n                        star\r\n                      </i>\r\n                      <Label for='satuan' sm={3}>\r\n                        Satuan\r\n                      </Label>\r\n                      <Col sm={9}>\r\n                        <Input\r\n                          type='text'\r\n                          name='satuan'\r\n                          id='satuan'\r\n                          onChange={(e) =>\r\n                            handleChange('satuan', e.target.value)\r\n                          }\r\n                          placeholder='Kemasan/Botol'\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup row className='position-relative'>\r\n                      <i\r\n                        class='material-icons position-absolute'\r\n                        style={{\r\n                          color: 'red',\r\n                          left: '6.1rem',\r\n                          top: '.5rem',\r\n                          fontSize: 10,\r\n                        }}\r\n                      >\r\n                        star\r\n                      </i>\r\n                      <Label for='qty_per_pcs' sm={6}>\r\n                        Qty Per Pcs\r\n                      </Label>\r\n                      <Col sm={6}>\r\n                        <Input\r\n                          type='number'\r\n                          name='qty_per_pcs'\r\n                          id='qty_per_pcs'\r\n                          onChange={(e) =>\r\n                            handleChange('qty_per_pcs', e.target.value)\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup row className='position-relative'>\r\n                      <i\r\n                        class='material-icons position-absolute'\r\n                        style={{\r\n                          color: 'red',\r\n                          left: '5.7rem',\r\n                          top: '.5rem',\r\n                          fontSize: 10,\r\n                        }}\r\n                      >\r\n                        star\r\n                      </i>\r\n                      <Label for='type_obat' sm={4}>\r\n                        Type Obat\r\n                      </Label>\r\n                      <Col sm={8}>\r\n                        <Input\r\n                          type='text'\r\n                          name='type_obat'\r\n                          id='type_obat'\r\n                          onChange={(e) =>\r\n                            handleChange('type_obat', e.target.value)\r\n                          }\r\n                          placeholder='Umum/Racik'\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <hr />\r\n                <FormGroup row className='position-relative'>\r\n                  <i\r\n                    class='material-icons position-absolute'\r\n                    style={{\r\n                      color: 'red',\r\n                      left: '6.5rem',\r\n                      top: '.5rem',\r\n                      fontSize: 10,\r\n                    }}\r\n                  >\r\n                    star\r\n                  </i>\r\n                  <Label for='product_image' sm={3}>\r\n                    Foto Produk\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='file'\r\n                      id='product_image'\r\n                      label={product_image_file_name}\r\n                      onChange={handleProductImage}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <Card className='d-flex align-items-center p-5'>\r\n                  <img id='imgPreview' width='30%' />\r\n                </Card>\r\n              </div>\r\n              {/* start kolom 2 */}\r\n              <div className='col-6 pl-5'>\r\n                <FormGroup row>\r\n                  <Label for='desc_umum' sm={3}>\r\n                    Deskripsi Umum\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_umum'\r\n                      id='desc_umum'\r\n                      onChange={(e) =>\r\n                        handleChange('desc_umum', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_indikasi' sm={3}>\r\n                    Indikasi\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_indikasi'\r\n                      id='desc_indikasi'\r\n                      onChange={(e) =>\r\n                        handleChange('desc_indikasi', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_komposisi' sm={3}>\r\n                    Komposisi\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_komposisi'\r\n                      id='desc_komposisi'\r\n                      onChange={(e) =>\r\n                        handleChange('desc_komposisi', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_dosis' sm={3}>\r\n                    Dosis\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_dosis'\r\n                      id='desc_dosis'\r\n                      onChange={(e) =>\r\n                        handleChange('desc_dosis', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_aturanpakai' sm={3}>\r\n                    Aturan Pakai\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_aturanpakai'\r\n                      id='desc_aturanpakai'\r\n                      onChange={(e) =>\r\n                        handleChange('desc_aturanpakai', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_kontraindikasi' sm={3}>\r\n                    KontraIndikasi\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_kontraindikasi'\r\n                      id='desc_kontraindikasi'\r\n                      onChange={(e) =>\r\n                        handleChange('desc_kontraindikasi', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_efeksamping' sm={3}>\r\n                    Efek Samping\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_efeksamping'\r\n                      id='desc_efeksamping'\r\n                      onChange={(e) =>\r\n                        handleChange('desc_efeksamping', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_perhatian' sm={3}>\r\n                    Perhatian\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_perhatian'\r\n                      id='desc_perhatian'\r\n                      onChange={(e) =>\r\n                        handleChange('desc_perhatian', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='isPublish' sm={3}></Label>\r\n                  <Col>\r\n                    <CustomInput\r\n                      type='switch'\r\n                      id='isPublish'\r\n                      name='isPublish'\r\n                      label='Publish'\r\n                      onChange={(e) =>\r\n                        handleChange('isPublish', e.target.checked)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <div className='d-flex justify-content-end'>\r\n                  <Button color='success' className='w-25' onClick={onSubmit}>\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              {/* end kolom 2 */}\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminAddProduct;\r\n","E:\\Purwadhika\\Mentor\\Final project\\pharmago-react\\src\\pages\\AdminEditProduct\\index.js",["321","322","323","324","325","326","327","328","329","330","331"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\n\r\nimport { NavbarAdmin } from '../../components';\r\nimport {\r\n  Col,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  Row,\r\n  CustomInput,\r\n  Alert,\r\n  FormFeedback,\r\n  Card,\r\n} from 'reactstrap';\r\nimport { addProduct, editProduct, getAllProducts } from '../../redux/actions';\r\nimport { API_URL } from '../../support/urlApi';\r\n\r\nconst AdminEditProduct = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllProducts());\r\n    console.log('cek');\r\n  }, []);\r\n\r\n  const { errorStatus, category, allProducts } = useSelector(\r\n    ({ ProductsReducer }) => {\r\n      return {\r\n        category: ProductsReducer.category,\r\n        errorStatus: ProductsReducer.errorStatus,\r\n        allProducts: ProductsReducer.allProducts,\r\n      };\r\n    }\r\n  );\r\n\r\n  const { idproduct } = props.match.params;\r\n  let item = allProducts.filter(\r\n    (elem, idx) => elem.idproduct === parseInt(idproduct)\r\n  )[0];\r\n\r\n  // console.log(typeof parseInt(idproduct), typeof item.idproduct);\r\n\r\n  const [errMessage, setErrMessage] = useState('');\r\n  const [visibleAlert, setVisibleAlert] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: item.name,\r\n    kategori: item.idcategory,\r\n    desc_umum: item.desc_umum,\r\n    desc_indikasi: item.desc_indikasi,\r\n    desc_komposisi: item.desc_komposisi,\r\n    desc_dosis: item.desc_dosis,\r\n    desc_aturanpakai: item.desc_aturanpakai,\r\n    desc_kontraindikasi: item.desc_kontraindikasi,\r\n    desc_efeksamping: item.desc_efeksamping,\r\n    desc_perhatian: item.desc_perhatian,\r\n    stock_pcs: item.stock_pcs,\r\n    qty_per_pcs: item.qty_per_pcs,\r\n    satuan: item.satuan,\r\n    price_pcs: item.price_pcs,\r\n    type_obat: item.type_obat, // racik, umum\r\n    isPublish: item.isPublish,\r\n  });\r\n\r\n  const [imageProduct, setImageProduct] = useState({\r\n    product_image_file_name: '',\r\n    product_image_file: '',\r\n  });\r\n\r\n  const {\r\n    name,\r\n    kategori,\r\n    desc_umum,\r\n    desc_indikasi,\r\n    desc_komposisi,\r\n    desc_dosis,\r\n    desc_aturanpakai,\r\n    desc_kontraindikasi,\r\n    desc_efeksamping,\r\n    desc_perhatian,\r\n    stock_pcs,\r\n    qty_per_pcs,\r\n    satuan,\r\n    price_pcs,\r\n    type_obat,\r\n    isPublish,\r\n  } = formData;\r\n\r\n  const { product_image_file_name, product_image_file } = imageProduct;\r\n\r\n  const handleChange = (prop, value) => {\r\n    setFormData({ ...formData, [prop]: value });\r\n  };\r\n\r\n  const handleProductImage = (e) => {\r\n    console.log('file', e.target.files);\r\n    if (e.target.files[0]) {\r\n      setImageProduct({\r\n        ...imageProduct,\r\n        product_image_file_name: e.target.files[0].name,\r\n        product_image_file: e.target.files[0],\r\n      });\r\n      let preview = document.getElementById('imgPreview');\r\n      preview.src = URL.createObjectURL(e.target.files[0]);\r\n      console.log('check img', preview);\r\n    }\r\n  };\r\n\r\n  let checkRequiredField =\r\n    name === '' ||\r\n    kategori === '' ||\r\n    stock_pcs === '' ||\r\n    qty_per_pcs === '' ||\r\n    satuan === '' ||\r\n    price_pcs === '' ||\r\n    type_obat === '';\r\n\r\n  const onUpdate = () => {\r\n    if (checkRequiredField) {\r\n      setVisibleAlert(true);\r\n      setErrMessage(\r\n        'Kolom mandatory masih ada yang kosong, silahkan lengkapi!'\r\n      );\r\n      setTimeout(() => {\r\n        setVisibleAlert(false);\r\n      }, 3000);\r\n    } else {\r\n      dispatch(\r\n        editProduct(\r\n          idproduct,\r\n          formData,\r\n          imageProduct.product_image_file,\r\n          () => {\r\n            setVisibleAlert(true);\r\n            setErrMessage('Produk berhasil diupdate!');\r\n            setTimeout(() => {\r\n              history.push('/admin-product');\r\n              setVisibleAlert(false);\r\n            }, 2000);\r\n          }\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push('/admin-product');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavbarAdmin />\r\n\r\n      <div className='row d-flex justify-content-center align-items-center mt-5'>\r\n        <div className='col-9'>\r\n          <Form>\r\n            <h3 className='text-left mb-4'>Edit Produk</h3>\r\n            <hr />\r\n\r\n            {/* error message */}\r\n            <Alert\r\n              color={errMessage.includes('berhasil') ? 'success' : 'danger'}\r\n              isOpen={visibleAlert}\r\n              toggle={() => setVisibleAlert(false)}\r\n              fade={false}\r\n              className='text-center'\r\n            >\r\n              <h6>{errMessage}</h6>\r\n            </Alert>\r\n\r\n            <div className='row border rounded p-4'>\r\n              <div className='col-6 border-right pr-5'>\r\n                <FormGroup row className='position-relative'>\r\n                  <i\r\n                    class='material-icons position-absolute'\r\n                    style={{\r\n                      color: 'red',\r\n                      left: '7.1rem',\r\n                      top: '.5rem',\r\n                      fontSize: 10,\r\n                    }}\r\n                  >\r\n                    star\r\n                  </i>\r\n                  <Label for='name' sm={3}>\r\n                    Nama Produk\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='text'\r\n                      name='name'\r\n                      id='name'\r\n                      defaultValue={name}\r\n                      onChange={(e) => handleChange('name', e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row className='position-relative'>\r\n                  <i\r\n                    class='material-icons position-absolute'\r\n                    style={{\r\n                      color: 'red',\r\n                      left: '3.7rem',\r\n                      top: '.5rem',\r\n                      fontSize: 10,\r\n                    }}\r\n                  >\r\n                    star\r\n                  </i>\r\n                  <Label for='price_pcs' sm={3}>\r\n                    Harga\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='number'\r\n                      name='price_pcs'\r\n                      id='price_pcs'\r\n                      defaultValue={price_pcs}\r\n                      onChange={(e) =>\r\n                        handleChange('price_pcs', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row className='position-relative'>\r\n                  <i\r\n                    class='material-icons position-absolute'\r\n                    style={{\r\n                      color: 'red',\r\n                      left: '5rem',\r\n                      top: '.5rem',\r\n                      fontSize: 10,\r\n                    }}\r\n                  >\r\n                    star\r\n                  </i>\r\n                  <Label for='kategori' sm={3}>\r\n                    Kategori\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='select'\r\n                      name='kategori'\r\n                      id='kategori'\r\n                      defaultValue={item.idcategory}\r\n                      onChange={(e) => handleChange('kategori', e.target.value)}\r\n                    >\r\n                      {/* <option defaultChecked={item.idcategory}>\r\n                        {item.category}\r\n                      </option> */}\r\n                      {category.map((value, idx) => (\r\n                        <option key={idx} value={value.idcategory}>\r\n                          {value.category}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </Col>\r\n                </FormGroup>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup row className='position-relative'>\r\n                      <i\r\n                        class='material-icons position-absolute'\r\n                        style={{\r\n                          color: 'red',\r\n                          left: '3.5rem',\r\n                          top: '.5rem',\r\n                          fontSize: 10,\r\n                        }}\r\n                      >\r\n                        star\r\n                      </i>\r\n                      <Label for='stock_pcs' sm={6}>\r\n                        Stock\r\n                      </Label>\r\n                      <Col sm={6}>\r\n                        <Input\r\n                          type='number'\r\n                          name='stock_pcs'\r\n                          id='stock_pcs'\r\n                          defaultValue={Math.floor(stock_pcs)}\r\n                          onChange={(e) =>\r\n                            handleChange('stock_pcs', e.target.value)\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup row className='position-relative'>\r\n                      <i\r\n                        class='material-icons position-absolute'\r\n                        style={{\r\n                          color: 'red',\r\n                          left: '4.1rem',\r\n                          top: '.5rem',\r\n                          fontSize: 10,\r\n                        }}\r\n                      >\r\n                        star\r\n                      </i>\r\n                      <Label for='satuan' sm={3}>\r\n                        Satuan\r\n                      </Label>\r\n                      <Col sm={9}>\r\n                        <Input\r\n                          type='text'\r\n                          name='satuan'\r\n                          id='satuan'\r\n                          defaultValue={satuan}\r\n                          onChange={(e) =>\r\n                            handleChange('satuan', e.target.value)\r\n                          }\r\n                          placeholder='Kemasan/Botol'\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup row className='position-relative'>\r\n                      <i\r\n                        class='material-icons position-absolute'\r\n                        style={{\r\n                          color: 'red',\r\n                          left: '6.1rem',\r\n                          top: '.5rem',\r\n                          fontSize: 10,\r\n                        }}\r\n                      >\r\n                        star\r\n                      </i>\r\n                      <Label for='qty_per_pcs' sm={6}>\r\n                        Qty Per Pcs\r\n                      </Label>\r\n                      <Col sm={6}>\r\n                        <Input\r\n                          type='number'\r\n                          name='qty_per_pcs'\r\n                          id='qty_per_pcs'\r\n                          defaultValue={qty_per_pcs}\r\n                          onChange={(e) =>\r\n                            handleChange('qty_per_pcs', e.target.value)\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup row className='position-relative'>\r\n                      <i\r\n                        class='material-icons position-absolute'\r\n                        style={{\r\n                          color: 'red',\r\n                          left: '5.8rem',\r\n                          top: '.5rem',\r\n                          fontSize: 10,\r\n                        }}\r\n                      >\r\n                        star\r\n                      </i>\r\n                      <Label for='type_obat' sm={6}>\r\n                        Type Obat\r\n                      </Label>\r\n                      <Col sm={6}>\r\n                        <Input\r\n                          type='text'\r\n                          name='type_obat'\r\n                          id='type_obat'\r\n                          defaultValue={type_obat}\r\n                          onChange={(e) =>\r\n                            handleChange('type_obat', e.target.value)\r\n                          }\r\n                          placeholder='Umum/Racik'\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <hr />\r\n                <FormGroup row className='position-relative'>\r\n                  <i\r\n                    class='material-icons position-absolute'\r\n                    style={{\r\n                      color: 'red',\r\n                      left: '6.5rem',\r\n                      top: '.5rem',\r\n                      fontSize: 10,\r\n                    }}\r\n                  >\r\n                    star\r\n                  </i>\r\n                  <Label for='product_image' sm={3}>\r\n                    Foto Produk\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='file'\r\n                      id='product_image'\r\n                      label={product_image_file_name}\r\n                      onChange={handleProductImage}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <Card className='d-flex align-items-center p-5'>\r\n                  <img id='imgPreview' width='30%' className='border' />\r\n                </Card>\r\n              </div>\r\n              {/* start kolom 2 */}\r\n              <div className='col-6 pl-5'>\r\n                <FormGroup row>\r\n                  <Label for='desc_umum' sm={3}>\r\n                    Deskripsi Umum\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_umum'\r\n                      id='desc_umum'\r\n                      defaultValue={desc_umum}\r\n                      onChange={(e) =>\r\n                        handleChange('desc_umum', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_indikasi' sm={3}>\r\n                    Indikasi\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_indikasi'\r\n                      id='desc_indikasi'\r\n                      defaultValue={desc_indikasi}\r\n                      onChange={(e) =>\r\n                        handleChange('desc_indikasi', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_komposisi' sm={3}>\r\n                    Komposisi\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_komposisi'\r\n                      id='desc_komposisi'\r\n                      defaultValue={desc_komposisi}\r\n                      onChange={(e) =>\r\n                        handleChange('desc_komposisi', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_dosis' sm={3}>\r\n                    Dosis\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_dosis'\r\n                      id='desc_dosis'\r\n                      defaultValue={desc_dosis}\r\n                      onChange={(e) =>\r\n                        handleChange('desc_dosis', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_aturanpakai' sm={3}>\r\n                    Aturan Pakai\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_aturanpakai'\r\n                      id='desc_aturanpakai'\r\n                      defaultValue={desc_aturanpakai}\r\n                      onChange={(e) =>\r\n                        handleChange('desc_aturanpakai', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_kontraindikasi' sm={3}>\r\n                    KontraIndikasi\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_kontraindikasi'\r\n                      id='desc_kontraindikasi'\r\n                      defaultValue={desc_kontraindikasi}\r\n                      onChange={(e) =>\r\n                        handleChange('desc_kontraindikasi', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_efeksamping' sm={3}>\r\n                    Efek Samping\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_efeksamping'\r\n                      id='desc_efeksamping'\r\n                      defaultValue={desc_efeksamping}\r\n                      onChange={(e) =>\r\n                        handleChange('desc_efeksamping', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_perhatian' sm={3}>\r\n                    Perhatian\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_perhatian'\r\n                      id='desc_perhatian'\r\n                      defaultValue={desc_perhatian}\r\n                      onChange={(e) =>\r\n                        handleChange('desc_perhatian', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='isPublish' sm={3}></Label>\r\n                  <Col>\r\n                    <CustomInput\r\n                      type='switch'\r\n                      id='isPublish'\r\n                      name='isPublish'\r\n                      label='Publish'\r\n                      defaultChecked={isPublish}\r\n                      onChange={(e) =>\r\n                        handleChange('isPublish', e.target.checked)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <div className='d-flex justify-content-end'>\r\n                  <Button outline className='w-25 mr-3' onClick={onCancel}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button color='success' className='w-25' onClick={onUpdate}>\r\n                    Update\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              {/* end kolom 2 */}\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminEditProduct;\r\n",{"ruleId":"332","replacedBy":"333"},{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","severity":1,"message":"337","line":48,"column":6,"nodeType":"338","endLine":48,"endColumn":8,"suggestions":"339"},{"ruleId":"340","severity":1,"message":"341","line":3,"column":26,"nodeType":"342","messageId":"343","endLine":3,"endColumn":33},{"ruleId":"340","severity":1,"message":"344","line":3,"column":35,"nodeType":"342","messageId":"343","endLine":3,"endColumn":43},{"ruleId":"336","severity":1,"message":"337","line":13,"column":8,"nodeType":"338","endLine":13,"endColumn":10,"suggestions":"345"},{"ruleId":"340","severity":1,"message":"346","line":15,"column":13,"nodeType":"342","messageId":"343","endLine":15,"endColumn":19},{"ruleId":"340","severity":1,"message":"347","line":15,"column":21,"nodeType":"342","messageId":"343","endLine":15,"endColumn":29},{"ruleId":"340","severity":1,"message":"348","line":15,"column":31,"nodeType":"342","messageId":"343","endLine":15,"endColumn":45},{"ruleId":"340","severity":1,"message":"349","line":15,"column":47,"nodeType":"342","messageId":"343","endLine":15,"endColumn":61},{"ruleId":"336","severity":1,"message":"350","line":23,"column":8,"nodeType":"338","endLine":23,"endColumn":10,"suggestions":"351"},{"ruleId":"352","severity":1,"message":"353","line":27,"column":29,"nodeType":"354","messageId":"355","endLine":27,"endColumn":31},{"ruleId":"356","severity":1,"message":"357","line":93,"column":9,"nodeType":"358","messageId":"359","endLine":93,"endColumn":28},{"ruleId":"340","severity":1,"message":"360","line":19,"column":3,"nodeType":"342","messageId":"343","endLine":19,"endColumn":13},{"ruleId":"340","severity":1,"message":"361","line":23,"column":3,"nodeType":"342","messageId":"343","endLine":23,"endColumn":10},{"ruleId":"340","severity":1,"message":"362","line":25,"column":3,"nodeType":"342","messageId":"343","endLine":25,"endColumn":13},{"ruleId":"340","severity":1,"message":"363","line":26,"column":3,"nodeType":"342","messageId":"343","endLine":26,"endColumn":12},{"ruleId":"336","severity":1,"message":"337","line":57,"column":6,"nodeType":"338","endLine":57,"endColumn":8,"suggestions":"364"},{"ruleId":"356","severity":1,"message":"357","line":330,"column":5,"nodeType":"358","messageId":"359","endLine":334,"endColumn":6},{"ruleId":"365","severity":1,"message":"366","line":521,"column":21,"nodeType":"367","endLine":521,"endColumn":63},{"ruleId":"368","severity":1,"message":"369","line":628,"column":13,"nodeType":"370","endLine":632,"endColumn":15},{"ruleId":"340","severity":1,"message":"341","line":3,"column":34,"nodeType":"342","messageId":"343","endLine":3,"endColumn":41},{"ruleId":"340","severity":1,"message":"361","line":4,"column":51,"nodeType":"342","messageId":"343","endLine":4,"endColumn":58},{"ruleId":"336","severity":1,"message":"350","line":26,"column":8,"nodeType":"338","endLine":26,"endColumn":10,"suggestions":"371"},{"ruleId":"340","severity":1,"message":"346","line":28,"column":13,"nodeType":"342","messageId":"343","endLine":28,"endColumn":19},{"ruleId":"368","severity":1,"message":"369","line":53,"column":33,"nodeType":"370","endLine":53,"endColumn":160},{"ruleId":"368","severity":1,"message":"369","line":55,"column":33,"nodeType":"370","endLine":55,"endColumn":87},{"ruleId":"352","severity":1,"message":"353","line":88,"column":61,"nodeType":"354","messageId":"355","endLine":88,"endColumn":63},{"ruleId":"352","severity":1,"message":"353","line":154,"column":65,"nodeType":"354","messageId":"355","endLine":154,"endColumn":67},{"ruleId":"368","severity":1,"message":"369","line":159,"column":37,"nodeType":"370","endLine":159,"endColumn":204},{"ruleId":"352","severity":1,"message":"353","line":171,"column":53,"nodeType":"354","messageId":"355","endLine":171,"endColumn":55},{"ruleId":"336","severity":1,"message":"350","line":28,"column":8,"nodeType":"338","endLine":28,"endColumn":10,"suggestions":"372"},{"ruleId":"340","severity":1,"message":"373","line":71,"column":11,"nodeType":"342","messageId":"343","endLine":71,"endColumn":17},{"ruleId":"368","severity":1,"message":"369","line":153,"column":41,"nodeType":"370","endLine":171,"endColumn":43},{"ruleId":"374","severity":1,"message":"375","line":11,"column":1,"nodeType":"376","endLine":37,"endColumn":3},{"ruleId":"374","severity":1,"message":"375","line":14,"column":1,"nodeType":"376","endLine":64,"endColumn":3},{"ruleId":"374","severity":1,"message":"375","line":11,"column":1,"nodeType":"376","endLine":69,"endColumn":3},{"ruleId":"374","severity":1,"message":"375","line":14,"column":1,"nodeType":"376","endLine":76,"endColumn":3},{"ruleId":"340","severity":1,"message":"377","line":1,"column":17,"nodeType":"342","messageId":"343","endLine":1,"endColumn":26},{"ruleId":"368","severity":1,"message":"369","line":51,"column":29,"nodeType":"370","endLine":51,"endColumn":98},{"ruleId":"352","severity":1,"message":"353","line":18,"column":21,"nodeType":"354","messageId":"355","endLine":18,"endColumn":23},{"ruleId":"368","severity":1,"message":"369","line":32,"column":13,"nodeType":"370","endLine":32,"endColumn":71},{"ruleId":"340","severity":1,"message":"378","line":4,"column":10,"nodeType":"342","messageId":"343","endLine":4,"endColumn":14},{"ruleId":"336","severity":1,"message":"337","line":23,"column":10,"nodeType":"338","endLine":23,"endColumn":12,"suggestions":"379"},{"ruleId":"340","severity":1,"message":"380","line":137,"column":11,"nodeType":"342","messageId":"343","endLine":137,"endColumn":18},{"ruleId":"340","severity":1,"message":"380","line":152,"column":13,"nodeType":"342","messageId":"343","endLine":152,"endColumn":20},{"ruleId":"340","severity":1,"message":"381","line":3,"column":19,"nodeType":"342","messageId":"343","endLine":3,"endColumn":32},{"ruleId":"374","severity":1,"message":"375","line":4,"column":1,"nodeType":"376","endLine":20,"endColumn":3},{"ruleId":"336","severity":1,"message":"337","line":11,"column":6,"nodeType":"338","endLine":11,"endColumn":8,"suggestions":"382"},{"ruleId":"368","severity":1,"message":"369","line":41,"column":13,"nodeType":"370","endLine":45,"endColumn":15},{"ruleId":"340","severity":1,"message":"383","line":4,"column":21,"nodeType":"342","messageId":"343","endLine":4,"endColumn":29},{"ruleId":"340","severity":1,"message":"384","line":4,"column":31,"nodeType":"342","messageId":"343","endLine":4,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":16,"column":6,"nodeType":"338","endLine":16,"endColumn":8,"suggestions":"385"},{"ruleId":"386","severity":1,"message":"387","line":59,"column":32,"nodeType":"388","messageId":"389","endLine":59,"endColumn":34},{"ruleId":"352","severity":1,"message":"390","line":60,"column":29,"nodeType":"354","messageId":"355","endLine":60,"endColumn":31},{"ruleId":"368","severity":1,"message":"369","line":100,"column":11,"nodeType":"370","endLine":100,"endColumn":72},{"ruleId":"368","severity":1,"message":"369","line":47,"column":21,"nodeType":"370","endLine":55,"endColumn":23},{"ruleId":"336","severity":1,"message":"391","line":47,"column":6,"nodeType":"338","endLine":47,"endColumn":8,"suggestions":"392"},{"ruleId":"352","severity":1,"message":"353","line":52,"column":37,"nodeType":"354","messageId":"355","endLine":52,"endColumn":39},{"ruleId":"340","severity":1,"message":"393","line":20,"column":11,"nodeType":"342","messageId":"343","endLine":20,"endColumn":22},{"ruleId":"356","severity":1,"message":"357","line":118,"column":5,"nodeType":"358","messageId":"359","endLine":120,"endColumn":6},{"ruleId":"340","severity":1,"message":"377","line":1,"column":27,"nodeType":"342","messageId":"343","endLine":1,"endColumn":36},{"ruleId":"340","severity":1,"message":"377","line":1,"column":17,"nodeType":"342","messageId":"343","endLine":1,"endColumn":26},{"ruleId":"340","severity":1,"message":"394","line":2,"column":10,"nodeType":"342","messageId":"343","endLine":2,"endColumn":21},{"ruleId":"340","severity":1,"message":"378","line":3,"column":10,"nodeType":"342","messageId":"343","endLine":3,"endColumn":14},{"ruleId":"340","severity":1,"message":"395","line":3,"column":16,"nodeType":"342","messageId":"343","endLine":3,"endColumn":24},{"ruleId":"340","severity":1,"message":"396","line":10,"column":3,"nodeType":"342","messageId":"343","endLine":10,"endColumn":8},{"ruleId":"340","severity":1,"message":"397","line":12,"column":3,"nodeType":"342","messageId":"343","endLine":12,"endColumn":7},{"ruleId":"340","severity":1,"message":"398","line":13,"column":3,"nodeType":"342","messageId":"343","endLine":13,"endColumn":12},{"ruleId":"340","severity":1,"message":"399","line":14,"column":3,"nodeType":"342","messageId":"343","endLine":14,"endColumn":8},{"ruleId":"340","severity":1,"message":"400","line":15,"column":3,"nodeType":"342","messageId":"343","endLine":15,"endColumn":8},{"ruleId":"386","severity":1,"message":"387","line":42,"column":40,"nodeType":"388","messageId":"389","endLine":42,"endColumn":42},{"ruleId":"336","severity":1,"message":"401","line":27,"column":6,"nodeType":"338","endLine":27,"endColumn":8,"suggestions":"402"},{"ruleId":"386","severity":1,"message":"387","line":32,"column":43,"nodeType":"388","messageId":"389","endLine":32,"endColumn":45},{"ruleId":"340","severity":1,"message":"403","line":28,"column":10,"nodeType":"342","messageId":"343","endLine":28,"endColumn":17},{"ruleId":"340","severity":1,"message":"404","line":28,"column":19,"nodeType":"342","messageId":"343","endLine":28,"endColumn":29},{"ruleId":"340","severity":1,"message":"405","line":50,"column":5,"nodeType":"342","messageId":"343","endLine":50,"endColumn":13},{"ruleId":"340","severity":1,"message":"406","line":52,"column":5,"nodeType":"342","messageId":"343","endLine":52,"endColumn":18},{"ruleId":"336","severity":1,"message":"337","line":70,"column":6,"nodeType":"338","endLine":70,"endColumn":8,"suggestions":"407"},{"ruleId":"368","severity":1,"message":"369","line":227,"column":13,"nodeType":"370","endLine":227,"endColumn":64},{"ruleId":"368","severity":1,"message":"369","line":249,"column":17,"nodeType":"370","endLine":249,"endColumn":72},{"ruleId":"336","severity":1,"message":"337","line":24,"column":6,"nodeType":"338","endLine":24,"endColumn":8,"suggestions":"408"},{"ruleId":"356","severity":1,"message":"357","line":198,"column":5,"nodeType":"358","messageId":"359","endLine":200,"endColumn":6},{"ruleId":"340","severity":1,"message":"377","line":1,"column":17,"nodeType":"342","messageId":"343","endLine":1,"endColumn":26},{"ruleId":"340","severity":1,"message":"378","line":3,"column":10,"nodeType":"342","messageId":"343","endLine":3,"endColumn":14},{"ruleId":"340","severity":1,"message":"395","line":3,"column":16,"nodeType":"342","messageId":"343","endLine":3,"endColumn":24},{"ruleId":"340","severity":1,"message":"409","line":4,"column":8,"nodeType":"342","messageId":"343","endLine":4,"endColumn":18},{"ruleId":"340","severity":1,"message":"410","line":14,"column":3,"nodeType":"342","messageId":"343","endLine":14,"endColumn":11},{"ruleId":"340","severity":1,"message":"411","line":18,"column":3,"nodeType":"342","messageId":"343","endLine":18,"endColumn":15},{"ruleId":"340","severity":1,"message":"412","line":26,"column":11,"nodeType":"342","messageId":"343","endLine":26,"endColumn":22},{"ruleId":"340","severity":1,"message":"413","line":62,"column":5,"nodeType":"342","messageId":"343","endLine":62,"endColumn":14},{"ruleId":"340","severity":1,"message":"414","line":63,"column":5,"nodeType":"342","messageId":"343","endLine":63,"endColumn":18},{"ruleId":"340","severity":1,"message":"415","line":64,"column":5,"nodeType":"342","messageId":"343","endLine":64,"endColumn":19},{"ruleId":"340","severity":1,"message":"416","line":65,"column":5,"nodeType":"342","messageId":"343","endLine":65,"endColumn":15},{"ruleId":"340","severity":1,"message":"417","line":66,"column":5,"nodeType":"342","messageId":"343","endLine":66,"endColumn":21},{"ruleId":"340","severity":1,"message":"418","line":67,"column":5,"nodeType":"342","messageId":"343","endLine":67,"endColumn":24},{"ruleId":"340","severity":1,"message":"419","line":68,"column":5,"nodeType":"342","messageId":"343","endLine":68,"endColumn":21},{"ruleId":"340","severity":1,"message":"420","line":69,"column":5,"nodeType":"342","messageId":"343","endLine":69,"endColumn":19},{"ruleId":"340","severity":1,"message":"421","line":75,"column":5,"nodeType":"342","messageId":"343","endLine":75,"endColumn":14},{"ruleId":"340","severity":1,"message":"422","line":80,"column":5,"nodeType":"342","messageId":"343","endLine":80,"endColumn":23},{"ruleId":"340","severity":1,"message":"423","line":81,"column":5,"nodeType":"342","messageId":"343","endLine":81,"endColumn":27},{"ruleId":"340","severity":1,"message":"424","line":82,"column":5,"nodeType":"342","messageId":"343","endLine":82,"endColumn":22},{"ruleId":"340","severity":1,"message":"425","line":112,"column":7,"nodeType":"342","messageId":"343","endLine":112,"endColumn":25},{"ruleId":"368","severity":1,"message":"369","line":393,"column":19,"nodeType":"370","endLine":393,"endColumn":54},{"ruleId":"340","severity":1,"message":"378","line":3,"column":10,"nodeType":"342","messageId":"343","endLine":3,"endColumn":14},{"ruleId":"340","severity":1,"message":"395","line":3,"column":16,"nodeType":"342","messageId":"343","endLine":3,"endColumn":24},{"ruleId":"340","severity":1,"message":"409","line":4,"column":8,"nodeType":"342","messageId":"343","endLine":4,"endColumn":18},{"ruleId":"340","severity":1,"message":"410","line":14,"column":3,"nodeType":"342","messageId":"343","endLine":14,"endColumn":11},{"ruleId":"340","severity":1,"message":"411","line":18,"column":3,"nodeType":"342","messageId":"343","endLine":18,"endColumn":15},{"ruleId":"340","severity":1,"message":"426","line":21,"column":10,"nodeType":"342","messageId":"343","endLine":21,"endColumn":20},{"ruleId":"340","severity":1,"message":"427","line":22,"column":10,"nodeType":"342","messageId":"343","endLine":22,"endColumn":17},{"ruleId":"336","severity":1,"message":"337","line":31,"column":6,"nodeType":"338","endLine":31,"endColumn":8,"suggestions":"428"},{"ruleId":"340","severity":1,"message":"412","line":33,"column":11,"nodeType":"342","messageId":"343","endLine":33,"endColumn":22},{"ruleId":"340","severity":1,"message":"422","line":95,"column":36,"nodeType":"342","messageId":"343","endLine":95,"endColumn":54},{"ruleId":"368","severity":1,"message":"369","line":414,"column":19,"nodeType":"370","endLine":414,"endColumn":73},"no-native-reassign",["429"],"no-negated-in-lhs",["430"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["431"],"no-unused-vars","'CardImg' is defined but never used.","Identifier","unusedVar","'CardText' is defined but never used.",["432"],"'iduser' is assigned a value but never used.","'cartUser' is assigned a value but never used.","'customProducts' is assigned a value but never used.","'defaultAddress' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.location.search'. Either include them or remove the dependency array.",["433"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'deleteCart' is defined but never used.","'payment' is defined but never used.","'updateNote' is defined but never used.","'updateQty' is defined but never used.",["434"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["435"],["436"],"'btBeli' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'Link' is defined but never used.",["437"],"'results' is assigned a value but never used.","'getCustomCart' is defined but never used.",["438"],"'DrugIcon' is defined but never used.","'IvIcon' is defined but never used.",["439"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'chart' and 'dispatch'. Either include them or remove the dependency array.",["440"],"'allProducts' is assigned a value but never used.","'useDispatch' is defined but never used.","'Redirect' is defined but never used.","'Table' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'idTrx'. Either include them or remove the dependency array.",["441"],"'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'products' is assigned a value but never used.","'detailProduct' is assigned a value but never used.",["442"],["443"],"'classnames' is defined but never used.","'FormText' is defined but never used.","'FormFeedback' is defined but never used.","'errorStatus' is assigned a value but never used.","'desc_umum' is assigned a value but never used.","'desc_indikasi' is assigned a value but never used.","'desc_komposisi' is assigned a value but never used.","'desc_dosis' is assigned a value but never used.","'desc_aturanpakai' is assigned a value but never used.","'desc_kontraindikasi' is assigned a value but never used.","'desc_efeksamping' is assigned a value but never used.","'desc_perhatian' is assigned a value but never used.","'isPublish' is assigned a value but never used.","'product_image_file' is assigned a value but never used.","'banner_image_file_name' is assigned a value but never used.","'banner_image_file' is assigned a value but never used.","'checkPositifNumber' is assigned a value but never used.","'addProduct' is defined but never used.","'API_URL' is defined but never used.",["444"],"no-global-assign","no-unsafe-negation",{"desc":"445","fix":"446"},{"desc":"445","fix":"447"},{"desc":"448","fix":"449"},{"desc":"445","fix":"450"},{"desc":"448","fix":"451"},{"desc":"448","fix":"452"},{"desc":"445","fix":"453"},{"desc":"445","fix":"454"},{"desc":"445","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"445","fix":"460"},{"desc":"445","fix":"461"},{"desc":"445","fix":"462"},"Update the dependencies array to be: [dispatch]",{"range":"463","text":"464"},{"range":"465","text":"464"},"Update the dependencies array to be: [dispatch, props.location.search]",{"range":"466","text":"467"},{"range":"468","text":"464"},{"range":"469","text":"467"},{"range":"470","text":"467"},{"range":"471","text":"464"},{"range":"472","text":"464"},{"range":"473","text":"464"},"Update the dependencies array to be: [chart, dispatch]",{"range":"474","text":"475"},"Update the dependencies array to be: [dispatch, idTrx]",{"range":"476","text":"477"},{"range":"478","text":"464"},{"range":"479","text":"464"},{"range":"480","text":"464"},[1237,1239],"[dispatch]",[497,499],[897,899],"[dispatch, props.location.search]",[1537,1539],[932,934],[1181,1183],[883,885],[333,335],[517,519],[1452,1454],"[chart, dispatch]",[964,966],"[dispatch, idTrx]",[2172,2174],[700,702],[754,756]]