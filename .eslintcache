[{"/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/index.js":"1","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/App.js":"2","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/reportWebVitals.js":"3","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/assets/index.js":"4","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/pages/index.js":"5","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/pages/Home/index.js":"6","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/components/index.js":"7","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/components/Navbar/index.js":"8","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/components/CardCategory/index.js":"9","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/components/Banner/index.js":"10","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/reducers/index.js":"11","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/reducers/productsReducer.js":"12","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/actions/index.js":"13","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/actions/productsAction.js":"14","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/config/path.js":"15","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/pages/SearchResults/index.js":"16","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/components/Login/index.js":"17","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/actions/usersAction.js":"18","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/reducers/usersReducer.js":"19","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/components/ForgotPassword/index.js":"20","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/pages/ResetPassword/index.js":"21","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/components/Suggestions/index.js":"22"},{"size":878,"mtime":1611021646510,"results":"23","hashOfConfig":"24"},{"size":744,"mtime":1611231871555,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1610853364197,"results":"26","hashOfConfig":"24"},{"size":377,"mtime":1610932487970,"results":"27","hashOfConfig":"24"},{"size":163,"mtime":1611219270829,"results":"28","hashOfConfig":"24"},{"size":738,"mtime":1610968119747,"results":"29","hashOfConfig":"24"},{"size":306,"mtime":1611303278133,"results":"30","hashOfConfig":"24"},{"size":7421,"mtime":1611316588860,"results":"31","hashOfConfig":"24"},{"size":1817,"mtime":1611054190862,"results":"32","hashOfConfig":"24"},{"size":1080,"mtime":1611054725473,"results":"33","hashOfConfig":"24"},{"size":206,"mtime":1611130387957,"results":"34","hashOfConfig":"24"},{"size":277,"mtime":1611309056928,"results":"35","hashOfConfig":"24"},{"size":65,"mtime":1611109302336,"results":"36","hashOfConfig":"24"},{"size":817,"mtime":1611308987745,"results":"37","hashOfConfig":"24"},{"size":47,"mtime":1611019668142,"results":"38","hashOfConfig":"24"},{"size":475,"mtime":1611042741638,"results":"39","hashOfConfig":"24"},{"size":3213,"mtime":1611282260500,"results":"40","hashOfConfig":"24"},{"size":2101,"mtime":1611287003235,"results":"41","hashOfConfig":"24"},{"size":1296,"mtime":1611287027615,"results":"42","hashOfConfig":"24"},{"size":2569,"mtime":1611288034126,"results":"43","hashOfConfig":"24"},{"size":3875,"mtime":1611287948052,"results":"44","hashOfConfig":"24"},{"size":311,"mtime":1611316385226,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1y4sx9f",{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/index.js",[],["97","98"],"/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/App.js",["99","100"],"import React, { Fragment, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { NavbarCom } from './components';\nimport { getProducts, keepLogin } from './actions';\n\nimport { Home, ResetPassword, SearchResult } from './pages';\nimport { useDispatch } from 'react-redux';\n\nconst App = (props) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getProducts());\n    dispatch(keepLogin());\n  }, []);\n\n  return (\n    <div>\n      <NavbarCom />\n      <Switch>\n        <Route path='/' exact component={Home} />\n        <Route path='/search' component={SearchResult} />\n        <Route path='/reset-password/:iduser' component={ResetPassword} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/reportWebVitals.js",[],"/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/assets/index.js",[],"/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/pages/index.js",[],"/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/pages/Home/index.js",[],"/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/components/index.js",[],"/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/components/Navbar/index.js",["101","102","103","104","105","106","107"],"/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/components/CardCategory/index.js",["108","109"],"import React from 'react';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router-dom';\nimport { BloodIcon, DrugIcon, IvIcon } from '../../assets';\nimport './slide.css';\n\nconst CardCategory = () => {\n  const settings = {\n    infinite: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    pauseOnHover: false,\n    arrows: true,\n    className: 'slides',\n    variableWidth: true,\n    responsive: [\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  };\n\n  const image = [\n    BloodIcon,\n    DrugIcon,\n    IvIcon,\n    BloodIcon,\n    DrugIcon,\n    BloodIcon,\n    DrugIcon,\n    IvIcon,\n    BloodIcon,\n    DrugIcon,\n  ];\n\n  const handleCategory = (idx) => {\n    alert(idx);\n  };\n\n  return (\n    <div className='mt-5'>\n      <Slider {...settings}>\n        <div style={{ width: 200 }}>\n          <img src={BloodIcon} width='30%' style={{ marginTop: 20 }} />\n          <p style={{ fontSize: 15, textAlign: 'center', paddingTop: 20 }}>\n            Custom Orders\n          </p>\n        </div>\n        {image.map((item, idx) => {\n          return (\n            <Link to='/search' key={idx}>\n              <div style={{ width: 200 }}>\n                <img\n                  src={item}\n                  width='30%'\n                  alt={item}\n                  style={{ marginTop: 20 }}\n                />\n                <p\n                  style={{\n                    fontSize: 15,\n                    textAlign: 'center',\n                    paddingTop: 20,\n                    wordWrap: true,\n                  }}\n                >\n                  Category - {idx + 1}\n                </p>\n              </div>\n            </Link>\n          );\n        })}\n      </Slider>\n    </div>\n  );\n};\n\nexport default CardCategory;\n","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/components/Banner/index.js",["110"],"import React from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, {\n  Navigation,\n  Pagination,\n  EffectFade,\n  Autoplay,\n} from 'swiper';\nimport { Banner1, Banner2, Banner3 } from '../../assets';\nimport './banner.css';\nimport 'swiper/swiper-bundle.css';\n\nSwiperCore.use([Navigation, Pagination, EffectFade, Autoplay]);\n\nconst Banner = () => {\n  const banner = [\n    { name: 'banner-1', image: Banner1 },\n    { name: 'banner-2', image: Banner2 },\n    { name: 'banner-3', image: Banner3 },\n  ];\n  return (\n    <div className='mt-5'>\n      <Swiper\n        id='main'\n        tag='section'\n        wrapperTag='ul'\n        pagination={{ clickable: true }}\n        effect='fade'\n        autoplay={{ delay: 2000 }}\n      >\n        {banner.map((item, idx) => (\n          <SwiperSlide tag='li' key={idx}>\n            <img\n              src={item.image}\n              width='100%'\n              style={{ listStyle: 'none', borderRadius: '20px' }}\n            />\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    </div>\n  );\n};\n\nexport default Banner;\n","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/reducers/index.js",[],"/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/reducers/productsReducer.js",["111"],"/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/actions/index.js",[],"/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/actions/productsAction.js",[],"/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/config/path.js",[],"/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/pages/SearchResults/index.js",[],"/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/components/Login/index.js",["112"],"import React, { useState } from 'react';\nimport Modal from 'react-awesome-modal';\nimport { useForm } from 'react-hook-form';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { Alert } from 'reactstrap';\nimport './login.css';\n\nconst Login = (props) => {\n  const { register, errors, handleSubmit } = useForm();\n  // console.log('errorStatus login page', props.errorStatus, props.visibleAlert);\n  return (\n    <Modal\n      visible={props.visible}\n      width='450'\n      height='550'\n      effect='fadeInUp'\n      onClickAway={props.closeModal}\n    >\n      <div style={{ margin: '3rem', color: 'black', borderRadius: '20px' }}>\n        <div style={{ textAlign: 'center', paddingBottom: '2rem' }}>\n          <h4>Login PharmaGO</h4>\n          <p style={{ color: 'grey', fontSize: '14px' }}>\n            Belum punya akun?\n            <span style={{ color: 'black' }}> Daftar</span>\n          </p>\n        </div>\n        {/* alert message  */}\n        {props.errorStatus ? (\n          <Alert\n            color='danger'\n            isOpen={props.visibleAlert}\n            toggle={props.closeAlert}\n          >\n            {props.errorMessage}\n          </Alert>\n        ) : (\n          <Alert\n            color='success'\n            isOpen={props.visibleAlert}\n            toggle={props.closeAlert}\n          >\n            {props.errorMessage}\n          </Alert>\n        )}\n\n        <div>\n          <form onSubmit={handleSubmit(props.onSubmit)}>\n            <div className='mb-3'>\n              <label htmlFor='email' className='form-label'>\n                Email\n              </label>\n              <input\n                type='email'\n                name='email'\n                className='form-control'\n                id='email'\n                ref={register({\n                  required: 'Email is required.',\n                })}\n              />\n              <ErrorMessage\n                errors={errors}\n                name='email'\n                render={({ message }) => (\n                  <p className='mt-1 text-danger'>{message}</p>\n                )}\n              />\n            </div>\n            <div className='mb-4'>\n              <label htmlFor='password' className='form-label'>\n                Password\n              </label>\n              <input\n                type='password'\n                name='password'\n                className='form-control'\n                id='password'\n                ref={register({\n                  required: 'Password is required.',\n                })}\n              />\n              <ErrorMessage\n                errors={errors}\n                name='password'\n                render={({ message }) => (\n                  <p className='mt-1 text-danger'>{message}</p>\n                )}\n              />\n              <p\n                className='text-right mt-2 text-secondary'\n                onClick={props.openForgotPassword}\n                role='button'\n              >\n                Lupa Password?\n              </p>\n            </div>\n            <button type='submit' className='btn btn-success w-100'>\n              Login\n            </button>\n          </form>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default Login;\n","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/actions/usersAction.js",[],"/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/reducers/usersReducer.js",["113"],"const INITIAL_STATE = {\n  iduser: '',\n  name: '',\n  email: '',\n  handphone: '',\n  role: '',\n  isActive: false,\n  errorMessage: '',\n  errorStatus: null,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n    case 'KEEP_LOGIN':\n      console.log('success', action.payload);\n      return {\n        ...state,\n        iduser: action.payload.user[0].iduser,\n        name: action.payload.user[0].name,\n        email: action.payload.user[0].email,\n        handphone: action.payload.user[0].handphone,\n        role: action.payload.user[0].role,\n        isActive: action.payload.user[0].isActive,\n        errorStatus: action.payload.error,\n        errorMessage: action.payload.message,\n      };\n    case 'FORGOT_PASSWORD_SUCCESS':\n    case 'RESET_PASSWORD_SUCCESS':\n      console.log('success forgot password', action.payload);\n      return {\n        ...state,\n        errorMessage: action.payload.message,\n        errorStatus: action.payload.error,\n      };\n    case 'FORGOT_PASSWORD_FAILED':\n    case 'LOGIN_FAILED':\n      console.log('fail forgot password', action.payload);\n      return {\n        ...state,\n        errorMessage: action.payload.message,\n        errorStatus: action.payload.error,\n      };\n\n    default:\n      return state;\n  }\n};\n","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/components/ForgotPassword/index.js",[],"/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/pages/ResetPassword/index.js",["114"],"import React, { useRef, useState } from 'react';\nimport { Button } from 'reactstrap';\nimport { useForm } from 'react-hook-form';\nimport { Alert } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetPassword } from '../../actions';\nimport { useHistory } from 'react-router-dom';\n\nconst ResetPassword = (props) => {\n  const { register, errors, handleSubmit, watch } = useForm();\n  const history = useHistory();\n  const [visibleAlert, setVisibleAlert] = useState(false);\n\n  // show error notification setting\n  const password = useRef({});\n  password.current = watch('password', '');\n\n  const dispatch = useDispatch();\n\n  const { iduser } = props.match.params;\n\n  const onSubmit = (data) => {\n    const { password } = data;\n    dispatch(\n      resetPassword(password, iduser, () => {\n        setVisibleAlert(true);\n        console.log(password, iduser, visibleAlert);\n        setTimeout(() => {\n          history.push('/');\n        }, 3000);\n      })\n    );\n  };\n\n  return (\n    <div className='row d-flex justify-content-center align-items-center mt-5'>\n      <div className='col-3 '>\n        <div className='m-3'>\n          <h4 className='text-center'>Reset Password</h4>\n          <hr />\n\n          <p className='form-label pb-1' style={{ fontSize: '14px' }}>\n            Silakan masukkan dan konfirmasi kata sandi baru Anda di bawah untuk\n            mengakses akun Anda.\n          </p>\n\n          {/* success notification */}\n          {visibleAlert && (\n            <Alert\n              color='success'\n              isOpen={visibleAlert}\n              toggle={() => setVisibleAlert(false)}\n            >\n              Selamat password anda berhasil diperbaharui.\n            </Alert>\n          )}\n\n          <div className='mt-2'>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className='mb-3'>\n                <label htmlFor='password' className='form-label'>\n                  Password Baru\n                </label>\n                <input\n                  type='password'\n                  name='password'\n                  className='form-control'\n                  id='password'\n                  ref={register({\n                    required: 'Password is required.',\n                  })}\n                />\n                {errors.password && (\n                  <p\n                    style={{\n                      color: '#bf1650',\n                      fontSize: '13px',\n                      paddingTop: '5px',\n                    }}\n                  >\n                    {errors.password.message}\n                  </p>\n                )}\n              </div>\n              <div className='mb-3'>\n                <label htmlFor='confirmPassword' className='form-label'>\n                  Konfirmasi Password\n                </label>\n                <input\n                  type='password'\n                  name='confirmPassword'\n                  className='form-control'\n                  id='confirmPassword'\n                  ref={register({\n                    validate: (value) =>\n                      value === password.current ||\n                      'The passwords do not match',\n                  })}\n                />\n                {errors.confirmPassword && (\n                  <p\n                    style={{\n                      color: '#bf1650',\n                      fontSize: '13px',\n                      paddingTop: '5px',\n                    }}\n                  >\n                    {errors.confirmPassword.message}\n                  </p>\n                )}\n              </div>\n              <div>\n                <Button type='submit' color='success' className='w-100 mt-2'>\n                  Submit\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n","/home/maura/Documents/Bootcamp/finalExam/pharmago-react/src/components/Suggestions/index.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"124","line":15,"column":6,"nodeType":"125","endLine":15,"endColumn":8,"suggestions":"126"},{"ruleId":"119","severity":1,"message":"127","line":1,"column":35,"nodeType":"121","messageId":"122","endLine":1,"endColumn":44},{"ruleId":"119","severity":1,"message":"128","line":5,"column":37,"nodeType":"121","messageId":"122","endLine":5,"endColumn":46},{"ruleId":"119","severity":1,"message":"129","line":31,"column":9,"nodeType":"121","messageId":"122","endLine":31,"endColumn":16},{"ruleId":"119","severity":1,"message":"130","line":33,"column":38,"nodeType":"121","messageId":"122","endLine":33,"endColumn":44},{"ruleId":"119","severity":1,"message":"131","line":33,"column":52,"nodeType":"121","messageId":"122","endLine":33,"endColumn":60},{"ruleId":"119","severity":1,"message":"132","line":72,"column":9,"nodeType":"121","messageId":"122","endLine":72,"endColumn":29},{"ruleId":"119","severity":1,"message":"133","line":76,"column":9,"nodeType":"121","messageId":"122","endLine":76,"endColumn":30},{"ruleId":"119","severity":1,"message":"134","line":40,"column":9,"nodeType":"121","messageId":"122","endLine":40,"endColumn":23},{"ruleId":"135","severity":1,"message":"136","line":48,"column":11,"nodeType":"137","endLine":48,"endColumn":72},{"ruleId":"135","severity":1,"message":"136","line":33,"column":13,"nodeType":"137","endLine":37,"endColumn":15},{"ruleId":"138","severity":1,"message":"139","line":6,"column":1,"nodeType":"140","endLine":17,"endColumn":3},{"ruleId":"119","severity":1,"message":"141","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"139","line":12,"column":1,"nodeType":"140","endLine":48,"endColumn":3},{"ruleId":"119","severity":1,"message":"142","line":5,"column":23,"nodeType":"121","messageId":"122","endLine":5,"endColumn":34},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["145"],"'useEffect' is defined but never used.","'getSearch' is defined but never used.","'history' is assigned a value but never used.","'iduser' is assigned a value but never used.","'products' is assigned a value but never used.","'openAlertForPassword' is assigned a value but never used.","'closeAlertForPassword' is assigned a value but never used.","'handleCategory' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},"Update the dependencies array to be: [dispatch]",{"range":"148","text":"149"},[443,445],"[dispatch]"]