[{"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\index.js":"1","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\reportWebVitals.js":"2","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\App.js":"3","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\reducers\\index.js":"4","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\ProductPage.js":"5","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\ProductDetail.js":"6","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\reducers\\cartReducer.js":"7","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\reducers\\productsReducer.js":"8","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\reducers\\usersReducer.js":"9","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\index.js":"10","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\actions\\index.js":"11","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\index.js":"12","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\cardProduct.js":"13","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\actions\\cartAction.js":"14","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\actions\\usersAction.js":"15","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\actions\\productsAction.js":"16","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\Home\\index.js":"17","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\CardCategory\\index.js":"18","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\Banner\\index.js":"19","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\ResetPassword\\index.js":"20","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\Navbar\\index.js":"21","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\Login\\index.js":"22","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\ForgotPassword\\index.js":"23","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\Suggestions\\index.js":"24","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\support\\urlApi.js":"25","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\assets\\index.js":"26","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\cartPage.js":"27","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\CartPage.js":"28","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\reducers\\transactionsReducer.js":"29","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\actions\\transactionsAction.js":"30","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\TransactionPage.js":"31","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\NotFound\\index.js":"32","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\DashboardAdmin\\index.js":"33","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\Verify\\index.js":"34","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\Register\\index.js":"35","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\Footer\\index.js":"36","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\cardCart.js":"37","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\modalPayment.js":"38","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\AdminProduct\\index.js":"39","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\AdminProductDetail\\index.js":"40","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\AdminAddProduct\\index.js":"41","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\NavbarAdmin\\index.js":"42","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\App.test.js":"43","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\setupTests.js":"44","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\cardTransaction.js":"45","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\TransactionDetail.js":"46","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\ChartAdmin\\index.js":"47","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\AdminEditProduct\\index.js":"48","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\AdminTransaksiDetail\\index.js":"49","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\AdminTransaksi\\index.js":"50","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\modalCart.js":"51"},{"size":1081,"mtime":1611591186684,"results":"52","hashOfConfig":"53"},{"size":375,"mtime":1610862498016,"results":"54","hashOfConfig":"53"},{"size":2922,"mtime":1612103279961,"results":"55","hashOfConfig":"53"},{"size":366,"mtime":1611478615581,"results":"56","hashOfConfig":"53"},{"size":4720,"mtime":1612118534778,"results":"57","hashOfConfig":"53"},{"size":22244,"mtime":1612114939309,"results":"58","hashOfConfig":"53"},{"size":923,"mtime":1612103280024,"results":"59","hashOfConfig":"53"},{"size":1715,"mtime":1612103280025,"results":"60","hashOfConfig":"53"},{"size":1740,"mtime":1612103280027,"results":"61","hashOfConfig":"53"},{"size":760,"mtime":1612103280003,"results":"62","hashOfConfig":"53"},{"size":135,"mtime":1611478649508,"results":"63","hashOfConfig":"53"},{"size":484,"mtime":1612103279985,"results":"64","hashOfConfig":"53"},{"size":2104,"mtime":1612118889195,"results":"65","hashOfConfig":"53"},{"size":3545,"mtime":1612103386344,"results":"66","hashOfConfig":"53"},{"size":4839,"mtime":1612103280009,"results":"67","hashOfConfig":"53"},{"size":4031,"mtime":1612103280005,"results":"68","hashOfConfig":"53"},{"size":987,"mtime":1611591186689,"results":"69","hashOfConfig":"53"},{"size":3096,"mtime":1612103279969,"results":"70","hashOfConfig":"53"},{"size":1403,"mtime":1611591186667,"results":"71","hashOfConfig":"53"},{"size":3993,"mtime":1611327277458,"results":"72","hashOfConfig":"53"},{"size":15261,"mtime":1612103279977,"results":"73","hashOfConfig":"53"},{"size":4112,"mtime":1612103279974,"results":"74","hashOfConfig":"53"},{"size":2655,"mtime":1611327277448,"results":"75","hashOfConfig":"53"},{"size":2597,"mtime":1612103279981,"results":"76","hashOfConfig":"53"},{"size":46,"mtime":1611151407335,"results":"77","hashOfConfig":"53"},{"size":709,"mtime":1612103279966,"results":"78","hashOfConfig":"53"},{"size":6910,"mtime":1611347775422,"results":"79","hashOfConfig":"53"},{"size":20467,"mtime":1612121560552,"results":"80","hashOfConfig":"53"},{"size":1545,"mtime":1612103280026,"results":"81","hashOfConfig":"53"},{"size":5579,"mtime":1612111344957,"results":"82","hashOfConfig":"53"},{"size":2141,"mtime":1612121055173,"results":"83","hashOfConfig":"53"},{"size":479,"mtime":1611591186690,"results":"84","hashOfConfig":"53"},{"size":3350,"mtime":1612103279998,"results":"85","hashOfConfig":"53"},{"size":2998,"mtime":1611591186694,"results":"86","hashOfConfig":"53"},{"size":12951,"mtime":1612103280002,"results":"87","hashOfConfig":"53"},{"size":483,"mtime":1611591186671,"results":"88","hashOfConfig":"53"},{"size":5403,"mtime":1612103279983,"results":"89","hashOfConfig":"53"},{"size":1330,"mtime":1612112496598,"results":"90","hashOfConfig":"53"},{"size":9982,"mtime":1612103279990,"results":"91","hashOfConfig":"53"},{"size":10217,"mtime":1612103279991,"results":"92","hashOfConfig":"53"},{"size":18312,"mtime":1612103279987,"results":"93","hashOfConfig":"53"},{"size":2790,"mtime":1612103279979,"results":"94","hashOfConfig":"53"},{"size":254,"mtime":1610862498014,"results":"95","hashOfConfig":"53"},{"size":246,"mtime":1610862498016,"results":"96","hashOfConfig":"53"},{"size":3452,"mtime":1612120938359,"results":"97","hashOfConfig":"53"},{"size":10818,"mtime":1612116652532,"results":"98","hashOfConfig":"53"},{"size":0,"mtime":1612103279971,"results":"99","hashOfConfig":"53"},{"size":19801,"mtime":1612103279989,"results":"100","hashOfConfig":"53"},{"size":11283,"mtime":1612103279994,"results":"101","hashOfConfig":"53"},{"size":6195,"mtime":1612103279993,"results":"102","hashOfConfig":"53"},{"size":6231,"mtime":1612114159687,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"28n8og",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"106"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"106"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"106"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"106"},"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\index.js",[],["228","229"],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\reportWebVitals.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\App.js",["230"],"import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport ProductPage from './pages/ProductPage';\r\nimport ProductDetail from './pages/ProductDetail';\r\nimport { Footer, Navbar } from './components';\r\nimport {\r\n  Home,\r\n  Register,\r\n  ResetPassword,\r\n  NotFound,\r\n  DashboardAdmin,\r\n  Verify,\r\n  AdminProduct,\r\n  AdminProductDetail,\r\n  AdminAddProduct,\r\n  AdminEditProduct,\r\n  AdminTransaksi,\r\n  AdminTransaksiDetail,\r\n} from './pages';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getAllProducts,\r\n  keepLogin,\r\n  getCategory,\r\n  getCart,\r\n  getAllTransaction,\r\n} from './redux/actions';\r\nimport CartPage from './pages/CartPage';\r\nimport TransactionPage from './pages/TransactionPage';\r\nimport TransactionDetail from './pages/TransactionDetail';\r\n\r\nconst App = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(keepLogin());\r\n    dispatch(getAllProducts());\r\n    dispatch(getCategory());\r\n    dispatch(getCart());\r\n    dispatch(getAllTransaction());\r\n  }, []);\r\n\r\n  const { role } = useSelector(({ usersReducer }) => {\r\n    return {\r\n      role: usersReducer.role,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {role !== 'admin' && <Navbar />}\r\n      <Switch>\r\n        <Route\r\n          path='/'\r\n          exact\r\n          component={role === 'admin' ? DashboardAdmin : Home}\r\n        />\r\n        <Route path='/products' component={ProductPage} />\r\n        <Route path='/product-detail' component={ProductDetail} />\r\n        <Route path='/register' component={Register} />\r\n        <Route path='/reset-password/:iduser' component={ResetPassword} />\r\n        <Route path='/verify/:token' component={Verify} />\r\n\r\n        {/* user role */}\r\n        {role === 'admin' ? (\r\n          <>\r\n            {' '}\r\n            <Route path='/admin' component={DashboardAdmin} />\r\n            <Route path='/admin-product' component={AdminProduct} />\r\n            <Route\r\n              path='/admin-product-detail'\r\n              component={AdminProductDetail}\r\n            />\r\n            <Route path='/admin-add-product' component={AdminAddProduct} />\r\n            <Route\r\n              path='/admin-edit-product/:idproduct'\r\n              component={AdminEditProduct}\r\n            />\r\n            <Route path='/admin-transaksi' component={AdminTransaksi} />\r\n            <Route\r\n              path='/admin-transaksi-detail'\r\n              component={AdminTransaksiDetail}\r\n            />\r\n          </>\r\n        ) : role === 'user' && (\r\n          <>\r\n            <Route path='/order-list' component={TransactionPage} />\r\n            <Route path='/order-detail' component={TransactionDetail} />\r\n            <Route path='/cart' component={CartPage} />\r\n          </>)\r\n        }\r\n        <Route path='*' component={NotFound} />\r\n      </Switch>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\reducers\\index.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\ProductPage.js",["231","232"],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\ProductDetail.js",["233","234","235"],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\reducers\\cartReducer.js",["236"],"const INITIAL_STATE = {\r\n    cartUser: [],\r\n    customCart: []\r\n    // refresh: false,\r\n    // totalPayment: 0,\r\n    // success: false,\r\n    // error: '',\r\n    // message: ''\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case \"GET_CART\":\r\n            // console.log(\"CEK GET_CART REDUCER: \", action.payload)\r\n            return {\r\n                ...state,\r\n                cartUser: action.payload\r\n            }\r\n        case \"GET_CUSTOM_CART\":\r\n            console.log(\"CEK GET_CUSTOM_CART REDUCER: \", action.payload)\r\n            return {\r\n                ...state,\r\n                customCart: action.payload\r\n            }\r\n        case \"ADD_CUSTOM_CART\":\r\n            console.log(\"CEK ADD_CUSTOM_CART REDUCER: \", action.payload)\r\n            return {\r\n                ...state,\r\n                customCart: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\reducers\\productsReducer.js",["237"],"const INITIAL_STATE = {\r\n  products: [],\r\n  detailProduct: [],\r\n  category: [],\r\n  search: [],\r\n  errorStatus: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'GET_PRODUCTS':\r\n      console.log('productsReducer.js GET_PRODUCTS: ', action.payload);\r\n      return {\r\n        ...state,\r\n        products: action.payload,\r\n      };\r\n    case 'GET_CUSTOM_PRODUCTS':\r\n      console.log('productsReducer.js GET_CUSTOM_PRODUCTS: ', action.payload);\r\n      return {\r\n        ...state,\r\n        customProducts: action.payload,\r\n      };\r\n    case 'GET_PRODUCTS_SEARCH':\r\n      return {\r\n        ...state,\r\n        search: action.payload,\r\n      };\r\n    case 'GET_DETAIL':\r\n      console.log('productsReducer.js GET_DETAIL: ', action.payload);\r\n      return {\r\n        ...state,\r\n        detailProduct: action.payload,\r\n      };\r\n    case 'GET_CATEGORY':\r\n      console.log('productsReducer.js GET_CATEGORY: ', action.payload);\r\n      return {\r\n        ...state,\r\n        category: action.payload,\r\n      };\r\n    case 'ADD_PRODUCT_SUCCESS':\r\n      console.log('productsReducer.js ADD_PRODUCT_SUCCESS: ', action.payload);\r\n      return {\r\n        ...state,\r\n        errorStatus: action.payload.errorStatus,\r\n      };\r\n    case 'ADD_PRODUCT_FAIL':\r\n      console.log('productsReducer.js ADD_PRODUCT_FAIL: ', action.payload);\r\n      return {\r\n        ...state,\r\n        errorStatus: action.payload.errorStatus,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\reducers\\usersReducer.js",["238"],"const INITIAL_STATE = {\r\n  iduser: '',\r\n  name: '',\r\n  email: '',\r\n  handphone: '',\r\n  role: '',\r\n  isActive: false,\r\n  errorMessage: '',\r\n  errorStatus: null,\r\n  defaultAddress: []\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'REGISTER_SUCCESS':\r\n    case 'LOGIN_SUCCESS':\r\n    case 'KEEP_LOGIN':\r\n      console.log('success', action.payload.user[0].role);\r\n      return {\r\n        ...state,\r\n        iduser: action.payload.user[0].iduser,\r\n        name: action.payload.user[0].name,\r\n        email: action.payload.user[0].email,\r\n        handphone: action.payload.user[0].handphone,\r\n        role: action.payload.user[0].role,\r\n        isActive: action.payload.user[0].isActive,\r\n        errorStatus: action.payload.error,\r\n        errorMessage: action.payload.message,\r\n      };\r\n    case 'ACCOUNT_VERIFY_SUCCESS':\r\n    case 'FORGOT_PASSWORD_SUCCESS':\r\n    case 'RESET_PASSWORD_SUCCESS':\r\n      console.log('reducer', action.payload);\r\n      return {\r\n        ...state,\r\n        errorMessage: action.payload.message,\r\n        errorStatus: action.payload.error,\r\n      };\r\n    case 'REGISTER_FAILED':\r\n    case 'FORGOT_PASSWORD_FAILED':\r\n    case 'LOGIN_FAILED':\r\n      // console.log('fail forgot password', action.payload);\r\n      return {\r\n        ...state,\r\n        errorMessage: action.payload.message,\r\n        errorStatus: action.payload.error,\r\n      };\r\n    case 'GET_DEFAULT_ADDRESS':\r\n      // console.log('defaultadress', action.payload);\r\n      return {\r\n        defaultAddress: action.payload.defaultAddress\r\n      }\r\n    case 'LOGOUT':\r\n      return INITIAL_STATE;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\index.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\actions\\index.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\index.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\cardProduct.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\actions\\cartAction.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\actions\\usersAction.js",["239","240","241"],"import Axios from 'axios';\r\nimport { API_URL } from '../../support/urlApi';\r\n\r\nexport const registerUser = (data, cb) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const results = await Axios.post(API_URL + `/users/register`, { data });\r\n      console.log('check registerUser', results);\r\n      dispatch({\r\n        type: 'REGISTER_SUCCESS',\r\n        payload: results.data,\r\n      });\r\n      cb();\r\n    } catch (error) {\r\n      console.log(error.response);\r\n      dispatch({\r\n        type: 'REGISTER_FAILED',\r\n        payload: error.response.data,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const accountVerify = (otp, token, cb) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const headers = {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n\r\n      const results = await Axios.patch(\r\n        API_URL + `/users/account-verify`,\r\n        {\r\n          otp,\r\n        },\r\n        headers\r\n      );\r\n      dispatch({\r\n        type: 'ACCOUNT_VERIFY_SUCCESS',\r\n        payload: results.data,\r\n      });\r\n      cb();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const loginUser = (email, password, cb) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const results = await Axios.post(API_URL + `/users/login`, {\r\n        email,\r\n        password,\r\n      });\r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: results.data,\r\n      });\r\n      cb();\r\n      localStorage.setItem('token', results.data.token);\r\n      const headers = {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      };\r\n      if (results) {\r\n        let get = await Axios.get(API_URL + `/cart/${results.data.user[0].iduser}`, headers)\r\n        localStorage.setItem(`refreshcart`, results.data.user[0].iduser);\r\n        dispatch({\r\n          type: 'GET_CART',\r\n          payload: get.data.cartUser\r\n        });\r\n        let results = await Axios.get(API_URL + `/users/defaultAddress/${results.data.user[0].iduser}`);\r\n        dispatch({\r\n          type: 'GET_DEFAULT_ADDRESS',\r\n          payload: results.data.defaultAddress\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n        type: 'LOGIN_FAILED',\r\n        payload: error.response ? error.response.data : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const forgotPassword = (email, cb) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const results = await Axios.post(API_URL + `/users/forgot-password`, {\r\n        email,\r\n      });\r\n      console.log('action forgotPassword', results);\r\n      dispatch({\r\n        type: 'FORGOT_PASSWORD_SUCCESS',\r\n        payload: results.data,\r\n      });\r\n      cb();\r\n    } catch (error) {\r\n      console.log('action error forgotPassword', error.response);\r\n      dispatch({\r\n        type: 'FORGOT_PASSWORD_FAILED',\r\n        payload: error.response.data,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const resetPassword = (password, iduser, cb) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const results = await Axios.post(API_URL + `/users/reset-password`, {\r\n        password,\r\n        iduser,\r\n      });\r\n      dispatch({\r\n        type: 'RESET_PASSWORD_SUCCESS',\r\n        payload: results.data,\r\n      });\r\n      cb();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const keepLogin = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const headers = {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      };\r\n      if (localStorage.getItem('token')) {\r\n        let results = await Axios.get(API_URL + `/users/keep-login`, headers);\r\n        localStorage.setItem('token', results.data.token);\r\n        dispatch({\r\n          type: 'KEEP_LOGIN',\r\n          payload: results.data,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getDefaultAddress = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const headers = {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      };\r\n      if (localStorage.getItem('token')) {\r\n        let results = await Axios.get(API_URL + `/users/defaultAddress`, headers);\r\n        dispatch({\r\n          type: 'GET_DEFAULT_ADDRESS',\r\n          payload: results.data,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\nexport const logoutUser = (cb) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      localStorage.removeItem('token');\r\n      dispatch({\r\n        type: 'LOGOUT',\r\n      });\r\n      cb();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\actions\\productsAction.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\Home\\index.js",["242"],"import React, { useEffect } from 'react';\r\nimport { CardCategory, Banner } from '../../components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getProducts } from '../../redux/actions/productsAction';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts());\r\n  }, []);\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div\r\n        className='text-center w-75 m-auto'\r\n        style={{\r\n          padding: '2rem',\r\n        }}\r\n      >\r\n        <h1 className='mb-3'>Selamat Datang di PharmaGo</h1>\r\n        <p>\r\n          <b>PharmaGO</b> merupakan salah satu aplikasi beli obat secara online.\r\n          PharmaGO yang memiliki slogan #obataslikapanpun hadir sebagai Platform\r\n          Beli Obat Online pertama di Indonesia yang benar-benar buka 24 jam\r\n          nonstop dan terlengkap di Indonesia.\r\n        </p>\r\n      </div>\r\n      <CardCategory />\r\n      <Banner />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\CardCategory\\index.js",["243","244","245","246"],"import React, { useEffect } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { Link } from 'react-router-dom';\r\nimport { BloodIcon, DrugIcon, IvIcon } from '../../assets';\r\nimport './slide.css';\r\nimport { getCategory } from '../../redux/actions/productsAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst CardCategory = () => {\r\n  // GET CATEGORY\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategory());\r\n  }, []);\r\n\r\n  const { category } = useSelector((state) => {\r\n    return {\r\n      category: state.ProductsReducer.category,\r\n    };\r\n  });\r\n\r\n  const settings = {\r\n    infinite: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    pauseOnHover: false,\r\n    arrows: true,\r\n    className: 'slides',\r\n    variableWidth: true,\r\n    responsive: [\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className='mt-5'>\r\n      <div>\r\n        <h4 className='text-center'>Menu Kategori Pilihan</h4>\r\n        <hr className='mt-4 mb-4' />\r\n      </div>\r\n      <Slider {...settings}>\r\n        <div style={{ width: 200 }}>\r\n          <img src={BloodIcon} width='30%' style={{ marginTop: 20 }} />\r\n          <p style={{ fontSize: 15, textAlign: 'center', paddingTop: 20 }}>\r\n            Custom Orders\r\n          </p>\r\n        </div>\r\n        {category.length > 0 &&\r\n          category.map((item, idx) => {\r\n            return (\r\n              <Link to={`/products?idcategory=${item.idcategory}`} key={idx}>\r\n                <div style={{ width: 200 }}>\r\n                  <img\r\n                    src={item.thumb}\r\n                    width='30%'\r\n                    alt={item.category}\r\n                    style={{ marginTop: 20 }}\r\n                  />\r\n                  <p\r\n                    style={{\r\n                      fontSize: 14,\r\n                      textAlign: 'center',\r\n                      paddingTop: 20,\r\n                      wordWrap: true,\r\n                      color: 'white',\r\n                    }}\r\n                  >\r\n                    {/* Category - {idx + 1} */}\r\n                    {item.category}\r\n                  </p>\r\n                </div>\r\n              </Link>\r\n            );\r\n          })}\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardCategory;\r\n","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\Banner\\index.js",["247"],"import React from 'react';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, {\r\n  Navigation,\r\n  Pagination,\r\n  EffectFade,\r\n  Autoplay,\r\n} from 'swiper';\r\nimport { Banner1, Banner2, Banner3 } from '../../assets';\r\nimport './banner.css';\r\nimport 'swiper/swiper-bundle.css';\r\n\r\nSwiperCore.use([Navigation, Pagination, EffectFade, Autoplay]);\r\n\r\nconst Banner = () => {\r\n  const banner = [\r\n    { name: 'banner-1', image: Banner1 },\r\n    { name: 'banner-2', image: Banner2 },\r\n    { name: 'banner-3', image: Banner3 },\r\n  ];\r\n  return (\r\n    <div style={{ marginTop: '5rem' }}>\r\n      <div className='text-center'>\r\n        <h4 className=' mb-4'>Penawaran Menarik</h4>\r\n        <p>\r\n          Sehat lebih mudah dengan berbagai penawaran dan promo terbaru untuk\r\n          kamu\r\n        </p>\r\n        <hr className='mt-4 mb-4' />\r\n      </div>\r\n      <Swiper\r\n        id='main'\r\n        tag='section'\r\n        wrapperTag='ul'\r\n        pagination={{ clickable: true }}\r\n        effect='fade'\r\n        autoplay={{ delay: 2000 }}\r\n      >\r\n        {banner.map((item, idx) => (\r\n          <SwiperSlide tag='li' key={idx}>\r\n            <img\r\n              src={item.image}\r\n              width='100%'\r\n              style={{ listStyle: 'none', borderRadius: '20px' }}\r\n            />\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\ResetPassword\\index.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\Navbar\\index.js",["248","249","250","251","252","253","254","255","256","257","258","259","260"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport { LogoPharmaGo, no_data } from '../../assets';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './navbar.css';\r\nimport { Login, ForgotPassword, Suggestions } from '..';\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Button,\r\n  Badge,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { loginUser, forgotPassword, logoutUser, getCart, getDetail } from '../../redux/actions';\r\nimport { API_URL } from '../../support/urlApi';\r\n\r\nconst NavbarCom = (props) => {\r\n  const [results, setResults] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [openSearch, setOpenSearch] = useState(false);\r\n  const [visibleAlert, setVisibleAlert] = useState(false);\r\n  const [visibleForgotPassword, setVisibleForgotPassword] = useState(false);\r\n  const [visibleAlertForgotPassword, setVisibleAlertForgotPassword] = useState(\r\n    false\r\n  );\r\n  const [dropCartOpen, setDropCartOpen] = useState(false);\r\n\r\n\r\n  const searchRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  const toggleCart = () => setDropCartOpen((prevState) => !prevState);\r\n  const history = useHistory();\r\n\r\n  const { errorStatus, errorMessage, iduser, role, products, cartUser, detailProduct } = useSelector(\r\n    ({ usersReducer, ProductsReducer, CartReducer }) => {\r\n      return {\r\n        errorStatus: usersReducer.errorStatus,\r\n        errorMessage: usersReducer.errorMessage,\r\n        role: usersReducer.role,\r\n        iduser: usersReducer.iduser,\r\n        products: ProductsReducer.products,\r\n        cartUser: CartReducer.cartUser,\r\n        detailProduct: ProductsReducer.detailProduct\r\n      };\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getCart())\r\n  }, [])\r\n\r\n  // submit for login form\r\n  const onSubmit = (data) => {\r\n    const { email, password } = data;\r\n    dispatch(\r\n      loginUser(email, password, () => {\r\n        setVisibleAlert(true);\r\n        setTimeout(() => {\r\n          setVisible(false);\r\n          history.push('/');\r\n        }, 1500);\r\n      })\r\n    );\r\n    setVisibleAlert(true);\r\n    setTimeout(() => {\r\n      setVisibleAlert(false);\r\n    }, 2000);\r\n  };\r\n\r\n  //  open/close modal alert\r\n  const openAlert = () => {\r\n    setVisibleAlert(true);\r\n  };\r\n\r\n  const closeAlert = () => {\r\n    setVisibleAlert(false);\r\n  };\r\n\r\n  //  open/close modal alert\r\n  const openAlertForPassword = () => {\r\n    setVisibleAlertForgotPassword(true);\r\n  };\r\n\r\n  const closeAlertForPassword = () => {\r\n    setVisibleAlertForgotPassword(false);\r\n  };\r\n\r\n  // open/clsoe login modal\r\n  const openModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  //  open/close forgot password modal\r\n  const openForgotPassword = () => {\r\n    setVisibleForgotPassword(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n    }, 100);\r\n  };\r\n\r\n  const closeForgotPassword = () => {\r\n    setVisibleForgotPassword(false);\r\n  };\r\n\r\n  // submit for forgot password modal\r\n  const onForgotPassword = (data) => {\r\n    let { email } = data;\r\n    dispatch(\r\n      forgotPassword(email, () => {\r\n        setVisibleAlertForgotPassword(true);\r\n        setTimeout(() => {\r\n          setTimeout(() => {\r\n            setVisibleAlertForgotPassword(false);\r\n          }, 2000);\r\n          setVisibleForgotPassword(false);\r\n        }, 3000);\r\n      })\r\n    );\r\n    setVisibleAlertForgotPassword(true);\r\n    setTimeout(() => {\r\n      setVisibleAlertForgotPassword(false);\r\n    }, 2000);\r\n  };\r\n\r\n  // get search product\r\n  const getSearchProduct = (query) => {\r\n    axios\r\n      .get(`${API_URL}/products/search?keyword=${query}`)\r\n      .then(({ data }) => {\r\n        setResults(data.products);\r\n      });\r\n  };\r\n\r\n  // handle search\r\n  const handleInputChange = (e) => {\r\n    if (e.target.value.length > 0) {\r\n      setOpenSearch(true);\r\n      setQuery(e.target.value);\r\n      if (query && query.length > 1) {\r\n        if (query.length % 2 === 0) {\r\n          getSearchProduct(query);\r\n        }\r\n      }\r\n    } else {\r\n      setOpenSearch(false);\r\n    }\r\n  };\r\n\r\n  // calculate qty cart\r\n  const qtyCart = () => {\r\n    let totalQty = 0\r\n    if (cartUser.length > 0) {\r\n      cartUser.forEach((item) => {\r\n        totalQty += parseInt(item.qty)\r\n      })\r\n      return totalQty\r\n    }\r\n  };\r\n\r\n  // limit name function\r\n  const limitName = (item) => {\r\n    if (item.length > 20) {\r\n      let newName = ''\r\n      let splited = [...item]\r\n      splited.forEach((e, idx) => {\r\n        if (idx < 20) {\r\n          newName += e\r\n        }\r\n      })\r\n      newName += '...'\r\n      return newName\r\n    } else {\r\n      return item\r\n    }\r\n  }\r\n\r\n  // render dropdown cart\r\n  const cartIsEmpty = () => {\r\n    if (cartUser.length > 0) {\r\n      return <>\r\n        <DropdownItem ><span style={{ letterSpacing: 1.5 }}>Total ({qtyCart()})</span><span style={{ float: 'right' }}>\r\n          <Link style={{ color: '#27ae60', fontWeight: 500, letterSpacing: 2 }} to='/cart'>Cart</Link></span></DropdownItem>\r\n        <DropdownItem divider style={{ marginLeft: 7, marginRight: 7 }} />\r\n        <div style={{ overflowY: 'auto', width: 400, maxHeight: 500 }}>\r\n          {renderCart()}\r\n        </div>\r\n      </>\r\n\r\n    } else {\r\n      return <><CardBody>\r\n        <img src={no_data} className='image' width='10%' />\r\n        <p style={{ textAlign: 'center', marginTop: 10 }}>Keranjang Kamu Kosong Nih ☹</p>\r\n      </CardBody>\r\n      </>\r\n    }\r\n  }\r\n\r\n  const renderCart = () => {\r\n    return cartUser.map((item, index) => {\r\n      return (\r\n        <>\r\n          <Link to={`/product-detail?idproduct=${item.idproduct}`} style={{ textDecoration: 'none', color: 'black' }} onClick={toggleCart}>\r\n            <div className=\"card-tranparent d-flex\"  >\r\n              <div style={{ flex: 1 }}>\r\n                <img src={item.product_image} width='100%' />\r\n              </div>\r\n              <div style={{ flex: 2, marginTop: 20 }}>\r\n                <p style={{ fontSize: 14, fontWeight: '600' }}>{limitName(item.name)}</p>\r\n                <p style={{ fontSize: 12 }}>{item.qty} {item.satuan} </p>\r\n              </div>\r\n              <div style={{ flex: 1, marginTop: 50, color: '#f39c12', fontWeight: '500' }}>\r\n                <p >Rp.{item.price_pcs.toLocaleString()}</p>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n          <DropdownItem divider style={{ marginLeft: 7, marginRight: 7 }} />\r\n        </>\r\n      )\r\n    })\r\n  }\r\n\r\n  // Link to Register\r\n  const linkToRegister = () => {\r\n    history.push('/register');\r\n    setVisible(false);\r\n  };\r\n\r\n  const onLogout = () => {\r\n    dispatch(\r\n      logoutUser(() => {\r\n        setLoading(true);\r\n        history.push('/');\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='border-bottom pb-3 pt-3'\r\n      style={{ backgroundColor: 'white' }}\r\n    >\r\n      <div className='container pt-2 pb-0'>\r\n        <div className='row'>\r\n          <div className='col-3 align-self-center'>\r\n            <Link to='/'>\r\n              <img src={LogoPharmaGo} className='image' alt='pharmago' />\r\n            </Link>\r\n          </div>\r\n          <div className='col-6 align-self-center'>\r\n            <Suggestions\r\n              results={results}\r\n              searchRef={searchRef}\r\n              handleInputChange={handleInputChange}\r\n              openSearch={openSearch}\r\n            />\r\n          </div>\r\n          <div className='col-3 align-selft-center'>\r\n            <div className='d-flex justify-content-end right-menu'>\r\n              <ul className='right-menu_ul'>\r\n\r\n                {/* CART menu */}\r\n                <li className='mr-4'>\r\n                  <Dropdown isOpen={dropCartOpen} toggle={toggleCart}>\r\n                    <DropdownToggle\r\n                      style={{\r\n                        backgroundColor: 'transparent',\r\n                        border: 'none',\r\n                      }}\r\n                      onClick={() => dispatch(getCart())}\r\n                    >\r\n                      <i className='large material-icons right-menu_icon'>\r\n                        shopping_cart\r\n                    </i>\r\n                      <Badge color='danger' pill style={{ marginRight: -30, position: 'relative', left: -15, top: -20 }}>{qtyCart()}</Badge>\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right style={{ borderRadius: 5 }} >\r\n                      {cartIsEmpty()}\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                </li>\r\n                <li className='mr-2'>\r\n                  <Link to='/'>\r\n                    <i className='large material-icons right-menu_icon'>\r\n                      notifications\r\n                    </i>\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className='ml-3'>\r\n                  {/* user role menu */}\r\n                  {iduser ?\r\n                    role === \"admin\" ? (\r\n                      <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n                        <DropdownToggle\r\n                          style={{\r\n                            backgroundColor: 'transparent',\r\n                            border: 'none',\r\n                          }}\r\n                        >\r\n                          <i className='large material-icons right-menu_icon'>\r\n                            account_circle\r\n                        </i>\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem>Dashboard Admin</DropdownItem>\r\n                          <DropdownItem onClick={onLogout}>Logout</DropdownItem>\r\n                        </DropdownMenu>\r\n                      </Dropdown>\r\n                    ) : (\r\n                        <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n                          <DropdownToggle\r\n                            style={{\r\n                              backgroundColor: 'transparent',\r\n                              border: 'none',\r\n                            }}\r\n                          >\r\n                            <i className='large material-icons right-menu_icon'>\r\n                              account_circle\r\n                        </i>\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem>Profile</DropdownItem>\r\n                            <DropdownItem onClick={onLogout}>Logout</DropdownItem>\r\n                          </DropdownMenu>\r\n                        </Dropdown>\r\n                      )\r\n                    : (\r\n                      <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n                        <DropdownToggle\r\n                          style={{\r\n                            backgroundColor: 'transparent',\r\n                            border: 'none',\r\n                            color: 'black',\r\n                            fontWeight: 'bold',\r\n                          }}\r\n                          onClick={openModal}\r\n                        >\r\n                          <i className='large material-icons right-menu_icon'>\r\n                            input\r\n                        </i>\r\n                        </DropdownToggle>\r\n                        {/* <DropdownMenu right>\r\n                        <DropdownItem onClick={openModal}>Login</DropdownItem>\r\n                      </DropdownMenu> */}\r\n                      </Dropdown>\r\n                    )}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* login modal */}\r\n      <Login\r\n        visible={visible}\r\n        closeModal={closeModal}\r\n        onSubmit={onSubmit}\r\n        openAlert={openAlert}\r\n        closeAlert={closeAlert}\r\n        visibleAlert={visibleAlert}\r\n        errorStatus={errorStatus}\r\n        errorMessage={errorMessage}\r\n        openForgotPassword={openForgotPassword}\r\n        linkToRegister={linkToRegister}\r\n      />\r\n\r\n      {/* forgot password modal */}\r\n      <ForgotPassword\r\n        visibleForgotPassword={visibleForgotPassword}\r\n        visibleAlert={visibleAlertForgotPassword}\r\n        closeForgotPassword={closeForgotPassword}\r\n        openForgotPassword={openForgotPassword}\r\n        errorStatus={errorStatus}\r\n        errorMessage={errorMessage}\r\n        submit={onForgotPassword}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavbarCom;\r\n\r\n// 41b304dfe5d68753df30e526f2b2aecc\r\n","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\Login\\index.js",["261"],"import React, { useState } from 'react';\r\nimport Modal from 'react-awesome-modal';\r\nimport { useForm } from 'react-hook-form';\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { Alert } from 'reactstrap';\r\nimport './login.css';\r\n\r\nconst Login = (props) => {\r\n  const { register, errors, handleSubmit } = useForm();\r\n  return (\r\n    <Modal\r\n      visible={props.visible}\r\n      width='450'\r\n      height='550'\r\n      effect='fadeInUp'\r\n      onClickAway={props.closeModal}\r\n    >\r\n      <div style={{ margin: '3rem', color: 'black', borderRadius: '20px' }}>\r\n        <div style={{ textAlign: 'center', paddingBottom: '2rem' }}>\r\n          <h4>Login PharmaGO</h4>\r\n          <p style={{ color: 'grey', fontSize: '14px' }}>\r\n            Belum punya akun?\r\n            <span\r\n              style={{ color: 'black' }}\r\n              onClick={props.linkToRegister}\r\n              role='button'\r\n            >\r\n              {' '}\r\n              Daftar\r\n            </span>\r\n          </p>\r\n        </div>\r\n        {/* alert message  */}\r\n        {props.errorStatus ? (\r\n          <Alert\r\n            color='danger'\r\n            isOpen={props.visibleAlert}\r\n            toggle={props.closeAlert}\r\n          >\r\n            {props.errorMessage}\r\n          </Alert>\r\n        ) : (\r\n          <Alert\r\n            color='success'\r\n            isOpen={props.visibleAlert}\r\n            toggle={props.closeAlert}\r\n          >\r\n            {props.errorMessage}\r\n          </Alert>\r\n        )}\r\n\r\n        <div>\r\n          <form onSubmit={handleSubmit(props.onSubmit)}>\r\n            <div className='mb-3'>\r\n              <label htmlFor='email' className='form-label'>\r\n                Email\r\n              </label>\r\n              <input\r\n                type='email'\r\n                name='email'\r\n                className='form-control'\r\n                id='email'\r\n                ref={register({\r\n                  required: 'Email is required.',\r\n                })}\r\n              />\r\n              <ErrorMessage\r\n                errors={errors}\r\n                name='email'\r\n                render={({ message }) => (\r\n                  <p className='mt-1 text-danger'>{message}</p>\r\n                )}\r\n              />\r\n            </div>\r\n            <div className='mb-4'>\r\n              <label htmlFor='password' className='form-label'>\r\n                Password\r\n              </label>\r\n              <input\r\n                type='password'\r\n                name='password'\r\n                className='form-control'\r\n                id='password'\r\n                ref={register({\r\n                  required: 'Password is required.',\r\n                })}\r\n              />\r\n              <ErrorMessage\r\n                errors={errors}\r\n                name='password'\r\n                render={({ message }) => (\r\n                  <p className='mt-1 text-danger'>{message}</p>\r\n                )}\r\n              />\r\n              <p\r\n                className='text-right mt-2 text-secondary'\r\n                onClick={props.openForgotPassword}\r\n                role='button'\r\n              >\r\n                Lupa Password?\r\n              </p>\r\n            </div>\r\n            <button type='submit' className='btn btn-success w-100'>\r\n              Login\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\ForgotPassword\\index.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\Suggestions\\index.js",["262"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from 'reactstrap';\r\nimport './suggestion.css';\r\n\r\nconst Suggestions = ({ results, searchRef, handleInputChange, openSearch }) => {\r\n  return (\r\n    <UncontrolledDropdown style={{ padding: 0 }}>\r\n      <DropdownToggle\r\n        style={{\r\n          backgroundColor: 'white',\r\n          border: 'white',\r\n          width: '100%',\r\n          padding: 0,\r\n        }}\r\n      >\r\n        <form>\r\n          <input\r\n            type='select'\r\n            className='form-control searchInputText'\r\n            placeholder='Search for ...'\r\n            ref={searchRef}\r\n            onChange={handleInputChange}\r\n          />\r\n        </form>\r\n      </DropdownToggle>\r\n      {/* {console.log('test', openSearch)} */}\r\n      {openSearch && (\r\n        <DropdownMenu className='mt-2 w-100' style={{ border: 'none' }}>\r\n          {results.map((item) => (\r\n            <div>\r\n              <Link\r\n                to={`/product-detail?idproduct=${item.idproduct}`}\r\n                style={{ textDecoration: 'none' }}\r\n              >\r\n                <DropdownItem className='p-2'>\r\n                  <div className='d-flex align-items-center'>\r\n                    <img\r\n                      src={item.product_image}\r\n                      width='20%'\r\n                      style={{\r\n                        border: '1px solid #ced4da',\r\n                        borderRadius: '20px',\r\n                        marginRight: '2rem',\r\n                      }}\r\n                    />\r\n                    <div>\r\n                      <p>{item.name.toUpperCase()}</p>\r\n                    </div>\r\n                  </div>\r\n                </DropdownItem>\r\n              </Link>\r\n\r\n              <DropdownItem divider />\r\n            </div>\r\n          ))}\r\n        </DropdownMenu>\r\n      )}\r\n    </UncontrolledDropdown>\r\n  );\r\n};\r\n\r\nexport default Suggestions;\r\n","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\support\\urlApi.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\assets\\index.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\cartPage.js",["263","264"],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\CartPage.js",["265","266","267","268","269","270","271","272"],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\reducers\\transactionsReducer.js",["273"],"const INITIAL_STATE = {\r\n    transactions: [],\r\n    detailTransaction: [],\r\n    error: '',\r\n    message: '',\r\n    success: false,\r\n    idpayment: 0\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case \"CHECKOUT\":\r\n            return { ...state, success: action.payload.success, idpayment: action.payload.idpayment, error: action.payload.error, message: action.payload.message }\r\n        case \"GET_TRANSACTIONS\":\r\n            console.log(\"transactionReducer.js GET_TRANSACTIONS: \", action.payload)\r\n            return {\r\n                ...state,\r\n                transactions: action.payload\r\n            }\r\n        case 'GET_DETAIL_TRANSACTION':\r\n            console.log('transactionsReducer.js GET_DETAIL_TRANSACTION: ', action.payload);\r\n            return {\r\n                ...state,\r\n                detailTransaction: action.payload,\r\n            };\r\n\r\n        // case \"PAY_TRANSACTION\":\r\n        //     console.log(\"transactionReducer.js PAY_TRANSACTION: \", action.payload)\r\n        //     return {\r\n        //         ...state,\r\n\r\n        //     }\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\redux\\actions\\transactionsAction.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\TransactionPage.js",["274","275","276","277","278","279","280"],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\NotFound\\index.js",["281"],"import React from 'react';\r\nimport './notfound.css';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div id='notfound'>\r\n      <div className='notfound'>\r\n        <div className='notfound-404'>\r\n          <h3>Oops! Page not found</h3>\r\n          <h1>\r\n            <span>4</span>\r\n            <span>0</span>\r\n            <span>4</span>\r\n          </h1>\r\n        </div>\r\n        <h2>we are sorry, but the page you requested was not found</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\DashboardAdmin\\index.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\Verify\\index.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\Register\\index.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\Footer\\index.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\cardCart.js",["282","283"],"import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, DropdownItem, Input } from 'reactstrap';\r\nimport { deleteCart, getCart, updateQty } from '../redux/actions';\r\nimport { API_URL } from '../support/urlApi';\r\n\r\nconst CardCart = ({ children }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addNote, setAddNote] = useState(false);\r\n\r\n  // Qty modification function\r\n  const btQty = (type, qty, idcart) => {\r\n    if (type === 'inc') {\r\n      console.log('saya increment', qty, idcart);\r\n      dispatch(updateQty(qty, 'inc', idcart));\r\n    } else if (type == 'dec') {\r\n      console.log('saya decrement');\r\n      dispatch(updateQty(qty, 'dec', idcart));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        to={`/product-detail?idproduct=${children.idproduct}`}\r\n        style={{ textDecoration: 'none', color: 'black' }}\r\n      >\r\n        <div className='card-tranparent d-flex'>\r\n          <div style={{ flex: 1 }}>\r\n            <img src={API_URL + children.product_image} width='90%' />\r\n          </div>\r\n          <div style={{ flex: 4, marginTop: 30 }}>\r\n            <p>{children.name}</p>\r\n            <p style={{ fontWeight: 'bold' }}>\r\n              Rp.{children.price_pcs.toLocaleString()}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n      <div className='d-flex'>\r\n        <div style={{ flex: 5 }}>\r\n          {addNote === false ? (\r\n            children.note ? (\r\n              <p>\r\n                <span\r\n                  style={{\r\n                    marginLeft: 10,\r\n                    fontWeight: '400',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                >\r\n                  {children.note}\r\n                </span>\r\n                <span\r\n                  style={{\r\n                    marginLeft: 10,\r\n                    color: '#2ecc71',\r\n                    fontWeight: '400',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                  onClick={() => setAddNote(!addNote)}\r\n                >\r\n                  Ubah\r\n                </span>\r\n              </p>\r\n            ) : (\r\n              <p\r\n                style={{\r\n                  marginLeft: 10,\r\n                  color: '#2ecc71',\r\n                  fontWeight: '400',\r\n                  cursor: 'pointer',\r\n                }}\r\n                onClick={() => setAddNote(!addNote)}\r\n              >\r\n                Add Notes for this children\r\n              </p>\r\n            )\r\n          ) : (\r\n            <Input\r\n              type='text'\r\n              onBlur={() => {\r\n                setAddNote(!addNote);\r\n              }}\r\n              style={{ width: '60%' }}\r\n              defaultValue={children.note ? children.note : ''}\r\n            />\r\n          )}\r\n        </div>\r\n        <div style={{ flex: 1 }}>\r\n          <i\r\n            className='large material-icons right-menu_icon'\r\n            id='trashbinImage'\r\n            style={{ fontSize: 30, marginTop: -8, cursor: 'pointer' }}\r\n            onClick={() => {\r\n              dispatch(deleteCart(children.idcart));\r\n              dispatch(getCart());\r\n            }}\r\n          >\r\n            delete\r\n          </i>\r\n        </div>\r\n        <div style={{ flex: 3, marginTop: -20 }}>\r\n          <Button\r\n            color='warning'\r\n            style={{\r\n              marginTop: 15,\r\n              borderRadius: 15,\r\n              width: 30,\r\n              height: 30,\r\n              letterSpacing: 2,\r\n              textAlign: 'center',\r\n            }}\r\n            onClick={() => btQty('dec', children.qty, children.idcart)}\r\n          >\r\n            <p\r\n              style={{\r\n                marginLeft: -3,\r\n                marginTop: -14,\r\n                fontWeight: 'bolder',\r\n                fontSize: 25,\r\n              }}\r\n            >\r\n              -\r\n            </p>\r\n          </Button>\r\n          <Button\r\n            color='success'\r\n            disabled\r\n            outline\r\n            style={{\r\n              marginTop: 15,\r\n              borderRadius: 15,\r\n              width: 60,\r\n              height: 30,\r\n              letterSpacing: 2,\r\n              textAlign: 'center',\r\n              marginLeft: 5,\r\n              marginRight: 5,\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                marginTop: -5,\r\n                fontWeight: 'bolder',\r\n                fontSize: 16,\r\n                color: 'black',\r\n              }}\r\n            >\r\n              {children.qty}\r\n            </p>\r\n          </Button>\r\n          <Button\r\n            color='warning'\r\n            style={{\r\n              marginTop: 15,\r\n              borderRadius: 15,\r\n              width: 30,\r\n              height: 30,\r\n              letterSpacing: 2,\r\n              textAlign: 'center',\r\n              marginRight: 10,\r\n            }}\r\n            onClick={() => btQty('inc', children.qty, children.idcart)}\r\n          >\r\n            <p\r\n              style={{\r\n                marginLeft: -7,\r\n                marginTop: -14,\r\n                fontWeight: 'bolder',\r\n                fontSize: 25,\r\n              }}\r\n            >\r\n              +\r\n            </p>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <DropdownItem divider style={{ marginLeft: 7, marginRight: 7 }} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardCart;\r\n","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\modalPayment.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\AdminProduct\\index.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\AdminProductDetail\\index.js",["284","285","286","287","288","289","290","291","292","293","294","295"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\n\r\nimport { NavbarAdmin } from '../../components';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardImg,\r\n  Table,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane,\r\n  Row,\r\n} from 'reactstrap';\r\n\r\nconst AdminProductDetail = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  const { index } = props.location.state;\r\n  const { products } = useSelector(({ ProductsReducer }) => {\r\n    return {\r\n      products: ProductsReducer.products,\r\n    };\r\n  });\r\n\r\n  // render product lists\r\n  const renderProductDetail = () => {\r\n    return products.map((item, idx) => {\r\n      if (index === idx) {\r\n        return (\r\n          <div className='row' key={idx}>\r\n            <div className='col-4'>\r\n              <Card className='shadow'>\r\n                <CardImg\r\n                  top\r\n                  width='70%'\r\n                  src={item.product_image}\r\n                  alt={item.name}\r\n                />\r\n              </Card>\r\n            </div>\r\n            <div className='col-8'>\r\n              <div className='row'>\r\n                {/* section header */}\r\n                <div className='col-4'>\r\n                  <p\r\n                    className='border-bottom pb-1'\r\n                    style={{ fontWeight: 'bold' }}\r\n                  >\r\n                    Nama Produk\r\n                  </p>\r\n                  <p\r\n                    className='border-bottom pb-1'\r\n                    style={{ fontWeight: 'bold' }}\r\n                  >\r\n                    Kategori\r\n                  </p>\r\n                  <p\r\n                    className='border-bottom pb-1'\r\n                    style={{ fontWeight: 'bold' }}\r\n                  >\r\n                    Harga\r\n                  </p>\r\n                  <p\r\n                    className='border-bottom pb-1'\r\n                    style={{ fontWeight: 'bold' }}\r\n                  >\r\n                    Stock (Kemasan/Botol)\r\n                  </p>\r\n                  <p\r\n                    className='border-bottom pb-1'\r\n                    style={{ fontWeight: 'bold' }}\r\n                  >\r\n                    Total Stock (mg/ml)\r\n                  </p>\r\n                </div>\r\n                <div className='col-8'>\r\n                  <p className='border-bottom pb-1'>{item.name}</p>\r\n                  <p className='border-bottom pb-1'>{item.category}</p>\r\n                  <p className='border-bottom pb-1'>\r\n                    Rp. {item.price_pcs.toLocaleString()}\r\n                  </p>\r\n                  <p className='border-bottom pb-1'>\r\n                    {Math.floor(item.stock_pcs)} {item.satuan}\r\n                  </p>\r\n                  <p className='border-bottom pb-1'>\r\n                    {Math.floor(item.stock_pcs * item.qty_per_pcs)}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='col-12 mt-5'>\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === '1' })}\r\n                    onClick={() => {\r\n                      toggle('1');\r\n                    }}\r\n                  >\r\n                    Deskripsi\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === '2' })}\r\n                    onClick={() => {\r\n                      toggle('2');\r\n                    }}\r\n                  >\r\n                    Komposisi\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === '3' })}\r\n                    onClick={() => {\r\n                      toggle('3');\r\n                    }}\r\n                  >\r\n                    Dosis\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === '4' })}\r\n                    onClick={() => {\r\n                      toggle('4');\r\n                    }}\r\n                  >\r\n                    Aturan Pakai\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === '5' })}\r\n                    onClick={() => {\r\n                      toggle('5');\r\n                    }}\r\n                  >\r\n                    Perhatian\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === '6' })}\r\n                    onClick={() => {\r\n                      toggle('6');\r\n                    }}\r\n                  >\r\n                    Indikasi\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === '7' })}\r\n                    onClick={() => {\r\n                      toggle('7');\r\n                    }}\r\n                  >\r\n                    Kontraindikasi\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === '8' })}\r\n                    onClick={() => {\r\n                      toggle('8');\r\n                    }}\r\n                  >\r\n                    Efek Samping\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <TabContent activeTab={activeTab}>\r\n                <TabPane tabId='1'>\r\n                  <Row>\r\n                    <Col sm='12 pt-3 pl-4'>\r\n                      <p>{item.desc_umum}</p>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tabId='2'>\r\n                  <Row>\r\n                    <Col sm='12 pt-3 pl-4'>\r\n                      <p>{item.desc_komposisi}</p>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tabId='3'>\r\n                  <Row>\r\n                    <Col sm='12 pt-3 pl-4'>\r\n                      <p>{item.desc_dosis}</p>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tabId='4'>\r\n                  <Row>\r\n                    <Col sm='12 pt-3 pl-4'>\r\n                      <p>{item.desc_aturanpakai}</p>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tabId='5'>\r\n                  <Row>\r\n                    <Col sm='12 pt-3 pl-4'>\r\n                      <p>{item.desc_perhatian}</p>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tabId='6'>\r\n                  <Row>\r\n                    <Col sm='12 pt-3 pl-4'>\r\n                      <p>{item.desc_indikasi}</p>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tabId='7'>\r\n                  <Row>\r\n                    <Col sm='12 pt-3 pl-4'>\r\n                      <p>{item.desc_kontraindikasi}</p>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tabId='8'>\r\n                  <Row>\r\n                    <Col sm='12 pt-3 pl-4'>\r\n                      <p>{item.desc_efeksamping}</p>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n              </TabContent>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavbarAdmin />\r\n\r\n      <div className='row d-flex justify-content-center align-items-center mt-5'>\r\n        <div className='col-8'>\r\n          <h3 className='text-left mb-4'>Produk Detail</h3>\r\n          <hr />\r\n          <div className='border rounded p-5'>{renderProductDetail()}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminProductDetail;\r\n\r\n// desc_aturanpakai: \"Berikan bersama atau tanpa makanan\"\r\n// desc_dosis: \"Dewasa dan remaja > 10 tahun : 5 - 7.5 ml. Diberikan 3 kali sehari. Anak (6 - 17 tahun) : 5 ml. Diberikan 3 kali sehari. Anak (1 - 5 tahun) : 2.5 ml. Diberikan 3 kali sehari. Lama terapi : Sekurang-kurangnya 1 minggu, berikan hingga 2 - 3 hari sesudah gejala mereda.\"\r\n// desc_efeksamping: \"-\"\r\n// desc_indikasi: \"PROSPAN SIRUP merupakan obat batuk herbal dengan zat aktif Hedera Helix (Special Ivy Extract EA 575). Prospan berkhasiat membantu meredakan batuk berdahak dengan mengencerkan dahak dan melegakan saluran pernapasan.\"\r\n// desc_komposisi: \"Per 100 mL : Ekstrak daun Ivy kering 0.7 g, larutan Sorbitol 70%, K Sorbate 0.134 g, Citric acid\"\r\n// desc_kontraindikasi: \"Hipersensitivitas.\"\r\n// desc_perhatian: \"Intoleransi fruktosa. Hamil dan laktasi\"\r\n// desc_umum\r\n","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\AdminAddProduct\\index.js",["296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\n\r\nimport { NavbarAdmin } from '../../components';\r\nimport {\r\n  Col,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  Row,\r\n  CustomInput,\r\n  Alert,\r\n  FormFeedback,\r\n} from 'reactstrap';\r\nimport { addProduct } from '../../redux/actions';\r\n\r\nconst AdminAddProduct = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { errorStatus, category } = useSelector(({ ProductsReducer }) => {\r\n    return {\r\n      category: ProductsReducer.category,\r\n      errorStatus: ProductsReducer.errorStatus,\r\n    };\r\n  });\r\n\r\n  const [errMessage, setErrMessage] = useState('');\r\n  const [visibleAlert, setVisibleAlert] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    kategori: '',\r\n    desc_umum: '',\r\n    desc_indikasi: '',\r\n    desc_komposisi: '',\r\n    desc_dosis: '',\r\n    desc_aturanpakai: '',\r\n    desc_kontraindikasi: '',\r\n    desc_efeksamping: '',\r\n    desc_perhatian: '',\r\n    stock_pcs: 0,\r\n    qty_per_pcs: 0,\r\n    satuan: '',\r\n    price_pcs: 0,\r\n    type_obat: '', // racik, umum\r\n    isPublish: false,\r\n  });\r\n\r\n  const [imageProduct, setImageProduct] = useState({\r\n    product_image_file_name: 'Select file',\r\n    product_image_file: undefined,\r\n  });\r\n\r\n  const {\r\n    name,\r\n    kategori,\r\n    desc_umum,\r\n    desc_indikasi,\r\n    desc_komposisi,\r\n    desc_dosis,\r\n    desc_aturanpakai,\r\n    desc_kontraindikasi,\r\n    desc_efeksamping,\r\n    desc_perhatian,\r\n    stock_pcs,\r\n    qty_per_pcs,\r\n    satuan,\r\n    price_pcs,\r\n    type_obat,\r\n    isPublish,\r\n  } = formData;\r\n\r\n  const {\r\n    product_image_file_name,\r\n    product_image_file,\r\n    banner_image_file_name,\r\n    banner_image_file,\r\n  } = imageProduct;\r\n\r\n  const handleChange = (prop, value) => {\r\n    setFormData({ ...formData, [prop]: value });\r\n  };\r\n\r\n  const handleProductImage = (e) => {\r\n    console.log('file', e.target.files);\r\n    if (e.target.files[0]) {\r\n      setImageProduct({\r\n        ...imageProduct,\r\n        product_image_file_name: e.target.files[0].name,\r\n        product_image_file: e.target.files[0],\r\n      });\r\n    }\r\n  };\r\n\r\n  let checkRequiredField =\r\n    name === '' ||\r\n    kategori === '' ||\r\n    stock_pcs === '' ||\r\n    qty_per_pcs === '' ||\r\n    satuan === '' ||\r\n    price_pcs === '' ||\r\n    type_obat === '';\r\n\r\n  let checkPositifNumber = stock_pcs < 0 || qty_per_pcs < 0 || price_pcs < 0;\r\n\r\n  const onSubmit = () => {\r\n    if (checkRequiredField) {\r\n      setVisibleAlert(true);\r\n      setErrMessage('Form masih ada yang kosong, silahkan lengkapi!');\r\n      setTimeout(() => {\r\n        setVisibleAlert(false);\r\n      }, 3000);\r\n    } else {\r\n      dispatch(\r\n        addProduct(formData, imageProduct.product_image_file, () => {\r\n          setVisibleAlert(true);\r\n          setErrMessage('Produk berhasil ditambahkan!');\r\n          setTimeout(() => {\r\n            history.push('/admin-product');\r\n            setVisibleAlert(false);\r\n          }, 2000);\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavbarAdmin />\r\n\r\n      <div className='row d-flex justify-content-center align-items-center mt-5'>\r\n        <div className='col-9'>\r\n          <Form>\r\n            <h3 className='text-left mb-4'>Tambah Produk</h3>\r\n            <hr />\r\n\r\n            {/* error message */}\r\n            <Alert\r\n              color={errMessage.includes('berhasil') ? 'success' : 'danger'}\r\n              isOpen={visibleAlert}\r\n              toggle={() => setVisibleAlert(false)}\r\n              fade={false}\r\n              className='text-center'\r\n            >\r\n              <h6>{errMessage}</h6>\r\n            </Alert>\r\n\r\n            <div className='row border rounded p-4'>\r\n              <div className='col-6 border-right pr-5'>\r\n                <FormGroup row>\r\n                  <Label for='name' sm={3}>\r\n                    Nama Produk\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='text'\r\n                      name='name'\r\n                      id='name'\r\n                      onChange={(e) => handleChange('name', e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='price_pcs' sm={3}>\r\n                    Harga\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='number'\r\n                      name='price_pcs'\r\n                      id='price_pcs'\r\n                      onChange={(e) =>\r\n                        handleChange('price_pcs', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='kategori' sm={3}>\r\n                    Kategori\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='select'\r\n                      name='kategori'\r\n                      id='kategori'\r\n                      onChange={(e) => handleChange('kategori', e.target.value)}\r\n                    >\r\n                      <option value='default'>-</option>\r\n                      {category.map((item, idx) => (\r\n                        <option value={item.idcategory}>{item.category}</option>\r\n                      ))}\r\n                    </Input>\r\n                  </Col>\r\n                </FormGroup>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup row>\r\n                      <Label for='stock_pcs' sm={6}>\r\n                        Stock\r\n                      </Label>\r\n                      <Col sm={6}>\r\n                        <Input\r\n                          type='number'\r\n                          name='stock_pcs'\r\n                          id='stock_pcs'\r\n                          onChange={(e) =>\r\n                            handleChange('stock_pcs', e.target.value)\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup row>\r\n                      <Label for='satuan' sm={3}>\r\n                        Satuan\r\n                      </Label>\r\n                      <Col sm={9}>\r\n                        <Input\r\n                          type='text'\r\n                          name='satuan'\r\n                          id='satuan'\r\n                          onChange={(e) =>\r\n                            handleChange('satuan', e.target.value)\r\n                          }\r\n                          placeholder='Kemasan/Botol'\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup row>\r\n                      <Label for='qty_per_pcs' sm={6}>\r\n                        Qty Per Pcs\r\n                      </Label>\r\n                      <Col sm={6}>\r\n                        <Input\r\n                          type='number'\r\n                          name='qty_per_pcs'\r\n                          id='qty_per_pcs'\r\n                          onChange={(e) =>\r\n                            handleChange('qty_per_pcs', e.target.value)\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup row>\r\n                      <Label for='type_obat' sm={4}>\r\n                        Type Obat\r\n                      </Label>\r\n                      <Col sm={8}>\r\n                        <Input\r\n                          type='text'\r\n                          name='type_obat'\r\n                          id='type_obat'\r\n                          onChange={(e) =>\r\n                            handleChange('type_obat', e.target.value)\r\n                          }\r\n                          placeholder='Umum/Racik'\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <hr />\r\n                <FormGroup row>\r\n                  <Label for='product_image' sm={3}>\r\n                    Foto Produk\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='file'\r\n                      id='product_image'\r\n                      label={product_image_file_name}\r\n                      onChange={handleProductImage}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <hr />\r\n              </div>\r\n              {/* start kolom 2 */}\r\n              <div className='col-6 pl-5'>\r\n                <FormGroup row>\r\n                  <Label for='desc_umum' sm={3}>\r\n                    Deskripsi Umum\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_umum'\r\n                      id='desc_umum'\r\n                      onChange={(e) =>\r\n                        handleChange('desc_umum', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_indikasi' sm={3}>\r\n                    Indikasi\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_indikasi'\r\n                      id='desc_indikasi'\r\n                      onChange={(e) =>\r\n                        handleChange('desc_indikasi', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_komposisi' sm={3}>\r\n                    Komposisi\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_komposisi'\r\n                      id='desc_komposisi'\r\n                      onChange={(e) =>\r\n                        handleChange('desc_komposisi', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_dosis' sm={3}>\r\n                    Dosis\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_dosis'\r\n                      id='desc_dosis'\r\n                      onChange={(e) =>\r\n                        handleChange('desc_dosis', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_aturanpakai' sm={3}>\r\n                    Aturan Pakai\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_aturanpakai'\r\n                      id='desc_aturanpakai'\r\n                      onChange={(e) =>\r\n                        handleChange('desc_aturanpakai', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_kontraindikasi' sm={3}>\r\n                    KontraIndikasi\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_kontraindikasi'\r\n                      id='desc_kontraindikasi'\r\n                      onChange={(e) =>\r\n                        handleChange('desc_kontraindikasi', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_efeksamping' sm={3}>\r\n                    Efek Samping\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_efeksamping'\r\n                      id='desc_efeksamping'\r\n                      onChange={(e) =>\r\n                        handleChange('desc_efeksamping', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_perhatian' sm={3}>\r\n                    Perhatian\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_perhatian'\r\n                      id='desc_perhatian'\r\n                      onChange={(e) =>\r\n                        handleChange('desc_perhatian', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='isPublish' sm={3}></Label>\r\n                  <Col>\r\n                    <CustomInput\r\n                      type='switch'\r\n                      id='isPublish'\r\n                      name='isPublish'\r\n                      label='Publish'\r\n                      onChange={(e) =>\r\n                        handleChange('isPublish', e.target.checked)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <div className='d-flex justify-content-end'>\r\n                  <Button color='success' className='w-25' onClick={onSubmit}>\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              {/* end kolom 2 */}\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminAddProduct;\r\n","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\NavbarAdmin\\index.js",["316"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { logoutUser } from '../../redux/actions';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n} from 'reactstrap';\r\n\r\nconst NavbarAdmin = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const { name } = useSelector(({ usersReducer }) => {\r\n    return {\r\n      name: usersReducer.name,\r\n    };\r\n  });\r\n\r\n  const onLogout = () => {\r\n    dispatch(logoutUser());\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      color='light'\r\n      light\r\n      expand='md'\r\n      className='pt-3 pb-3 pl-3 pr-5 shadow navbar sticky-top navbar-light bg-light'\r\n    >\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className='mr-auto' navbar>\r\n          <UncontrolledDropdown nav inNavbar>\r\n            <DropdownToggle nav style={{ fontSize: '20px', color: 'black' }}>\r\n              <NavbarText\r\n                style={{\r\n                  fontSize: '20px',\r\n                  fontWeight: 'bold',\r\n                  paddingLeft: '30px',\r\n                }}\r\n              >\r\n                Menu Utama\r\n              </NavbarText>\r\n            </DropdownToggle>\r\n            <DropdownMenu left>\r\n              <DropdownItem>\r\n                <Link to='/admin-product'> Master Produk</Link>\r\n              </DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem>Transaksi</DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem>Report</DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem onClick={onLogout}>Logout</DropdownItem>\r\n              <DropdownItem divider />\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </Nav>\r\n        <NavbarText\r\n          style={{\r\n            fontSize: '20px',\r\n            paddingLeft: '30px',\r\n          }}\r\n        >\r\n          {name ? `Halo, ${name}` : 'PharmaGO'}!!\r\n        </NavbarText>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavbarAdmin;\r\n","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\App.test.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\setupTests.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\cardTransaction.js",["317","318"],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\TransactionDetail.js",["319","320","321","322","323","324","325","326","327","328"],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\ChartAdmin\\index.js",[],"D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\AdminEditProduct\\index.js",["329","330","331","332","333","334","335","336","337","338","339"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\n\r\nimport { NavbarAdmin } from '../../components';\r\nimport {\r\n  Col,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  Row,\r\n  CustomInput,\r\n  Alert,\r\n  FormFeedback,\r\n  Card,\r\n} from 'reactstrap';\r\nimport { addProduct, editProduct, getAllProducts } from '../../redux/actions';\r\nimport { API_URL } from '../../support/urlApi';\r\n\r\nconst AdminEditProduct = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllProducts());\r\n    console.log('cek');\r\n  }, []);\r\n\r\n  const { errorStatus, category, allProducts } = useSelector(\r\n    ({ ProductsReducer }) => {\r\n      return {\r\n        category: ProductsReducer.category,\r\n        errorStatus: ProductsReducer.errorStatus,\r\n        allProducts: ProductsReducer.allProducts,\r\n      };\r\n    }\r\n  );\r\n\r\n  const { idproduct } = props.match.params;\r\n  let item = allProducts.filter(\r\n    (elem, idx) => elem.idproduct === parseInt(idproduct)\r\n  )[0];\r\n\r\n  // console.log(typeof parseInt(idproduct), typeof item.idproduct);\r\n\r\n  const [errMessage, setErrMessage] = useState('');\r\n  const [visibleAlert, setVisibleAlert] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: item.name,\r\n    kategori: item.idcategory,\r\n    desc_umum: item.desc_umum,\r\n    desc_indikasi: item.desc_indikasi,\r\n    desc_komposisi: item.desc_komposisi,\r\n    desc_dosis: item.desc_dosis,\r\n    desc_aturanpakai: item.desc_aturanpakai,\r\n    desc_kontraindikasi: item.desc_kontraindikasi,\r\n    desc_efeksamping: item.desc_efeksamping,\r\n    desc_perhatian: item.desc_perhatian,\r\n    stock_pcs: item.stock_pcs,\r\n    qty_per_pcs: item.qty_per_pcs,\r\n    satuan: item.satuan,\r\n    price_pcs: item.price_pcs,\r\n    type_obat: item.type_obat, // racik, umum\r\n    isPublish: item.isPublish,\r\n  });\r\n\r\n  const [imageProduct, setImageProduct] = useState({\r\n    product_image_file_name: '',\r\n    product_image_file: '',\r\n  });\r\n\r\n  const {\r\n    name,\r\n    kategori,\r\n    desc_umum,\r\n    desc_indikasi,\r\n    desc_komposisi,\r\n    desc_dosis,\r\n    desc_aturanpakai,\r\n    desc_kontraindikasi,\r\n    desc_efeksamping,\r\n    desc_perhatian,\r\n    stock_pcs,\r\n    qty_per_pcs,\r\n    satuan,\r\n    price_pcs,\r\n    type_obat,\r\n    isPublish,\r\n  } = formData;\r\n\r\n  const { product_image_file_name, product_image_file } = imageProduct;\r\n\r\n  const handleChange = (prop, value) => {\r\n    setFormData({ ...formData, [prop]: value });\r\n  };\r\n\r\n  const handleProductImage = (e) => {\r\n    console.log('file', e.target.files);\r\n    if (e.target.files[0]) {\r\n      setImageProduct({\r\n        ...imageProduct,\r\n        product_image_file_name: e.target.files[0].name,\r\n        product_image_file: e.target.files[0],\r\n      });\r\n      let preview = document.getElementById('imgPreview');\r\n      preview.src = URL.createObjectURL(e.target.files[0]);\r\n      console.log('check img', preview);\r\n    }\r\n  };\r\n\r\n  let checkRequiredField =\r\n    name === '' ||\r\n    kategori === '' ||\r\n    stock_pcs === '' ||\r\n    qty_per_pcs === '' ||\r\n    satuan === '' ||\r\n    price_pcs === '' ||\r\n    type_obat === '';\r\n\r\n  const onUpdate = () => {\r\n    if (checkRequiredField) {\r\n      setVisibleAlert(true);\r\n      setErrMessage(\r\n        'Kolom mandatory masih ada yang kosong, silahkan lengkapi!'\r\n      );\r\n      setTimeout(() => {\r\n        setVisibleAlert(false);\r\n      }, 3000);\r\n    } else {\r\n      dispatch(\r\n        editProduct(\r\n          idproduct,\r\n          formData,\r\n          imageProduct.product_image_file,\r\n          () => {\r\n            setVisibleAlert(true);\r\n            setErrMessage('Produk berhasil diupdate!');\r\n            setTimeout(() => {\r\n              history.push('/admin-product');\r\n              setVisibleAlert(false);\r\n            }, 2000);\r\n          }\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push('/admin-product');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavbarAdmin />\r\n\r\n      <div className='row d-flex justify-content-center align-items-center mt-5'>\r\n        <div className='col-9'>\r\n          <Form>\r\n            <h3 className='text-left mb-4'>Edit Produk</h3>\r\n            <hr />\r\n\r\n            {/* error message */}\r\n            <Alert\r\n              color={errMessage.includes('berhasil') ? 'success' : 'danger'}\r\n              isOpen={visibleAlert}\r\n              toggle={() => setVisibleAlert(false)}\r\n              fade={false}\r\n              className='text-center'\r\n            >\r\n              <h6>{errMessage}</h6>\r\n            </Alert>\r\n\r\n            <div className='row border rounded p-4'>\r\n              <div className='col-6 border-right pr-5'>\r\n                <FormGroup row className='position-relative'>\r\n                  <i\r\n                    class='material-icons position-absolute'\r\n                    style={{\r\n                      color: 'red',\r\n                      left: '7.1rem',\r\n                      top: '.5rem',\r\n                      fontSize: 10,\r\n                    }}\r\n                  >\r\n                    star\r\n                  </i>\r\n                  <Label for='name' sm={3}>\r\n                    Nama Produk\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='text'\r\n                      name='name'\r\n                      id='name'\r\n                      defaultValue={name}\r\n                      onChange={(e) => handleChange('name', e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row className='position-relative'>\r\n                  <i\r\n                    class='material-icons position-absolute'\r\n                    style={{\r\n                      color: 'red',\r\n                      left: '3.7rem',\r\n                      top: '.5rem',\r\n                      fontSize: 10,\r\n                    }}\r\n                  >\r\n                    star\r\n                  </i>\r\n                  <Label for='price_pcs' sm={3}>\r\n                    Harga\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='number'\r\n                      name='price_pcs'\r\n                      id='price_pcs'\r\n                      defaultValue={price_pcs}\r\n                      onChange={(e) =>\r\n                        handleChange('price_pcs', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row className='position-relative'>\r\n                  <i\r\n                    class='material-icons position-absolute'\r\n                    style={{\r\n                      color: 'red',\r\n                      left: '5rem',\r\n                      top: '.5rem',\r\n                      fontSize: 10,\r\n                    }}\r\n                  >\r\n                    star\r\n                  </i>\r\n                  <Label for='kategori' sm={3}>\r\n                    Kategori\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='select'\r\n                      name='kategori'\r\n                      id='kategori'\r\n                      defaultValue={item.idcategory}\r\n                      onChange={(e) => handleChange('kategori', e.target.value)}\r\n                    >\r\n                      {/* <option defaultChecked={item.idcategory}>\r\n                        {item.category}\r\n                      </option> */}\r\n                      {category.map((value, idx) => (\r\n                        <option key={idx} value={value.idcategory}>\r\n                          {value.category}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </Col>\r\n                </FormGroup>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup row className='position-relative'>\r\n                      <i\r\n                        class='material-icons position-absolute'\r\n                        style={{\r\n                          color: 'red',\r\n                          left: '3.5rem',\r\n                          top: '.5rem',\r\n                          fontSize: 10,\r\n                        }}\r\n                      >\r\n                        star\r\n                      </i>\r\n                      <Label for='stock_pcs' sm={6}>\r\n                        Stock\r\n                      </Label>\r\n                      <Col sm={6}>\r\n                        <Input\r\n                          type='number'\r\n                          name='stock_pcs'\r\n                          id='stock_pcs'\r\n                          defaultValue={Math.floor(stock_pcs)}\r\n                          onChange={(e) =>\r\n                            handleChange('stock_pcs', e.target.value)\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup row className='position-relative'>\r\n                      <i\r\n                        class='material-icons position-absolute'\r\n                        style={{\r\n                          color: 'red',\r\n                          left: '4.1rem',\r\n                          top: '.5rem',\r\n                          fontSize: 10,\r\n                        }}\r\n                      >\r\n                        star\r\n                      </i>\r\n                      <Label for='satuan' sm={3}>\r\n                        Satuan\r\n                      </Label>\r\n                      <Col sm={9}>\r\n                        <Input\r\n                          type='text'\r\n                          name='satuan'\r\n                          id='satuan'\r\n                          defaultValue={satuan}\r\n                          onChange={(e) =>\r\n                            handleChange('satuan', e.target.value)\r\n                          }\r\n                          placeholder='Kemasan/Botol'\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup row className='position-relative'>\r\n                      <i\r\n                        class='material-icons position-absolute'\r\n                        style={{\r\n                          color: 'red',\r\n                          left: '6.1rem',\r\n                          top: '.5rem',\r\n                          fontSize: 10,\r\n                        }}\r\n                      >\r\n                        star\r\n                      </i>\r\n                      <Label for='qty_per_pcs' sm={6}>\r\n                        Qty Per Pcs\r\n                      </Label>\r\n                      <Col sm={6}>\r\n                        <Input\r\n                          type='number'\r\n                          name='qty_per_pcs'\r\n                          id='qty_per_pcs'\r\n                          defaultValue={qty_per_pcs}\r\n                          onChange={(e) =>\r\n                            handleChange('qty_per_pcs', e.target.value)\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup row className='position-relative'>\r\n                      <i\r\n                        class='material-icons position-absolute'\r\n                        style={{\r\n                          color: 'red',\r\n                          left: '5.8rem',\r\n                          top: '.5rem',\r\n                          fontSize: 10,\r\n                        }}\r\n                      >\r\n                        star\r\n                      </i>\r\n                      <Label for='type_obat' sm={6}>\r\n                        Type Obat\r\n                      </Label>\r\n                      <Col sm={6}>\r\n                        <Input\r\n                          type='text'\r\n                          name='type_obat'\r\n                          id='type_obat'\r\n                          defaultValue={type_obat}\r\n                          onChange={(e) =>\r\n                            handleChange('type_obat', e.target.value)\r\n                          }\r\n                          placeholder='Umum/Racik'\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <hr />\r\n                <FormGroup row className='position-relative'>\r\n                  <i\r\n                    class='material-icons position-absolute'\r\n                    style={{\r\n                      color: 'red',\r\n                      left: '6.5rem',\r\n                      top: '.5rem',\r\n                      fontSize: 10,\r\n                    }}\r\n                  >\r\n                    star\r\n                  </i>\r\n                  <Label for='product_image' sm={3}>\r\n                    Foto Produk\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='file'\r\n                      id='product_image'\r\n                      label={product_image_file_name}\r\n                      onChange={handleProductImage}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <Card className='d-flex align-items-center p-5'>\r\n                  <img id='imgPreview' width='30%' className='border' />\r\n                </Card>\r\n              </div>\r\n              {/* start kolom 2 */}\r\n              <div className='col-6 pl-5'>\r\n                <FormGroup row>\r\n                  <Label for='desc_umum' sm={3}>\r\n                    Deskripsi Umum\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_umum'\r\n                      id='desc_umum'\r\n                      defaultValue={desc_umum}\r\n                      onChange={(e) =>\r\n                        handleChange('desc_umum', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_indikasi' sm={3}>\r\n                    Indikasi\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_indikasi'\r\n                      id='desc_indikasi'\r\n                      defaultValue={desc_indikasi}\r\n                      onChange={(e) =>\r\n                        handleChange('desc_indikasi', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_komposisi' sm={3}>\r\n                    Komposisi\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_komposisi'\r\n                      id='desc_komposisi'\r\n                      defaultValue={desc_komposisi}\r\n                      onChange={(e) =>\r\n                        handleChange('desc_komposisi', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_dosis' sm={3}>\r\n                    Dosis\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_dosis'\r\n                      id='desc_dosis'\r\n                      defaultValue={desc_dosis}\r\n                      onChange={(e) =>\r\n                        handleChange('desc_dosis', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_aturanpakai' sm={3}>\r\n                    Aturan Pakai\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_aturanpakai'\r\n                      id='desc_aturanpakai'\r\n                      defaultValue={desc_aturanpakai}\r\n                      onChange={(e) =>\r\n                        handleChange('desc_aturanpakai', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_kontraindikasi' sm={3}>\r\n                    KontraIndikasi\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_kontraindikasi'\r\n                      id='desc_kontraindikasi'\r\n                      defaultValue={desc_kontraindikasi}\r\n                      onChange={(e) =>\r\n                        handleChange('desc_kontraindikasi', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_efeksamping' sm={3}>\r\n                    Efek Samping\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_efeksamping'\r\n                      id='desc_efeksamping'\r\n                      defaultValue={desc_efeksamping}\r\n                      onChange={(e) =>\r\n                        handleChange('desc_efeksamping', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='desc_perhatian' sm={3}>\r\n                    Perhatian\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type='textarea'\r\n                      name='desc_perhatian'\r\n                      id='desc_perhatian'\r\n                      defaultValue={desc_perhatian}\r\n                      onChange={(e) =>\r\n                        handleChange('desc_perhatian', e.target.value)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='isPublish' sm={3}></Label>\r\n                  <Col>\r\n                    <CustomInput\r\n                      type='switch'\r\n                      id='isPublish'\r\n                      name='isPublish'\r\n                      label='Publish'\r\n                      defaultChecked={isPublish}\r\n                      onChange={(e) =>\r\n                        handleChange('isPublish', e.target.checked)\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <div className='d-flex justify-content-end'>\r\n                  <Button outline className='w-25 mr-3' onClick={onCancel}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button color='success' className='w-25' onClick={onUpdate}>\r\n                    Update\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              {/* end kolom 2 */}\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminEditProduct;\r\n","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\AdminTransaksiDetail\\index.js",["340","341"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport { NavbarAdmin } from '../../components';\r\nimport { Button, Card, CardBody, CardHeader, Table } from 'reactstrap';\r\nimport { getAllDetailTransaction } from '../../redux/actions';\r\n\r\nconst AdminTransaksiDetail = (props) => {\r\n  const history = useHistory();\r\n  const { allDetailTransaction, allTransaction } = useSelector(\r\n    ({ usersReducer, transactionsReducer }) => {\r\n      return {\r\n        name: usersReducer.name,\r\n        allDetailTransaction: transactionsReducer.allDetailTransaction,\r\n        allTransaction: transactionsReducer.allTransaction,\r\n      };\r\n    }\r\n  );\r\n\r\n  const { index, idTrx } = props.location.state;\r\n  // console.log('check id', idTrx);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getAllDetailTransaction(idTrx));\r\n  }, []);\r\n\r\n  // console.log('check detail', allDetailTransaction);\r\n  // render product lists\r\n  const renderTrxDetail = () => {\r\n    return allTransaction.map((item, idx) => {\r\n      if (index === idx) {\r\n        console.log('item', item);\r\n        return (\r\n          <>\r\n            <div className='row'>\r\n              <div className='col-4'>\r\n                <Card>\r\n                  <CardHeader>Detail Pesanan</CardHeader>\r\n                  <CardBody>\r\n                    <Table>\r\n                      <tr>\r\n                        <td style={{ width: '5%' }}>\r\n                          <i className='large material-icons d-flex self-align-center'>\r\n                            note\r\n                          </i>\r\n                        </td>\r\n                        <td className='d-flex self-align-item '>\r\n                          {item.invoice_number}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td style={{ width: '5%' }}>\r\n                          <i className='large material-icons d-flex self-align-center'>\r\n                            date_range\r\n                          </i>\r\n                        </td>\r\n                        <td className='d-flex self-align-item'>\r\n                          {moment(item.created_at).format('LLL')}\r\n                        </td>\r\n                      </tr>\r\n                      <tr className='border-bottom'>\r\n                        <td style={{ width: '5%' }}>\r\n                          <i className='large material-icons d-flex self-align-center'>\r\n                            note_add\r\n                          </i>\r\n                        </td>\r\n                        <td className='d-flex self-align-item'>\r\n                          {item.transaction_type === 'CO' ||\r\n                          item.transaction_type === 'ALL'\r\n                            ? 'CUSTOM ORDER'\r\n                            : 'Regular Order'}\r\n                        </td>\r\n                      </tr>\r\n                    </Table>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n              <div className='col-4'>\r\n                <Card>\r\n                  <CardHeader>Detail Pelanggan</CardHeader>\r\n                  <CardBody>\r\n                    <Table>\r\n                      <tr>\r\n                        <td style={{ width: '5%' }}>\r\n                          <i className='large material-icons d-flex self-align-center'>\r\n                            account_circle\r\n                          </i>\r\n                        </td>\r\n                        <td className='d-flex self-align-item '>\r\n                          {item.customer}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td style={{ width: '5%' }}>\r\n                          <i className='large material-icons d-flex self-align-center'>\r\n                            email\r\n                          </i>\r\n                        </td>\r\n                        <td className='d-flex self-align-item'>{item.email}</td>\r\n                      </tr>\r\n                      <tr className='border-bottom'>\r\n                        <td style={{ width: '5%' }}>\r\n                          <i className='large material-icons d-flex self-align-center'>\r\n                            phone_iphone\r\n                          </i>\r\n                        </td>\r\n                        <td className='d-flex self-align-item'>\r\n                          {item.handphone}\r\n                        </td>\r\n                      </tr>\r\n                    </Table>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n              <div className='col-4'>\r\n                <Card>\r\n                  <CardHeader>Detail Pembayaran</CardHeader>\r\n                  <CardBody>\r\n                    <Table>\r\n                      <tr>\r\n                        <td style={{ width: '5%' }}>\r\n                          <i className='large material-icons d-flex self-align-center '>\r\n                            credit_card\r\n                          </i>\r\n                        </td>\r\n                        <td className='d-flex self-align-item '>\r\n                          Bank Transfer\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td style={{ width: '5%' }}>\r\n                          <i className='large material-icons d-flex self-align-center'>\r\n                            sync\r\n                          </i>\r\n                        </td>\r\n                        <td className='d-flex self-align-item'>\r\n                          {item.payment_status}\r\n                        </td>\r\n                      </tr>\r\n                      <tr className='border-bottom'>\r\n                        <td style={{ width: '5%' }}>\r\n                          <i className='large material-icons d-flex self-align-center'>\r\n                            note_add\r\n                          </i>\r\n                        </td>\r\n                        <td className='d-flex self-align-item'>\r\n                          {item.notes === null ? '-' : 'Obat Racik'}\r\n                        </td>\r\n                      </tr>\r\n                    </Table>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n            </div>\r\n            <div className='row'>\r\n              <div className='col-12'>\r\n                <hr />\r\n                <Card>\r\n                  <CardHeader>Pesanan</CardHeader>\r\n                  <CardBody>\r\n                    <Table className='table table-bordered mb-5'>\r\n                      <thead>\r\n                        <tr>\r\n                          <th style={{ width: '80%' }}>Alamat Pengiriman</th>\r\n                          <td>Keterangan</td>\r\n                        </tr>\r\n                        <tr className='border-bottom'>\r\n                          <td style={{ width: '80%' }}>\r\n                            <p>{item.alamat_detail}</p>\r\n                            <p>\r\n                              {item.kecamatan}, {item.kota} - {item.provinsi}\r\n                            </p>\r\n                          </td>\r\n                          <td>{item.notes === null ? '-' : item.notes}</td>\r\n                        </tr>\r\n                      </thead>\r\n                    </Table>\r\n\r\n                    <Table className='table table-bordered'>\r\n                      <thead>\r\n                        <tr>\r\n                          <th className='w-50'>Produk</th>\r\n                          <th className='text-center'>Type Produk</th>\r\n                          <th className='text-center'>Qty (Obat Racik)</th>\r\n                          <th className='text-center'>Qty (Obat Umum)</th>\r\n                          <th className='text-center'>Harga Per Item</th>\r\n                          <th className='text-center'>Total</th>\r\n                        </tr>\r\n                      </thead>\r\n                      {allDetailTransaction.map((trx, i) => (\r\n                        <thead>\r\n                          <tr className='border-bottom'>\r\n                            <td>{trx.name}</td>\r\n                            <td className='text-capitalize text-center'>\r\n                              {trx.type_obat}\r\n                            </td>\r\n                            <td className='text-center'>\r\n                              {trx.qty_co === null ? 0 : trx.qty_co}\r\n                            </td>\r\n                            <td className='text-center'>\r\n                              {trx.qty_qo === null ? 0 : trx.qty_qo}\r\n                            </td>\r\n                            <td>\r\n                              Rp\r\n                              {trx.price_pcs === null\r\n                                ? 0\r\n                                : trx.price_pcs.toLocaleString()}\r\n                            </td>\r\n                            <td>\r\n                              Rp\r\n                              {trx.total_price === null\r\n                                ? 0\r\n                                : trx.total_price.toLocaleString()}\r\n                            </td>\r\n                          </tr>\r\n                        </thead>\r\n                      ))}\r\n                      <tfoot>\r\n                        <tr className='border-bottom'>\r\n                          <td colSpan='4'></td>\r\n                          <th className='text-danger'>Ongkos Kirim</th>\r\n                          <th className='text-danger'>\r\n                            - Rp\r\n                            {item.ongkir === null\r\n                              ? '-'\r\n                              : item.ongkir.toLocaleString()}\r\n                          </th>\r\n                        </tr>\r\n                        <tr className='border-bottom'>\r\n                          <td colSpan='4'></td>\r\n                          <th>Total Pembayaran</th>\r\n                          <td>\r\n                            Rp\r\n                            {item.total_payment === null\r\n                              ? 'Belum Bayar'\r\n                              : item.total_payment}\r\n                          </td>\r\n                        </tr>\r\n                      </tfoot>\r\n                    </Table>\r\n                  </CardBody>\r\n                </Card>\r\n                <hr />\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavbarAdmin />\r\n      <div className='row d-flex justify-content-center align-items-center mt-5'>\r\n        <div className='col-10'>\r\n          <div className='row'>\r\n            <div className='col-6'>\r\n              <h3 className='text-left '>Pesanan</h3>\r\n            </div>\r\n            <div className='col-6 d-flex justify-content-end'>\r\n              <Button\r\n                color='danger'\r\n                size='sm mb-3'\r\n                onClick={() => history.push('/admin-transaksi')}\r\n              >\r\n                Kembali\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n\r\n          {renderTrxDetail()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminTransaksiDetail;\r\n","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\pages\\AdminTransaksi\\index.js",["342","343"],"import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { NavbarAdmin } from '../../components';\r\nimport {\r\n  Button,\r\n  Table,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  Input,\r\n} from 'reactstrap';\r\n\r\nconst AdminTransaksi = (props) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  const history = useHistory();\r\n  const { allProducts, allTransaction } = useSelector(\r\n    ({ usersReducer, ProductsReducer, transactionsReducer }) => {\r\n      console.log('alllllllllllllllllllllllllll', transactionsReducer.allTransaction)\r\n      return {\r\n        name: usersReducer.name,\r\n        allProducts: ProductsReducer.allProducts,\r\n        allTransaction: transactionsReducer.allTransaction,\r\n      };\r\n    }\r\n  );\r\n\r\n  const [search, setSearch] = useState([]);\r\n  const onChangeSearch = (e) => {\r\n    console.log(e.target.value);\r\n    let ItemSelected = allTransaction.filter((elem, idx) => {\r\n      let searchValue = elem.name.toLowerCase();\r\n      // console.log(searchValue);\r\n      return searchValue.indexOf(e.target.value) !== -1;\r\n    });\r\n    setSearch(ItemSelected);\r\n  };\r\n\r\n  // search function\r\n  const renderSelected = search.length <= 0 ? allTransaction : search;\r\n  // console.log(Boolean(search.length <= 0));\r\n\r\n  const handleButtonDetail = (idx, idtransaction) => {\r\n    return history.push('/admin-transaksi-detail', {\r\n      index: idx,\r\n      idTrx: idtransaction,\r\n    });\r\n  };\r\n\r\n  // render product lists\r\n  const renderTransactions = () => {\r\n    if(renderSelected)\r\n    return renderSelected.map((item, idx) => {\r\n      return (\r\n        <tr className='text-center' key={idx}>\r\n          <th>{idx + 1}</th>\r\n          <td className='text-left'>{item.invoice_number}</td>\r\n          <td>{item.customer}</td>\r\n          <td className='text-center'>\r\n            {moment(item.created_at).format('LLL')}\r\n          </td>\r\n          <td className='text-center'>\r\n            <span\r\n              className={\r\n                item.payment_status === 'paid'\r\n                  ? 'badge bg-success text-white p-2'\r\n                  : 'badge bg-danger text-white p-2'\r\n              }\r\n            >\r\n              {item.payment_status}\r\n            </span>\r\n          </td>\r\n          <td className='text-center'>{item.transaction_type}</td>\r\n          <th>\r\n            <Button\r\n              color='primary'\r\n              size='sm mr-4'\r\n              onClick={() => handleButtonDetail(idx, item.idtransaction)}\r\n            >\r\n              Detail Transaksi\r\n            </Button>\r\n          </th>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  // Sort Function\r\n  const sortTrx = (tipe, urutan) => {\r\n    setSearch([]);\r\n    if (tipe === 'Pesanan' && urutan === 'ASC') {\r\n      allTransaction.sort((a, b) => {\r\n        let paymentA = a.payment_status.toUpperCase();\r\n        let paymentB = b.payment_status.toUpperCase();\r\n        if (paymentA < paymentB) {\r\n          return -1;\r\n        }\r\n        if (paymentA > paymentB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    } else if (tipe === 'Type' && urutan === 'ASC') {\r\n      allTransaction.sort((a, b) => {\r\n        let typeA = a.transaction_type;\r\n        let typeB = b.transaction_type;\r\n        if (typeA < typeB) {\r\n          return -1;\r\n        }\r\n        if (typeA > typeB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n    {\r\n      renderTransactions();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavbarAdmin />\r\n      <div className='row d-flex justify-content-center align-items-center mt-5'>\r\n        <div className='col-10'>\r\n          <h3 className='text-center mb-4'>Transaksi</h3>\r\n          <hr />\r\n          <div className='row mb-3'>\r\n            <div className='col-8 d-flex justify-content-start'>\r\n              <Input\r\n                placeholder='Cari nama pelanggan'\r\n                className='text-left w-50'\r\n                onChange={onChangeSearch}\r\n              />\r\n            </div>\r\n            <div className='col-4 d-flex justify-content-end'>\r\n              <Dropdown\r\n                isOpen={dropdownOpen}\r\n                toggle={toggle}\r\n                style={{\r\n                  borderRadius: 10,\r\n                  marginBottom: 10,\r\n                }}\r\n              >\r\n                <DropdownToggle\r\n                  caret\r\n                  style={{\r\n                    backgroundColor: 'grey',\r\n                    border: '1px solid #714a4a',\r\n                    width: '100%',\r\n                    paddingTop: 7,\r\n                    paddingBottom: 5,\r\n                    paddingRight: 30,\r\n                    paddingLeft: 30,\r\n                    color: 'white',\r\n                    letterSpacing: 2,\r\n                  }}\r\n                >\r\n                  Sorting\r\n                </DropdownToggle>\r\n                <DropdownMenu className='shadow'>\r\n                  <DropdownItem\r\n                    onClick={() => sortTrx('Pesanan', 'ASC')}\r\n                    className='border-bottom'\r\n                  >\r\n                    Status Pesanan\r\n                  </DropdownItem>\r\n                  <DropdownItem\r\n                    onClick={() => sortTrx('Type', 'ASC')}\r\n                    className='border-bottom'\r\n                  >\r\n                    Type Pesanan\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </Dropdown>\r\n            </div>\r\n          </div>\r\n          <Table hover bordered>\r\n            <thead>\r\n              <tr className='text-center'>\r\n                <th>No</th>\r\n                <th className='w-25'>No Pesanan</th>\r\n                <th>Pelanggan</th>\r\n                <th>Tgl. Pesan</th>\r\n                <th>Status Pesanan</th>\r\n                <th>Type Pesanan</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{renderTransactions()}</tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminTransaksi;\r\n","D:\\alex\\02_Development Dojo\\01_Bootcamps\\Purwadhika\\Coding\\PharmaGO\\pharmago-react\\src\\components\\modalCart.js",["344","345"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Alert, Button, Modal, ModalBody, ModalHeader } from 'reactstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { API_URL } from '../support/urlApi';\r\nimport ModalPayment from './modalPayment';\r\nimport Swal from 'sweetalert2';\r\nimport { getDefaultAddress, quickBuy } from '../redux/actions';\r\n\r\n\r\nconst ModalCart = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [qtyCart, setQtyCart] = useState(props.qty);\r\n    const [visible, setVisible] = useState(false);\r\n    const onDismiss = () => setVisible(false);\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [modal, setModal] = useState(false);\r\n    const toggleModal = () => setModal(!modal);\r\n  \r\n    useEffect(() => {\r\n        dispatch(getDefaultAddress());\r\n      }, []);\r\n    \r\n    const priceBarang = () => {\r\n        let price = props.data.price_pcs * qtyCart\r\n        return price\r\n    }\r\n\r\n    const { iduser, defaultAddress, idpayment} = useSelector((state) => {\r\n        return {\r\n            iduser: state.usersReducer.iduser,\r\n            defaultAddress: state.usersReducer.defaultAddress[0],\r\n            idpayment: state.transactionsReducer.idpayment\r\n        };\r\n    });\r\n\r\n    const btQtyCart = (value) => {\r\n        if (value === '+') {\r\n            if (qtyCart < props.data.stock_pcs) {\r\n                setQtyCart(qtyCart + 1);\r\n            } else if (qtyCart === props.data.stock_pcs) {\r\n                setVisible(true);\r\n            }\r\n        } else if (value === '-') {\r\n            if (qtyCart > 1) {\r\n                setQtyCart(qtyCart - 1);\r\n                setVisible(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const totalOngkir = () => {\r\n        return 10000;\r\n      };\r\n    \r\n    const checkOut = () => {\r\n        let transaction_type = 'QO';\r\n        let ongkir = totalOngkir();\r\n\r\n        let checkOut = { 'idproduct': props.data.idproduct, \"iduser\": iduser, \"note\": '', \"qty_qo\": qtyCart, \"total_price\": (props.data.price_pcs * qtyCart) }\r\n\r\n        console.log(\"cek bawaan button checkout: \", checkOut, ongkir, defaultAddress.iduser_address, transaction_type)\r\n        dispatch(quickBuy(checkOut, ongkir, defaultAddress.iduser_address, transaction_type))\r\n    }\r\n\r\n    const paymentSuccess = () => {\r\n        let timerInterval;\r\n        Swal.fire({\r\n            title: 'Payment in Progress',\r\n            html: 'I will close after payment confirmed.',\r\n            timer: 3000,\r\n            timerProgressBar: true,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n                timerInterval = setInterval(() => {\r\n                    const content = Swal.getContent();\r\n                    if (content) {\r\n                        const b = content.querySelector('b');\r\n                        if (b) {\r\n                            b.textContent = Swal.getTimerLeft();\r\n                        }\r\n                    }\r\n                }, 100);\r\n            },\r\n            willClose: () => {\r\n                clearInterval(timerInterval);\r\n            },\r\n        });\r\n        setTimeout(\r\n            () =>\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Your Payment Has Been Confirmed',\r\n                    showConfirmButton: false,\r\n                    timer: 2000,\r\n                }),\r\n            3000\r\n        );\r\n\r\n        setTimeout(() => setRedirect(true), 5000);\r\n    };\r\n\r\n    if (redirect) {\r\n        return <Redirect to='order-list' />;\r\n    }\r\n    return (\r\n        <Modal isOpen={props.modal} toggle={props.toggleModal} style={{ marginTop: '15vw' }}>\r\n            <ModalHeader toggle={props.toggleModal}>Lakukan Pembelian Cepat</ModalHeader>\r\n            <ModalBody className='d-flex'>\r\n                <img src={API_URL + props.data.product_image} alt={props.data.name} width='30%' style={{ flex: 1 }} />\r\n                <div style={{ flex: 1, marginLeft: 20, marginRight: 20 }}>\r\n                    <h6>{props.data.name}</h6>\r\n                    <p>Rp. {priceBarang().toLocaleString()}</p>\r\n\r\n                    <Button disabled={qtyCart === 1} color='warning' style={{ marginTop: 15, borderRadius: 15, width: 30, height: 30, letterSpacing: 2, textAlign: 'center', }} onClick={() => btQtyCart('-')}                    >\r\n                        <p style={{ marginLeft: -3, marginTop: -14, fontWeight: 'bolder', fontSize: 25, }}> -  </p>\r\n                    </Button>\r\n                    <Button color='success' disabled outline style={{ marginTop: 15, borderRadius: 15, width: 60, height: 30, letterSpacing: 2, textAlign: 'center', marginLeft: 5, marginRight: 5, }}                    >\r\n                        <p style={{ marginTop: -5, fontWeight: 'bolder', fontSize: 16, color: 'black', }}   >\r\n                            {qtyCart}\r\n                        </p>\r\n                    </Button>\r\n                    <Button color='warning' style={{ marginTop: 15, borderRadius: 15, width: 30, height: 30, letterSpacing: 2, textAlign: 'center', marginRight: 10, }} onClick={() => btQtyCart('+')}                    >\r\n                        <p style={{ marginLeft: -7, marginTop: -14, fontWeight: 'bolder', fontSize: 25, }}> + </p>\r\n                    </Button>\r\n                    {/* <Button color=\"success\" onClick={() => { dispatch(payment(props.idpayment)); props.paymentSuccess() }} block style={{ marginTop: '4vw' }}>Konfirmasi Pembayaran</Button>{' '} */}\r\n                    <Alert fade={true} isOpen={visible} toggle={() => onDismiss()} color='danger' style={{ marginTop: 10, fontWeight: 'bold' }}            >\r\n                        Sudah Mencapai Maksimal Jumlah Stock\r\n                </Alert>\r\n                    <Button color=\"success\" block style={{ marginTop: '4vw' }} onClick={()=> {checkOut(); toggleModal()}}>Konfirmasi Pesanan</Button>\r\n                </div>\r\n            </ModalBody>\r\n            <ModalPayment\r\n                modal={modal}\r\n                toggleModal={toggleModal}\r\n                idpayment={idpayment}\r\n                paymentSuccess={paymentSuccess}\r\n            />\r\n\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default ModalCart;",{"ruleId":"346","replacedBy":"347"},{"ruleId":"348","replacedBy":"349"},{"ruleId":"350","severity":1,"message":"351","line":42,"column":6,"nodeType":"352","endLine":42,"endColumn":8,"suggestions":"353"},{"ruleId":"350","severity":1,"message":"354","line":23,"column":8,"nodeType":"352","endLine":23,"endColumn":10,"suggestions":"355"},{"ruleId":"356","severity":1,"message":"357","line":86,"column":9,"nodeType":"358","messageId":"359","endLine":86,"endColumn":28},{"ruleId":"350","severity":1,"message":"354","line":28,"column":8,"nodeType":"352","endLine":28,"endColumn":10,"suggestions":"360"},{"ruleId":"361","severity":1,"message":"362","line":71,"column":11,"nodeType":"363","messageId":"364","endLine":71,"endColumn":17},{"ruleId":"365","severity":1,"message":"366","line":153,"column":41,"nodeType":"367","endLine":171,"endColumn":43},{"ruleId":"368","severity":1,"message":"369","line":11,"column":1,"nodeType":"370","endLine":34,"endColumn":2},{"ruleId":"368","severity":1,"message":"369","line":9,"column":1,"nodeType":"370","endLine":55,"endColumn":3},{"ruleId":"368","severity":1,"message":"369","line":13,"column":1,"nodeType":"370","endLine":58,"endColumn":3},{"ruleId":"371","severity":1,"message":"372","line":70,"column":54,"nodeType":"363","messageId":"373","endLine":70,"endColumn":61},{"ruleId":"371","severity":1,"message":"372","line":71,"column":45,"nodeType":"363","messageId":"373","endLine":71,"endColumn":52},{"ruleId":"371","severity":1,"message":"372","line":76,"column":74,"nodeType":"363","messageId":"373","endLine":76,"endColumn":81},{"ruleId":"350","severity":1,"message":"351","line":11,"column":6,"nodeType":"352","endLine":11,"endColumn":8,"suggestions":"374"},{"ruleId":"361","severity":1,"message":"375","line":4,"column":21,"nodeType":"363","messageId":"364","endLine":4,"endColumn":29},{"ruleId":"361","severity":1,"message":"376","line":4,"column":31,"nodeType":"363","messageId":"364","endLine":4,"endColumn":37},{"ruleId":"350","severity":1,"message":"351","line":15,"column":6,"nodeType":"352","endLine":15,"endColumn":8,"suggestions":"377"},{"ruleId":"365","severity":1,"message":"366","line":50,"column":11,"nodeType":"367","endLine":50,"endColumn":72},{"ruleId":"365","severity":1,"message":"366","line":41,"column":13,"nodeType":"367","endLine":45,"endColumn":15},{"ruleId":"361","severity":1,"message":"378","line":2,"column":16,"nodeType":"363","messageId":"364","endLine":2,"endColumn":24},{"ruleId":"361","severity":1,"message":"379","line":12,"column":3,"nodeType":"363","messageId":"364","endLine":12,"endColumn":9},{"ruleId":"361","severity":1,"message":"380","line":14,"column":3,"nodeType":"363","messageId":"364","endLine":14,"endColumn":7},{"ruleId":"361","severity":1,"message":"381","line":16,"column":3,"nodeType":"363","messageId":"364","endLine":16,"endColumn":10},{"ruleId":"361","severity":1,"message":"382","line":19,"column":58,"nodeType":"363","messageId":"364","endLine":19,"endColumn":67},{"ruleId":"361","severity":1,"message":"383","line":25,"column":10,"nodeType":"363","messageId":"364","endLine":25,"endColumn":17},{"ruleId":"361","severity":1,"message":"384","line":43,"column":52,"nodeType":"363","messageId":"364","endLine":43,"endColumn":60},{"ruleId":"361","severity":1,"message":"385","line":43,"column":72,"nodeType":"363","messageId":"364","endLine":43,"endColumn":85},{"ruleId":"350","severity":1,"message":"351","line":59,"column":6,"nodeType":"352","endLine":59,"endColumn":8,"suggestions":"386"},{"ruleId":"361","severity":1,"message":"387","line":89,"column":9,"nodeType":"363","messageId":"364","endLine":89,"endColumn":29},{"ruleId":"361","severity":1,"message":"388","line":93,"column":9,"nodeType":"363","messageId":"364","endLine":93,"endColumn":30},{"ruleId":"365","severity":1,"message":"366","line":204,"column":9,"nodeType":"367","endLine":204,"endColumn":60},{"ruleId":"365","severity":1,"message":"366","line":218,"column":17,"nodeType":"367","endLine":218,"endColumn":62},{"ruleId":"361","severity":1,"message":"389","line":1,"column":17,"nodeType":"363","messageId":"364","endLine":1,"endColumn":25},{"ruleId":"365","severity":1,"message":"366","line":43,"column":21,"nodeType":"367","endLine":51,"endColumn":23},{"ruleId":"361","severity":1,"message":"389","line":1,"column":28,"nodeType":"363","messageId":"364","endLine":1,"endColumn":36},{"ruleId":"350","severity":1,"message":"390","line":11,"column":8,"nodeType":"352","endLine":11,"endColumn":10,"suggestions":"391"},{"ruleId":"361","severity":1,"message":"392","line":19,"column":3,"nodeType":"363","messageId":"364","endLine":19,"endColumn":13},{"ruleId":"361","severity":1,"message":"393","line":23,"column":3,"nodeType":"363","messageId":"364","endLine":23,"endColumn":10},{"ruleId":"361","severity":1,"message":"394","line":25,"column":3,"nodeType":"363","messageId":"364","endLine":25,"endColumn":13},{"ruleId":"361","severity":1,"message":"395","line":26,"column":3,"nodeType":"363","messageId":"364","endLine":26,"endColumn":12},{"ruleId":"350","severity":1,"message":"351","line":57,"column":6,"nodeType":"352","endLine":57,"endColumn":8,"suggestions":"396"},{"ruleId":"356","severity":1,"message":"357","line":330,"column":5,"nodeType":"358","messageId":"359","endLine":334,"endColumn":6},{"ruleId":"397","severity":1,"message":"398","line":521,"column":21,"nodeType":"399","endLine":521,"endColumn":63},{"ruleId":"365","severity":1,"message":"366","line":628,"column":13,"nodeType":"367","endLine":632,"endColumn":15},{"ruleId":"368","severity":1,"message":"369","line":10,"column":1,"nodeType":"370","endLine":36,"endColumn":2},{"ruleId":"361","severity":1,"message":"381","line":3,"column":26,"nodeType":"363","messageId":"364","endLine":3,"endColumn":33},{"ruleId":"361","severity":1,"message":"400","line":3,"column":35,"nodeType":"363","messageId":"364","endLine":3,"endColumn":43},{"ruleId":"350","severity":1,"message":"351","line":13,"column":8,"nodeType":"352","endLine":13,"endColumn":10,"suggestions":"401"},{"ruleId":"361","severity":1,"message":"402","line":15,"column":13,"nodeType":"363","messageId":"364","endLine":15,"endColumn":19},{"ruleId":"361","severity":1,"message":"403","line":15,"column":21,"nodeType":"363","messageId":"364","endLine":15,"endColumn":29},{"ruleId":"361","severity":1,"message":"404","line":15,"column":31,"nodeType":"363","messageId":"364","endLine":15,"endColumn":45},{"ruleId":"361","severity":1,"message":"405","line":15,"column":47,"nodeType":"363","messageId":"364","endLine":15,"endColumn":61},{"ruleId":"368","severity":1,"message":"369","line":4,"column":1,"nodeType":"370","endLine":20,"endColumn":3},{"ruleId":"406","severity":1,"message":"407","line":18,"column":25,"nodeType":"408","messageId":"409","endLine":18,"endColumn":27},{"ruleId":"365","severity":1,"message":"366","line":29,"column":25,"nodeType":"367","endLine":29,"endColumn":83},{"ruleId":"361","severity":1,"message":"410","line":1,"column":17,"nodeType":"363","messageId":"364","endLine":1,"endColumn":26},{"ruleId":"361","severity":1,"message":"411","line":2,"column":10,"nodeType":"363","messageId":"364","endLine":2,"endColumn":21},{"ruleId":"361","severity":1,"message":"412","line":3,"column":10,"nodeType":"363","messageId":"364","endLine":3,"endColumn":14},{"ruleId":"361","severity":1,"message":"378","line":3,"column":16,"nodeType":"363","messageId":"364","endLine":3,"endColumn":24},{"ruleId":"361","severity":1,"message":"413","line":3,"column":26,"nodeType":"363","messageId":"364","endLine":3,"endColumn":36},{"ruleId":"361","severity":1,"message":"379","line":8,"column":3,"nodeType":"363","messageId":"364","endLine":8,"endColumn":9},{"ruleId":"361","severity":1,"message":"414","line":11,"column":3,"nodeType":"363","messageId":"364","endLine":11,"endColumn":8},{"ruleId":"361","severity":1,"message":"415","line":13,"column":3,"nodeType":"363","messageId":"364","endLine":13,"endColumn":7},{"ruleId":"361","severity":1,"message":"416","line":14,"column":3,"nodeType":"363","messageId":"364","endLine":14,"endColumn":12},{"ruleId":"361","severity":1,"message":"417","line":15,"column":3,"nodeType":"363","messageId":"364","endLine":15,"endColumn":8},{"ruleId":"361","severity":1,"message":"418","line":16,"column":3,"nodeType":"363","messageId":"364","endLine":16,"endColumn":8},{"ruleId":"419","severity":1,"message":"420","line":41,"column":37,"nodeType":"421","messageId":"422","endLine":41,"endColumn":39},{"ruleId":"361","severity":1,"message":"410","line":1,"column":17,"nodeType":"363","messageId":"364","endLine":1,"endColumn":26},{"ruleId":"361","severity":1,"message":"412","line":3,"column":10,"nodeType":"363","messageId":"364","endLine":3,"endColumn":14},{"ruleId":"361","severity":1,"message":"378","line":3,"column":16,"nodeType":"363","messageId":"364","endLine":3,"endColumn":24},{"ruleId":"361","severity":1,"message":"423","line":4,"column":8,"nodeType":"363","messageId":"364","endLine":4,"endColumn":18},{"ruleId":"361","severity":1,"message":"424","line":14,"column":3,"nodeType":"363","messageId":"364","endLine":14,"endColumn":11},{"ruleId":"361","severity":1,"message":"425","line":18,"column":3,"nodeType":"363","messageId":"364","endLine":18,"endColumn":15},{"ruleId":"361","severity":1,"message":"426","line":25,"column":11,"nodeType":"363","messageId":"364","endLine":25,"endColumn":22},{"ruleId":"361","severity":1,"message":"427","line":61,"column":5,"nodeType":"363","messageId":"364","endLine":61,"endColumn":14},{"ruleId":"361","severity":1,"message":"428","line":62,"column":5,"nodeType":"363","messageId":"364","endLine":62,"endColumn":18},{"ruleId":"361","severity":1,"message":"429","line":63,"column":5,"nodeType":"363","messageId":"364","endLine":63,"endColumn":19},{"ruleId":"361","severity":1,"message":"430","line":64,"column":5,"nodeType":"363","messageId":"364","endLine":64,"endColumn":15},{"ruleId":"361","severity":1,"message":"431","line":65,"column":5,"nodeType":"363","messageId":"364","endLine":65,"endColumn":21},{"ruleId":"361","severity":1,"message":"432","line":66,"column":5,"nodeType":"363","messageId":"364","endLine":66,"endColumn":24},{"ruleId":"361","severity":1,"message":"433","line":67,"column":5,"nodeType":"363","messageId":"364","endLine":67,"endColumn":21},{"ruleId":"361","severity":1,"message":"434","line":68,"column":5,"nodeType":"363","messageId":"364","endLine":68,"endColumn":19},{"ruleId":"361","severity":1,"message":"435","line":74,"column":5,"nodeType":"363","messageId":"364","endLine":74,"endColumn":14},{"ruleId":"361","severity":1,"message":"436","line":79,"column":5,"nodeType":"363","messageId":"364","endLine":79,"endColumn":23},{"ruleId":"361","severity":1,"message":"437","line":80,"column":5,"nodeType":"363","messageId":"364","endLine":80,"endColumn":27},{"ruleId":"361","severity":1,"message":"438","line":81,"column":5,"nodeType":"363","messageId":"364","endLine":81,"endColumn":22},{"ruleId":"361","severity":1,"message":"439","line":108,"column":7,"nodeType":"363","messageId":"364","endLine":108,"endColumn":25},{"ruleId":"361","severity":1,"message":"410","line":1,"column":27,"nodeType":"363","messageId":"364","endLine":1,"endColumn":36},{"ruleId":"361","severity":1,"message":"410","line":1,"column":17,"nodeType":"363","messageId":"364","endLine":1,"endColumn":26},{"ruleId":"365","severity":1,"message":"366","line":51,"column":29,"nodeType":"367","endLine":51,"endColumn":98},{"ruleId":"361","severity":1,"message":"381","line":3,"column":34,"nodeType":"363","messageId":"364","endLine":3,"endColumn":41},{"ruleId":"361","severity":1,"message":"393","line":4,"column":51,"nodeType":"363","messageId":"364","endLine":4,"endColumn":58},{"ruleId":"350","severity":1,"message":"354","line":26,"column":8,"nodeType":"352","endLine":26,"endColumn":10,"suggestions":"440"},{"ruleId":"361","severity":1,"message":"402","line":28,"column":13,"nodeType":"363","messageId":"364","endLine":28,"endColumn":19},{"ruleId":"365","severity":1,"message":"366","line":53,"column":33,"nodeType":"367","endLine":53,"endColumn":160},{"ruleId":"365","severity":1,"message":"366","line":55,"column":33,"nodeType":"367","endLine":55,"endColumn":87},{"ruleId":"406","severity":1,"message":"407","line":88,"column":61,"nodeType":"408","messageId":"409","endLine":88,"endColumn":63},{"ruleId":"406","severity":1,"message":"407","line":154,"column":65,"nodeType":"408","messageId":"409","endLine":154,"endColumn":67},{"ruleId":"365","severity":1,"message":"366","line":159,"column":37,"nodeType":"367","endLine":159,"endColumn":204},{"ruleId":"406","severity":1,"message":"407","line":171,"column":53,"nodeType":"408","messageId":"409","endLine":171,"endColumn":55},{"ruleId":"361","severity":1,"message":"412","line":3,"column":10,"nodeType":"363","messageId":"364","endLine":3,"endColumn":14},{"ruleId":"361","severity":1,"message":"378","line":3,"column":16,"nodeType":"363","messageId":"364","endLine":3,"endColumn":24},{"ruleId":"361","severity":1,"message":"423","line":4,"column":8,"nodeType":"363","messageId":"364","endLine":4,"endColumn":18},{"ruleId":"361","severity":1,"message":"424","line":14,"column":3,"nodeType":"363","messageId":"364","endLine":14,"endColumn":11},{"ruleId":"361","severity":1,"message":"425","line":18,"column":3,"nodeType":"363","messageId":"364","endLine":18,"endColumn":15},{"ruleId":"361","severity":1,"message":"441","line":21,"column":10,"nodeType":"363","messageId":"364","endLine":21,"endColumn":20},{"ruleId":"361","severity":1,"message":"442","line":22,"column":10,"nodeType":"363","messageId":"364","endLine":22,"endColumn":17},{"ruleId":"350","severity":1,"message":"351","line":31,"column":6,"nodeType":"352","endLine":31,"endColumn":8,"suggestions":"443"},{"ruleId":"361","severity":1,"message":"426","line":33,"column":11,"nodeType":"363","messageId":"364","endLine":33,"endColumn":22},{"ruleId":"361","severity":1,"message":"436","line":95,"column":36,"nodeType":"363","messageId":"364","endLine":95,"endColumn":54},{"ruleId":"365","severity":1,"message":"366","line":414,"column":19,"nodeType":"367","endLine":414,"endColumn":73},{"ruleId":"350","severity":1,"message":"444","line":27,"column":6,"nodeType":"352","endLine":27,"endColumn":8,"suggestions":"445"},{"ruleId":"419","severity":1,"message":"420","line":32,"column":43,"nodeType":"421","messageId":"422","endLine":32,"endColumn":45},{"ruleId":"361","severity":1,"message":"446","line":20,"column":11,"nodeType":"363","messageId":"364","endLine":20,"endColumn":22},{"ruleId":"356","severity":1,"message":"357","line":119,"column":5,"nodeType":"358","messageId":"359","endLine":121,"endColumn":6},{"ruleId":"361","severity":1,"message":"412","line":4,"column":10,"nodeType":"363","messageId":"364","endLine":4,"endColumn":14},{"ruleId":"350","severity":1,"message":"351","line":23,"column":10,"nodeType":"352","endLine":23,"endColumn":12,"suggestions":"447"},"no-native-reassign",["448"],"no-negated-in-lhs",["449"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["450"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.location.search'. Either include them or remove the dependency array.",["451"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["452"],"no-unused-vars","'btBeli' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-use-before-define","'results' was used before it was defined.","usedBeforeDefined",["453"],"'DrugIcon' is defined but never used.","'IvIcon' is defined but never used.",["454"],"'Redirect' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardImg' is defined but never used.","'getDetail' is defined but never used.","'loading' is assigned a value but never used.","'products' is assigned a value but never used.","'detailProduct' is assigned a value but never used.",["455"],"'openAlertForPassword' is assigned a value but never used.","'closeAlertForPassword' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'iduser'. Either include them or remove the dependency array.",["456"],"'deleteCart' is defined but never used.","'payment' is defined but never used.","'updateNote' is defined but never used.","'updateQty' is defined but never used.",["457"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'CardText' is defined but never used.",["458"],"'iduser' is assigned a value but never used.","'cartUser' is assigned a value but never used.","'customProducts' is assigned a value but never used.","'defaultAddress' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'Table' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'classnames' is defined but never used.","'FormText' is defined but never used.","'FormFeedback' is defined but never used.","'errorStatus' is assigned a value but never used.","'desc_umum' is assigned a value but never used.","'desc_indikasi' is assigned a value but never used.","'desc_komposisi' is assigned a value but never used.","'desc_dosis' is assigned a value but never used.","'desc_aturanpakai' is assigned a value but never used.","'desc_kontraindikasi' is assigned a value but never used.","'desc_efeksamping' is assigned a value but never used.","'desc_perhatian' is assigned a value but never used.","'isPublish' is assigned a value but never used.","'product_image_file' is assigned a value but never used.","'banner_image_file_name' is assigned a value but never used.","'banner_image_file' is assigned a value but never used.","'checkPositifNumber' is assigned a value but never used.",["459"],"'addProduct' is defined but never used.","'API_URL' is defined but never used.",["460"],"React Hook useEffect has missing dependencies: 'dispatch' and 'idTrx'. Either include them or remove the dependency array.",["461"],"'allProducts' is assigned a value but never used.",["462"],"no-global-assign","no-unsafe-negation",{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"desc":"465","fix":"467"},{"desc":"463","fix":"468"},{"desc":"463","fix":"469"},{"desc":"463","fix":"470"},{"desc":"471","fix":"472"},{"desc":"463","fix":"473"},{"desc":"463","fix":"474"},{"desc":"465","fix":"475"},{"desc":"463","fix":"476"},{"desc":"477","fix":"478"},{"desc":"463","fix":"479"},"Update the dependencies array to be: [dispatch]",{"range":"480","text":"481"},"Update the dependencies array to be: [dispatch, props.location.search]",{"range":"482","text":"483"},{"range":"484","text":"483"},{"range":"485","text":"481"},{"range":"486","text":"481"},{"range":"487","text":"481"},"Update the dependencies array to be: [dispatch, iduser]",{"range":"488","text":"489"},{"range":"490","text":"481"},{"range":"491","text":"481"},{"range":"492","text":"483"},{"range":"493","text":"481"},"Update the dependencies array to be: [dispatch, idTrx]",{"range":"494","text":"495"},{"range":"496","text":"481"},[1079,1081],"[dispatch]",[885,887],"[dispatch, props.location.search]",[1178,1180],[329,331],[472,474],[2096,2098],[298,300],"[dispatch, iduser]",[1537,1539],[497,499],[932,934],[754,756],[964,966],"[dispatch, idTrx]",[883,885]]